{
    "openapi": "3.0.1",
    "info": {
        "title": "Harbor",
        "description": "Harbor SBOM Management API",
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "https://d3qet91h5q7sf6.cloudfront.net",
            "variables": {
                "basePath": {
                    "default": ""
                }
            }
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "Operations related to authentication concerns of the system."
        },
        {
            "name": "team",
            "description": "Operations related to the team entity."
        },
        {
            "name": "member",
            "description": "Operations related to the member entity."
        },
        {
            "name": "project",
            "description": "Operations related to the project entity."
        },
        {
            "name": "codebase",
            "description": "Operations related to the codebase entity."
        },
        {
            "name": "token",
            "description": "Operations related to the token entity."
        }
    ],
    "paths": {
        "/api/v1/login": {
            "post": {
                "summary": "Authenticate with a username and password.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/login"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/apiKey"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:SBOMLoginLambda-v1/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/user/search": {
            "get": {
                "summary": "Search for members by email.",
                "tags": [
                    "auth"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/userList"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/filterQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:SBOMUserSearchLambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/team": {
            "post": {
                "summary": "Create a new team.",
                "tags": [
                    "team"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/team"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/team"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Team_POST_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/team/{teamId}": {
            "get": {
                "summary": "Get an existing team.",
                "tags": [
                    "team"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/team"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamId"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Team_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "put": {
                "summary": "Modify an existing team.",
                "tags": [
                    "team"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/team"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/team"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamId"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Team_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "delete": {
                "summary": "Delete an existing team.",
                "tags": [
                    "team"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/team"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamId"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Team_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/teams": {
            "get": {
                "summary": "Get all existing teams.",
                "tags": [
                    "team"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/teamList"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Teams_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/member": {
            "post": {
                "summary": "Add a member to a team. Creates member if they do not exist.",
                "tags": [
                    "member"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/member"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/member"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Member_POST_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/member/{memberId}": {
            "get": {
                "summary": "Get an existing member.",
                "tags": [
                    "member"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/member"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/memberId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Member_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "put": {
                "summary": "Modify an existing member.",
                "tags": [
                    "member"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/member"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/member"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/memberId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Member_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "delete": {
                "summary": "Delete an existing member from a team.",
                "tags": [
                    "member"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/member"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/memberId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Member_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/members": {
            "get": {
                "summary": "Get all existing members for a team.",
                "tags": [
                    "member"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/memberList"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Members_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/project": {
            "post": {
                "summary": "Create a project for a team.",
                "tags": [
                    "project"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/project"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/project"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Project_POST_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/project/{projectId}": {
            "get": {
                "summary": "Get an existing project.",
                "tags": [
                    "project"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/project"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/projectId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Project_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "put": {
                "summary": "Modify an existing project.",
                "tags": [
                    "project"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/project"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/project"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/projectId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Project_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "delete": {
                "summary": "Delete an existing project.",
                "tags": [
                    "project"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/project"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/projectId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Project_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "summary": "Get all projects for a team.",
                "tags": [
                    "project"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/projectList"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/childrenQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Projects_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/codebase": {
            "post": {
                "summary": "Create a codebase for a project.",
                "tags": [
                    "codebase"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/codebase"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/codebase"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/projectIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Codebase_POST_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/codebase/{codebaseId}": {
            "get": {
                "summary": "Get an existing codebase.",
                "tags": [
                    "codebase"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/codebase"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/codebaseId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/projectIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Codebase_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "put": {
                "summary": "Modify an existing codebase.",
                "tags": [
                    "codebase"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/codebase"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/codebase"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/codebaseId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/projectIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Codebase_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "delete": {
                "summary": "Delete an existing codebase.",
                "tags": [
                    "codebase"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/codebase"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/codebaseId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/projectIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Codebase_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/codebases": {
            "get": {
                "summary": "Get all codebases for a project.",
                "tags": [
                    "codebase"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/codebaseList"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    },
                    {
                        "$ref": "#/components/parameters/projectIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Codebases_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/token": {
            "post": {
                "summary": "Create a token for a team.",
                "tags": [
                    "token"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/token"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/token"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Token_POST_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/token/{tokenId}": {
            "get": {
                "summary": "Get an existing token.",
                "tags": [
                    "token"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/token"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tokenId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Token_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "put": {
                "summary": "Modify an existing token.",
                "tags": [
                    "token"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/token"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/token"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tokenId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Token_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            },
            "delete": {
                "summary": "Delete an existing token.",
                "tags": [
                    "token"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/token"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tokenId"
                    },
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Token_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/tokens": {
            "get": {
                "summary": "Get all tokens for a team.",
                "tags": [
                    "token"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tokenList"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/teamIdQuery"
                    }
                ],
                "security": [
                    {
                        "SBOMApi_HttpLambdaAuthorizer_NAME": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:Harbor_Tokens_Lambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        },
        "/api/v1/{teamId}/{projectId}/{codebaseId}/sbom": {
            "post": {
                "summary": "Upload an SBOM to the Enrichment Engine.",
                "tags": [
                    "enrichment"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/sbom"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/uploadResult"
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/codebaseId"
                    },
                    {
                        "$ref": "#/components/parameters/teamId"
                    },
                    {
                        "$ref": "#/components/parameters/projectId"
                    }
                ],
                "security": [
                    {
                        "UPLOAD_SBOM_HttpLambdaAuthorizer": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "payloadFormatVersion": "2.0",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:SbomIngressLambda/invocations",
                    "connectionType": "INTERNET"
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "SBOMApi_HttpLambdaAuthorizer_NAME": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authorizer": {
                    "identitySource": "$request.header.Authorization",
                    "authorizerUri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:SBOMAPIAuthorizer_Authorizer/invocations",
                    "authorizerPayloadFormatVersion": "1.0",
                    "authorizerResultTtlInSeconds": 300,
                    "type": "request",
                    "enableSimpleResponses": false
                }
            },
            "UPLOAD_SBOM_HttpLambdaAuthorizer": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authorizer": {
                    "identitySource": "$request.header.Authorization",
                    "authorizerUri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:393419659647:function:APIKeyAuthorizer/invocations",
                    "authorizerPayloadFormatVersion": "1.0",
                    "authorizerResultTtlInSeconds": 300,
                    "type": "request",
                    "enableSimpleResponses": false
                }
            }
        },
        "schemas": {
            "login": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "password"
                ]
            },
            "team": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/member"
                        }
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/project"
                        }
                    }
                },
                "required": [
                    "name"
                ]
            },
            "member": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "isTeamLead": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "email",
                    "isTeamLead"
                ]
            },
            "project": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "fisma": {
                        "type": "string"
                    },
                    "codebases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/codebase"
                        }
                    }
                },
                "required": [
                    "name"
                ]
            },
            "codebase": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "buildTool": {
                        "type": "string"
                    },
                    "cloneUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "cloneUrl"
                ]
            },
            "token": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "enabled"
                ]
            },
            "uploadResult": {
                "type": "object",
                "properties": {
                    "valid": {
                        "type": "boolean"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "s3ObjectKey": {
                        "type": "string"
                    }
                }
            },
            "userList": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "parameters": {
            "teamId": {
                "required": true,
                "description": "Unique identifier for a team.",
                "in": "path",
                "name": "teamId",
                "schema": {
                    "type": "string"
                }
            },
            "memberId": {
                "required": true,
                "description": "Unique identifier for a member.",
                "in": "path",
                "name": "memberId",
                "schema": {
                    "type": "string"
                }
            },
            "projectId": {
                "required": true,
                "description": "Unique identifier for a project.",
                "in": "path",
                "name": "projectId",
                "schema": {
                    "type": "string"
                }
            },
            "codebaseId": {
                "required": true,
                "description": "Unique identifier for a codebase.",
                "in": "path",
                "name": "codebaseId",
                "schema": {
                    "type": "string"
                }
            },
            "tokenId": {
                "required": true,
                "description": "Unique identifier for a token.",
                "in": "path",
                "name": "tokenId",
                "schema": {
                    "type": "string"
                }
            },
            "teamIdQuery": {
                "description": "Unique identifier for a team.",
                "in": "query",
                "name": "teamId",
                "schema": {
                    "type": "string"
                }
            },
            "projectIdQuery": {
                "description": "Unique identifier for a project.",
                "in": "query",
                "name": "projectId",
                "schema": {
                    "type": "string"
                }
            },
            "childrenQuery": {
                "description": "Flag indicating whether operation should consider types nested in the primary type.",
                "in": "query",
                "name": "children",
                "schema": {
                    "type": "boolean"
                }
            },
            "filterQuery": {
                "description": "Starts with text filter.",
                "in": "query",
                "name": "filter",
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "login": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/login"
                        }
                    }
                }
            },
            "team": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/team"
                        }
                    }
                }
            },
            "teamList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/team"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "member": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/member"
                        }
                    }
                }
            },
            "memberList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/member"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "project": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/project"
                        }
                    }
                }
            },
            "projectList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/project"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "codebase": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/codebase"
                        }
                    }
                }
            },
            "codebaseList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/codebase"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "token": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/token"
                        }
                    }
                }
            },
            "tokenList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/token"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "sbom": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "http://cyclonedx.org/schema/bom-1.3.schema.json",
                                    "type": "object",
                                    "title": "CycloneDX Software Bill-of-Material Specification",
                                    "$comment": "CycloneDX JSON schema is published under the terms of the Apache License 2.0.",
                                    "required": [
                                        "bomFormat",
                                        "specVersion",
                                        "version"
                                    ],
                                    "properties": {
                                        "bomFormat": {
                                            "$id": "#/properties/bomFormat",
                                            "type": "string",
                                            "title": "BOM Format",
                                            "description": "Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention nor does JSON schema support namespaces.",
                                            "enum": [
                                                "CycloneDX"
                                            ]
                                        },
                                        "specVersion": {
                                            "$id": "#/properties/specVersion",
                                            "type": "string",
                                            "title": "CycloneDX Specification Version",
                                            "description": "The version of the CycloneDX specification a BOM is written to (starting at version 1.2)",
                                            "examples": [
                                                "1.3"
                                            ]
                                        },
                                        "serialNumber": {
                                            "$id": "#/properties/serialNumber",
                                            "type": "string",
                                            "title": "BOM Serial Number",
                                            "description": "Every BOM generated should have a unique serial number, even if the contents of the BOM being generated have not changed over time. The process or tool responsible for creating the BOM should create random UUID's for every BOM generated.",
                                            "examples": [
                                                "urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"
                                            ],
                                            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                                        },
                                        "version": {
                                            "$id": "#/properties/version",
                                            "type": "integer",
                                            "title": "BOM Version",
                                            "description": "The version allows component publishers/authors to make changes to existing BOMs to update various aspects of the document such as description or licenses. When a system is presented with multiple BOMs for the same component, the system should use the most recent version of the BOM. The default version is '1' and should be incremented for each version of the BOM that is published. Each version of a component should have a unique BOM and if no changes are made to the BOMs, then each BOM will have a version of '1'.",
                                            "default": 1,
                                            "examples": [
                                                1
                                            ]
                                        },
                                        "metadata": {
                                            "$id": "#/properties/metadata",
                                            "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/metadata",
                                            "title": "BOM Metadata",
                                            "description": "Provides additional information about a BOM."
                                        },
                                        "components": {
                                            "$id": "#/properties/components",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/component"
                                            },
                                            "uniqueItems": true,
                                            "title": "Components"
                                        },
                                        "services": {
                                            "$id": "#/properties/services",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/service"
                                            },
                                            "uniqueItems": true,
                                            "title": "Services"
                                        },
                                        "externalReferences": {
                                            "$id": "#/properties/externalReferences",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/externalReference"
                                            },
                                            "title": "External References",
                                            "description": "External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."
                                        },
                                        "dependencies": {
                                            "$id": "#/properties/dependencies",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/dependency"
                                            },
                                            "uniqueItems": true,
                                            "title": "Dependencies",
                                            "description": "Provides the ability to document dependency relationships."
                                        },
                                        "compositions": {
                                            "$id": "#/properties/compositions",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/compositions"
                                            },
                                            "uniqueItems": true,
                                            "title": "Compositions",
                                            "description": "Compositions describe constituent parts (including components, services, and dependency relationships) and their completeness."
                                        }
                                    },
                                    "definitions": {
                                        "metadata": {
                                            "type": "object",
                                            "title": "BOM Metadata Object",
                                            "properties": {
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "title": "Timestamp",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "tools": {
                                                    "type": "array",
                                                    "title": "Creation Tools",
                                                    "description": "The tool(s) used in the creation of the BOM.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/tool"
                                                    }
                                                },
                                                "authors": {
                                                    "type": "array",
                                                    "title": "Authors",
                                                    "description": "The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/organizationalContact"
                                                    }
                                                },
                                                "component": {
                                                    "title": "Component",
                                                    "description": "The component that the BOM describes.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/component"
                                                },
                                                "manufacture": {
                                                    "title": "Manufacture",
                                                    "description": "The organization that manufactured the component that the BOM describes.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/organizationalEntity"
                                                },
                                                "supplier": {
                                                    "title": "Supplier",
                                                    "description": " The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/organizationalEntity"
                                                },
                                                "licenses": {
                                                    "type": "array",
                                                    "title": "BOM License(s)",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/licenseChoice"
                                                    }
                                                },
                                                "properties": {
                                                    "type": "array",
                                                    "title": "Properties",
                                                    "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/property"
                                                    }
                                                }
                                            }
                                        },
                                        "tool": {
                                            "type": "object",
                                            "title": "Tool",
                                            "description": "The tool used to create the BOM.",
                                            "properties": {
                                                "vendor": {
                                                    "type": "string",
                                                    "title": "Tool Vendor",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Tool Name",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "title": "Tool Version",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "hashes": {
                                                    "$id": "#/properties/hashes",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/hash"
                                                    },
                                                    "title": "Hashes",
                                                    "description": "The hashes of the tool (if applicable)."
                                                }
                                            }
                                        },
                                        "organizationalEntity": {
                                            "type": "object",
                                            "title": "Organizational Entity Object",
                                            "description": "",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of the organization",
                                                    "examples": [
                                                        "Example Inc."
                                                    ]
                                                },
                                                "url": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "format": "iri-reference"
                                                    },
                                                    "title": "URL",
                                                    "description": "The URL of the organization. Multiple URLs are allowed.",
                                                    "examples": [
                                                        "https://example.com"
                                                    ]
                                                },
                                                "contact": {
                                                    "type": "array",
                                                    "title": "Contact",
                                                    "description": "A contact at the organization. Multiple contacts are allowed.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/organizationalContact"
                                                    }
                                                }
                                            }
                                        },
                                        "organizationalContact": {
                                            "type": "object",
                                            "title": "Organizational Contact Object",
                                            "description": "",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of a contact",
                                                    "examples": [
                                                        "Contact name"
                                                    ]
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "title": "Email Address",
                                                    "description": "The email address of the contact.",
                                                    "examples": [
                                                        "firstname.lastname@example.com"
                                                    ]
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "title": "Phone",
                                                    "description": "The phone number of the contact.",
                                                    "examples": [
                                                        "800-555-1212"
                                                    ]
                                                }
                                            }
                                        },
                                        "component": {
                                            "type": "object",
                                            "title": "Component Object",
                                            "required": [
                                                "type",
                                                "name",
                                                "version"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "application",
                                                        "framework",
                                                        "library",
                                                        "container",
                                                        "operating-system",
                                                        "device",
                                                        "firmware",
                                                        "file"
                                                    ],
                                                    "title": "Component Type",
                                                    "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component.",
                                                    "examples": [
                                                        "library"
                                                    ]
                                                },
                                                "mime-type": {
                                                    "type": "string",
                                                    "title": "Mime-Type",
                                                    "description": "The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.",
                                                    "examples": [
                                                        "image/jpeg"
                                                    ],
                                                    "pattern": "^[-+a-z0-9.]+/[-+a-z0-9.]+$"
                                                },
                                                "bom-ref": {
                                                    "type": "string",
                                                    "title": "BOM Reference",
                                                    "description": "An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref should be unique."
                                                },
                                                "supplier": {
                                                    "title": "Component Supplier",
                                                    "description": " The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/organizationalEntity"
                                                },
                                                "author": {
                                                    "type": "string",
                                                    "title": "Component Author",
                                                    "description": "The person(s) or organization(s) that authored the component",
                                                    "examples": [
                                                        "Acme Inc"
                                                    ]
                                                },
                                                "publisher": {
                                                    "type": "string",
                                                    "title": "Component Publisher",
                                                    "description": "The person(s) or organization(s) that published the component",
                                                    "examples": [
                                                        "Acme Inc"
                                                    ]
                                                },
                                                "group": {
                                                    "type": "string",
                                                    "title": "Component Group",
                                                    "description": "The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.",
                                                    "examples": [
                                                        "com.acme"
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Component Name",
                                                    "description": "The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery",
                                                    "examples": [
                                                        "tomcat-catalina"
                                                    ]
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "title": "Component Version",
                                                    "description": "The component version. The version should ideally comply with semantic versioning but is not enforced.",
                                                    "examples": [
                                                        "9.0.14"
                                                    ]
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "title": "Component Description",
                                                    "description": "Specifies a description for the component"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "enum": [
                                                        "required",
                                                        "optional",
                                                        "excluded"
                                                    ],
                                                    "title": "Component Scope",
                                                    "description": "Specifies the scope of the component. If scope is not specified, 'required' scope should be assumed by the consumer of the BOM",
                                                    "default": "required"
                                                },
                                                "hashes": {
                                                    "type": "array",
                                                    "title": "Component Hashes",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/hash"
                                                    }
                                                },
                                                "licenses": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/licenseChoice"
                                                    },
                                                    "title": "Component License(s)"
                                                },
                                                "copyright": {
                                                    "type": "string",
                                                    "title": "Component Copyright",
                                                    "description": "An optional copyright notice informing users of the underlying claims to copyright ownership in a published work.",
                                                    "examples": [
                                                        "Acme Inc"
                                                    ]
                                                },
                                                "cpe": {
                                                    "type": "string",
                                                    "title": "Component Common Platform Enumeration (CPE)",
                                                    "description": "DEPRECATED - DO NOT USE. This will be removed in a future version. Specifies a well-formed CPE name. See https://nvd.nist.gov/products/cpe",
                                                    "examples": [
                                                        "cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"
                                                    ]
                                                },
                                                "purl": {
                                                    "type": "string",
                                                    "title": "Component Package URL (purl)",
                                                    "examples": [
                                                        "pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"
                                                    ]
                                                },
                                                "swid": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/swid",
                                                    "title": "SWID Tag",
                                                    "description": "Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags."
                                                },
                                                "modified": {
                                                    "type": "boolean",
                                                    "title": "Component Modified From Original",
                                                    "description": "DEPRECATED - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating is the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."
                                                },
                                                "pedigree": {
                                                    "type": "object",
                                                    "title": "Component Pedigree",
                                                    "description": "Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.",
                                                    "properties": {
                                                        "ancestors": {
                                                            "type": "array",
                                                            "title": "Ancestors",
                                                            "description": "Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/component"
                                                            }
                                                        },
                                                        "descendants": {
                                                            "type": "array",
                                                            "title": "Descendants",
                                                            "description": "Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/component"
                                                            }
                                                        },
                                                        "variants": {
                                                            "type": "array",
                                                            "title": "Variants",
                                                            "description": "Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/component"
                                                            }
                                                        },
                                                        "commits": {
                                                            "type": "array",
                                                            "title": "Commits",
                                                            "description": "A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/commit"
                                                            }
                                                        },
                                                        "patches": {
                                                            "type": "array",
                                                            "title": "Patches",
                                                            "description": ">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/patch"
                                                            }
                                                        },
                                                        "notes": {
                                                            "type": "string",
                                                            "title": "Notes",
                                                            "description": "Notes, observations, and other non-structured commentary describing the components pedigree."
                                                        }
                                                    }
                                                },
                                                "externalReferences": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/externalReference"
                                                    },
                                                    "title": "External References"
                                                },
                                                "components": {
                                                    "$id": "#/properties/components",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/component"
                                                    },
                                                    "uniqueItems": true,
                                                    "title": "Components"
                                                },
                                                "evidence": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/componentEvidence",
                                                    "title": "Evidence",
                                                    "description": "Provides the ability to document evidence collected through various forms of extraction or analysis."
                                                },
                                                "properties": {
                                                    "type": "array",
                                                    "title": "Properties",
                                                    "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/property"
                                                    }
                                                }
                                            }
                                        },
                                        "swid": {
                                            "type": "object",
                                            "title": "SWID Tag",
                                            "description": "Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.",
                                            "required": [
                                                "tagId",
                                                "name"
                                            ],
                                            "properties": {
                                                "tagId": {
                                                    "type": "string",
                                                    "title": "Tag ID",
                                                    "description": "Maps to the tagId of a SoftwareIdentity."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "Maps to the name of a SoftwareIdentity."
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "title": "Version",
                                                    "default": "0.0",
                                                    "description": "Maps to the version of a SoftwareIdentity."
                                                },
                                                "tagVersion": {
                                                    "type": "integer",
                                                    "title": "Tag Version",
                                                    "default": 0,
                                                    "description": "Maps to the tagVersion of a SoftwareIdentity."
                                                },
                                                "patch": {
                                                    "type": "boolean",
                                                    "title": "Patch",
                                                    "default": false,
                                                    "description": "Maps to the patch of a SoftwareIdentity."
                                                },
                                                "text": {
                                                    "title": "Attachment text",
                                                    "description": "Specifies the metadata and content of the SWID tag.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/attachment"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "description": "The URL to the SWID file.",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "attachment": {
                                            "type": "object",
                                            "title": "Attachment",
                                            "description": "Specifies the metadata and content for an attachment.",
                                            "required": [
                                                "content"
                                            ],
                                            "properties": {
                                                "contentType": {
                                                    "type": "string",
                                                    "title": "Content-Type",
                                                    "description": "Specifies the content type of the text. Defaults to text/plain if not specified.",
                                                    "default": "text/plain"
                                                },
                                                "encoding": {
                                                    "type": "string",
                                                    "title": "Encoding",
                                                    "description": "Specifies the optional encoding the text is represented in.",
                                                    "enum": [
                                                        "base64"
                                                    ]
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "title": "Attachment Text",
                                                    "description": "The attachment data"
                                                }
                                            }
                                        },
                                        "hash": {
                                            "type": "object",
                                            "title": "Hash Objects",
                                            "required": [
                                                "alg",
                                                "content"
                                            ],
                                            "properties": {
                                                "alg": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/hash-alg"
                                                },
                                                "content": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/hash-content"
                                                }
                                            }
                                        },
                                        "hash-alg": {
                                            "type": "string",
                                            "enum": [
                                                "MD5",
                                                "SHA-1",
                                                "SHA-256",
                                                "SHA-384",
                                                "SHA-512",
                                                "SHA3-256",
                                                "SHA3-384",
                                                "SHA3-512",
                                                "BLAKE2b-256",
                                                "BLAKE2b-384",
                                                "BLAKE2b-512",
                                                "BLAKE3"
                                            ],
                                            "title": "Hash Algorithm"
                                        },
                                        "hash-content": {
                                            "type": "string",
                                            "title": "Hash Content (value)",
                                            "examples": [
                                                "3942447fac867ae5cdb3229b658f4d48"
                                            ],
                                            "pattern": "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"
                                        },
                                        "license": {
                                            "type": "object",
                                            "title": "License Object",
                                            "oneOf": [
                                                {
                                                    "required": [
                                                        "id"
                                                    ]
                                                },
                                                {
                                                    "required": [
                                                        "name"
                                                    ]
                                                }
                                            ],
                                            "properties": {
                                                "id": {
                                                    "title": "License ID (SPDX)",
                                                    "description": "A valid SPDX license ID",
                                                    "examples": [
                                                        "Apache-2.0"
                                                    ],
                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                    "$id": "http://cyclonedx.org/schema/spdx.schema.json",
                                                    "$comment": "v1.0-3.10",
                                                    "type": "string",
                                                    "enum": [
                                                        "0BSD",
                                                        "AAL",
                                                        "ADSL",
                                                        "AFL-1.1",
                                                        "AFL-1.2",
                                                        "AFL-2.0",
                                                        "AFL-2.1",
                                                        "AFL-3.0",
                                                        "AGPL-1.0",
                                                        "AGPL-1.0-only",
                                                        "AGPL-1.0-or-later",
                                                        "AGPL-3.0",
                                                        "AGPL-3.0-only",
                                                        "AGPL-3.0-or-later",
                                                        "AMDPLPA",
                                                        "AML",
                                                        "AMPAS",
                                                        "ANTLR-PD",
                                                        "APAFML",
                                                        "APL-1.0",
                                                        "APSL-1.0",
                                                        "APSL-1.1",
                                                        "APSL-1.2",
                                                        "APSL-2.0",
                                                        "Abstyles",
                                                        "Adobe-2006",
                                                        "Adobe-Glyph",
                                                        "Afmparse",
                                                        "Aladdin",
                                                        "Apache-1.0",
                                                        "Apache-1.1",
                                                        "Apache-2.0",
                                                        "Artistic-1.0",
                                                        "Artistic-1.0-Perl",
                                                        "Artistic-1.0-cl8",
                                                        "Artistic-2.0",
                                                        "BSD-1-Clause",
                                                        "BSD-2-Clause",
                                                        "BSD-2-Clause-FreeBSD",
                                                        "BSD-2-Clause-NetBSD",
                                                        "BSD-2-Clause-Patent",
                                                        "BSD-2-Clause-Views",
                                                        "BSD-3-Clause",
                                                        "BSD-3-Clause-Attribution",
                                                        "BSD-3-Clause-Clear",
                                                        "BSD-3-Clause-LBNL",
                                                        "BSD-3-Clause-No-Nuclear-License",
                                                        "BSD-3-Clause-No-Nuclear-License-2014",
                                                        "BSD-3-Clause-No-Nuclear-Warranty",
                                                        "BSD-3-Clause-Open-MPI",
                                                        "BSD-4-Clause",
                                                        "BSD-4-Clause-UC",
                                                        "BSD-Protection",
                                                        "BSD-Source-Code",
                                                        "BSL-1.0",
                                                        "Bahyph",
                                                        "Barr",
                                                        "Beerware",
                                                        "BitTorrent-1.0",
                                                        "BitTorrent-1.1",
                                                        "BlueOak-1.0.0",
                                                        "Borceux",
                                                        "CAL-1.0",
                                                        "CAL-1.0-Combined-Work-Exception",
                                                        "CATOSL-1.1",
                                                        "CC-BY-1.0",
                                                        "CC-BY-2.0",
                                                        "CC-BY-2.5",
                                                        "CC-BY-3.0",
                                                        "CC-BY-3.0-AT",
                                                        "CC-BY-4.0",
                                                        "CC-BY-NC-1.0",
                                                        "CC-BY-NC-2.0",
                                                        "CC-BY-NC-2.5",
                                                        "CC-BY-NC-3.0",
                                                        "CC-BY-NC-4.0",
                                                        "CC-BY-NC-ND-1.0",
                                                        "CC-BY-NC-ND-2.0",
                                                        "CC-BY-NC-ND-2.5",
                                                        "CC-BY-NC-ND-3.0",
                                                        "CC-BY-NC-ND-3.0-IGO",
                                                        "CC-BY-NC-ND-4.0",
                                                        "CC-BY-NC-SA-1.0",
                                                        "CC-BY-NC-SA-2.0",
                                                        "CC-BY-NC-SA-2.5",
                                                        "CC-BY-NC-SA-3.0",
                                                        "CC-BY-NC-SA-4.0",
                                                        "CC-BY-ND-1.0",
                                                        "CC-BY-ND-2.0",
                                                        "CC-BY-ND-2.5",
                                                        "CC-BY-ND-3.0",
                                                        "CC-BY-ND-4.0",
                                                        "CC-BY-SA-1.0",
                                                        "CC-BY-SA-2.0",
                                                        "CC-BY-SA-2.5",
                                                        "CC-BY-SA-3.0",
                                                        "CC-BY-SA-3.0-AT",
                                                        "CC-BY-SA-4.0",
                                                        "CC-PDDC",
                                                        "CC0-1.0",
                                                        "CDDL-1.0",
                                                        "CDDL-1.1",
                                                        "CDLA-Permissive-1.0",
                                                        "CDLA-Sharing-1.0",
                                                        "CECILL-1.0",
                                                        "CECILL-1.1",
                                                        "CECILL-2.0",
                                                        "CECILL-2.1",
                                                        "CECILL-B",
                                                        "CECILL-C",
                                                        "CERN-OHL-1.1",
                                                        "CERN-OHL-1.2",
                                                        "CERN-OHL-P-2.0",
                                                        "CERN-OHL-S-2.0",
                                                        "CERN-OHL-W-2.0",
                                                        "CNRI-Jython",
                                                        "CNRI-Python",
                                                        "CNRI-Python-GPL-Compatible",
                                                        "CPAL-1.0",
                                                        "CPL-1.0",
                                                        "CPOL-1.02",
                                                        "CUA-OPL-1.0",
                                                        "Caldera",
                                                        "ClArtistic",
                                                        "Condor-1.1",
                                                        "Crossword",
                                                        "CrystalStacker",
                                                        "Cube",
                                                        "D-FSL-1.0",
                                                        "DOC",
                                                        "DSDP",
                                                        "Dotseqn",
                                                        "ECL-1.0",
                                                        "ECL-2.0",
                                                        "EFL-1.0",
                                                        "EFL-2.0",
                                                        "EPICS",
                                                        "EPL-1.0",
                                                        "EPL-2.0",
                                                        "EUDatagrid",
                                                        "EUPL-1.0",
                                                        "EUPL-1.1",
                                                        "EUPL-1.2",
                                                        "Entessa",
                                                        "ErlPL-1.1",
                                                        "Eurosym",
                                                        "FSFAP",
                                                        "FSFUL",
                                                        "FSFULLR",
                                                        "FTL",
                                                        "Fair",
                                                        "Frameworx-1.0",
                                                        "FreeImage",
                                                        "GFDL-1.1",
                                                        "GFDL-1.1-invariants-only",
                                                        "GFDL-1.1-invariants-or-later",
                                                        "GFDL-1.1-no-invariants-only",
                                                        "GFDL-1.1-no-invariants-or-later",
                                                        "GFDL-1.1-only",
                                                        "GFDL-1.1-or-later",
                                                        "GFDL-1.2",
                                                        "GFDL-1.2-invariants-only",
                                                        "GFDL-1.2-invariants-or-later",
                                                        "GFDL-1.2-no-invariants-only",
                                                        "GFDL-1.2-no-invariants-or-later",
                                                        "GFDL-1.2-only",
                                                        "GFDL-1.2-or-later",
                                                        "GFDL-1.3",
                                                        "GFDL-1.3-invariants-only",
                                                        "GFDL-1.3-invariants-or-later",
                                                        "GFDL-1.3-no-invariants-only",
                                                        "GFDL-1.3-no-invariants-or-later",
                                                        "GFDL-1.3-only",
                                                        "GFDL-1.3-or-later",
                                                        "GL2PS",
                                                        "GLWTPL",
                                                        "GPL-1.0",
                                                        "GPL-1.0+",
                                                        "GPL-1.0-only",
                                                        "GPL-1.0-or-later",
                                                        "GPL-2.0",
                                                        "GPL-2.0+",
                                                        "GPL-2.0-only",
                                                        "GPL-2.0-or-later",
                                                        "GPL-2.0-with-GCC-exception",
                                                        "GPL-2.0-with-autoconf-exception",
                                                        "GPL-2.0-with-bison-exception",
                                                        "GPL-2.0-with-classpath-exception",
                                                        "GPL-2.0-with-font-exception",
                                                        "GPL-3.0",
                                                        "GPL-3.0+",
                                                        "GPL-3.0-only",
                                                        "GPL-3.0-or-later",
                                                        "GPL-3.0-with-GCC-exception",
                                                        "GPL-3.0-with-autoconf-exception",
                                                        "Giftware",
                                                        "Glide",
                                                        "Glulxe",
                                                        "HPND",
                                                        "HPND-sell-variant",
                                                        "HaskellReport",
                                                        "Hippocratic-2.1",
                                                        "IBM-pibs",
                                                        "ICU",
                                                        "IJG",
                                                        "IPA",
                                                        "IPL-1.0",
                                                        "ISC",
                                                        "ImageMagick",
                                                        "Imlib2",
                                                        "Info-ZIP",
                                                        "Intel",
                                                        "Intel-ACPI",
                                                        "Interbase-1.0",
                                                        "JPNIC",
                                                        "JSON",
                                                        "JasPer-2.0",
                                                        "LAL-1.2",
                                                        "LAL-1.3",
                                                        "LGPL-2.0",
                                                        "LGPL-2.0+",
                                                        "LGPL-2.0-only",
                                                        "LGPL-2.0-or-later",
                                                        "LGPL-2.1",
                                                        "LGPL-2.1+",
                                                        "LGPL-2.1-only",
                                                        "LGPL-2.1-or-later",
                                                        "LGPL-3.0",
                                                        "LGPL-3.0+",
                                                        "LGPL-3.0-only",
                                                        "LGPL-3.0-or-later",
                                                        "LGPLLR",
                                                        "LPL-1.0",
                                                        "LPL-1.02",
                                                        "LPPL-1.0",
                                                        "LPPL-1.1",
                                                        "LPPL-1.2",
                                                        "LPPL-1.3a",
                                                        "LPPL-1.3c",
                                                        "Latex2e",
                                                        "Leptonica",
                                                        "LiLiQ-P-1.1",
                                                        "LiLiQ-R-1.1",
                                                        "LiLiQ-Rplus-1.1",
                                                        "Libpng",
                                                        "Linux-OpenIB",
                                                        "MIT",
                                                        "MIT-0",
                                                        "MIT-CMU",
                                                        "MIT-advertising",
                                                        "MIT-enna",
                                                        "MIT-feh",
                                                        "MITNFA",
                                                        "MPL-1.0",
                                                        "MPL-1.1",
                                                        "MPL-2.0",
                                                        "MPL-2.0-no-copyleft-exception",
                                                        "MS-PL",
                                                        "MS-RL",
                                                        "MTLL",
                                                        "MakeIndex",
                                                        "MirOS",
                                                        "Motosoto",
                                                        "MulanPSL-1.0",
                                                        "MulanPSL-2.0",
                                                        "Multics",
                                                        "Mup",
                                                        "NASA-1.3",
                                                        "NBPL-1.0",
                                                        "NCGL-UK-2.0",
                                                        "NCSA",
                                                        "NGPL",
                                                        "NIST-PD",
                                                        "NIST-PD-fallback",
                                                        "NLOD-1.0",
                                                        "NLPL",
                                                        "NOSL",
                                                        "NPL-1.0",
                                                        "NPL-1.1",
                                                        "NPOSL-3.0",
                                                        "NRL",
                                                        "NTP",
                                                        "NTP-0",
                                                        "Naumen",
                                                        "Net-SNMP",
                                                        "NetCDF",
                                                        "Newsletr",
                                                        "Nokia",
                                                        "Noweb",
                                                        "Nunit",
                                                        "O-UDA-1.0",
                                                        "OCCT-PL",
                                                        "OCLC-2.0",
                                                        "ODC-By-1.0",
                                                        "ODbL-1.0",
                                                        "OFL-1.0",
                                                        "OFL-1.0-RFN",
                                                        "OFL-1.0-no-RFN",
                                                        "OFL-1.1",
                                                        "OFL-1.1-RFN",
                                                        "OFL-1.1-no-RFN",
                                                        "OGC-1.0",
                                                        "OGL-Canada-2.0",
                                                        "OGL-UK-1.0",
                                                        "OGL-UK-2.0",
                                                        "OGL-UK-3.0",
                                                        "OGTSL",
                                                        "OLDAP-1.1",
                                                        "OLDAP-1.2",
                                                        "OLDAP-1.3",
                                                        "OLDAP-1.4",
                                                        "OLDAP-2.0",
                                                        "OLDAP-2.0.1",
                                                        "OLDAP-2.1",
                                                        "OLDAP-2.2",
                                                        "OLDAP-2.2.1",
                                                        "OLDAP-2.2.2",
                                                        "OLDAP-2.3",
                                                        "OLDAP-2.4",
                                                        "OLDAP-2.5",
                                                        "OLDAP-2.6",
                                                        "OLDAP-2.7",
                                                        "OLDAP-2.8",
                                                        "OML",
                                                        "OPL-1.0",
                                                        "OSET-PL-2.1",
                                                        "OSL-1.0",
                                                        "OSL-1.1",
                                                        "OSL-2.0",
                                                        "OSL-2.1",
                                                        "OSL-3.0",
                                                        "OpenSSL",
                                                        "PDDL-1.0",
                                                        "PHP-3.0",
                                                        "PHP-3.01",
                                                        "PSF-2.0",
                                                        "Parity-6.0.0",
                                                        "Parity-7.0.0",
                                                        "Plexus",
                                                        "PolyForm-Noncommercial-1.0.0",
                                                        "PolyForm-Small-Business-1.0.0",
                                                        "PostgreSQL",
                                                        "Python-2.0",
                                                        "QPL-1.0",
                                                        "Qhull",
                                                        "RHeCos-1.1",
                                                        "RPL-1.1",
                                                        "RPL-1.5",
                                                        "RPSL-1.0",
                                                        "RSA-MD",
                                                        "RSCPL",
                                                        "Rdisc",
                                                        "Ruby",
                                                        "SAX-PD",
                                                        "SCEA",
                                                        "SGI-B-1.0",
                                                        "SGI-B-1.1",
                                                        "SGI-B-2.0",
                                                        "SHL-0.5",
                                                        "SHL-0.51",
                                                        "SISSL",
                                                        "SISSL-1.2",
                                                        "SMLNJ",
                                                        "SMPPL",
                                                        "SNIA",
                                                        "SPL-1.0",
                                                        "SSH-OpenSSH",
                                                        "SSH-short",
                                                        "SSPL-1.0",
                                                        "SWL",
                                                        "Saxpath",
                                                        "Sendmail",
                                                        "Sendmail-8.23",
                                                        "SimPL-2.0",
                                                        "Sleepycat",
                                                        "Spencer-86",
                                                        "Spencer-94",
                                                        "Spencer-99",
                                                        "StandardML-NJ",
                                                        "SugarCRM-1.1.3",
                                                        "TAPR-OHL-1.0",
                                                        "TCL",
                                                        "TCP-wrappers",
                                                        "TMate",
                                                        "TORQUE-1.1",
                                                        "TOSL",
                                                        "TU-Berlin-1.0",
                                                        "TU-Berlin-2.0",
                                                        "UCL-1.0",
                                                        "UPL-1.0",
                                                        "Unicode-DFS-2015",
                                                        "Unicode-DFS-2016",
                                                        "Unicode-TOU",
                                                        "Unlicense",
                                                        "VOSTROM",
                                                        "VSL-1.0",
                                                        "Vim",
                                                        "W3C",
                                                        "W3C-19980720",
                                                        "W3C-20150513",
                                                        "WTFPL",
                                                        "Watcom-1.0",
                                                        "Wsuipa",
                                                        "X11",
                                                        "XFree86-1.1",
                                                        "XSkat",
                                                        "Xerox",
                                                        "Xnet",
                                                        "YPL-1.0",
                                                        "YPL-1.1",
                                                        "ZPL-1.1",
                                                        "ZPL-2.0",
                                                        "ZPL-2.1",
                                                        "Zed",
                                                        "Zend-2.0",
                                                        "Zimbra-1.3",
                                                        "Zimbra-1.4",
                                                        "Zlib",
                                                        "blessing",
                                                        "bzip2-1.0.5",
                                                        "bzip2-1.0.6",
                                                        "copyleft-next-0.3.0",
                                                        "copyleft-next-0.3.1",
                                                        "curl",
                                                        "diffmark",
                                                        "dvipdfm",
                                                        "eCos-2.0",
                                                        "eGenix",
                                                        "etalab-2.0",
                                                        "gSOAP-1.3b",
                                                        "gnuplot",
                                                        "iMatix",
                                                        "libpng-2.0",
                                                        "libselinux-1.0",
                                                        "libtiff",
                                                        "mpich2",
                                                        "psfrag",
                                                        "psutils",
                                                        "wxWindows",
                                                        "xinetd",
                                                        "xpp",
                                                        "zlib-acknowledgement",
                                                        "GCC-exception-2.0",
                                                        "openvpn-openssl-exception",
                                                        "Nokia-Qt-exception-1.1",
                                                        "GPL-3.0-linking-exception",
                                                        "Fawkes-Runtime-exception",
                                                        "u-boot-exception-2.0",
                                                        "PS-or-PDF-font-exception-20170817",
                                                        "gnu-javamail-exception",
                                                        "LGPL-3.0-linking-exception",
                                                        "DigiRule-FOSS-exception",
                                                        "LLVM-exception",
                                                        "Linux-syscall-note",
                                                        "GPL-3.0-linking-source-exception",
                                                        "Qwt-exception-1.0",
                                                        "389-exception",
                                                        "mif-exception",
                                                        "eCos-exception-2.0",
                                                        "CLISP-exception-2.0",
                                                        "Bison-exception-2.2",
                                                        "Libtool-exception",
                                                        "LZMA-exception",
                                                        "OpenJDK-assembly-exception-1.0",
                                                        "Font-exception-2.0",
                                                        "OCaml-LGPL-linking-exception",
                                                        "GCC-exception-3.1",
                                                        "Bootloader-exception",
                                                        "SHL-2.0",
                                                        "Classpath-exception-2.0",
                                                        "Swift-exception",
                                                        "Autoconf-exception-2.0",
                                                        "FLTK-exception",
                                                        "freertos-exception-2.0",
                                                        "Universal-FOSS-exception-1.0",
                                                        "WxWindows-exception-3.1",
                                                        "OCCT-exception-1.0",
                                                        "Autoconf-exception-3.0",
                                                        "i2p-gpl-java-exception",
                                                        "GPL-CC-1.0",
                                                        "Qt-LGPL-exception-1.1",
                                                        "SHL-2.1",
                                                        "Qt-GPL-exception-1.0"
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "License Name",
                                                    "description": "If SPDX does not define the license used, this field may be used to provide the license name",
                                                    "examples": [
                                                        "Acme Software License"
                                                    ]
                                                },
                                                "text": {
                                                    "title": "License text",
                                                    "description": "An optional way to include the textual content of a license.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/attachment"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "License URL",
                                                    "description": "The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness",
                                                    "examples": [
                                                        "https://www.apache.org/licenses/LICENSE-2.0.txt"
                                                    ],
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "licenseChoice": {
                                            "type": "object",
                                            "title": "License(s)",
                                            "properties": {
                                                "license": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/license"
                                                },
                                                "expression": {
                                                    "type": "string",
                                                    "title": "SPDX License Expression",
                                                    "examples": [
                                                        "Apache-2.0 AND (MIT OR GPL-2.0-only)",
                                                        "GPL-3.0-only WITH Classpath-exception-2.0"
                                                    ]
                                                }
                                            },
                                            "oneOf": [
                                                {
                                                    "required": [
                                                        "license"
                                                    ]
                                                },
                                                {
                                                    "required": [
                                                        "expression"
                                                    ]
                                                }
                                            ]
                                        },
                                        "commit": {
                                            "type": "object",
                                            "title": "Commit",
                                            "description": "Specifies an individual commit",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "title": "UID",
                                                    "description": "A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes."
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "description": "The URL to the commit. This URL will typically point to a commit in a version control system.",
                                                    "format": "iri-reference"
                                                },
                                                "author": {
                                                    "title": "Author",
                                                    "description": "The author who created the changes in the commit",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/identifiableAction"
                                                },
                                                "committer": {
                                                    "title": "Committer",
                                                    "description": "The person who committed or pushed the commit",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/identifiableAction"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "title": "Message",
                                                    "description": "The text description of the contents of the commit"
                                                }
                                            }
                                        },
                                        "patch": {
                                            "type": "object",
                                            "title": "Patch",
                                            "description": "Specifies an individual patch",
                                            "required": [
                                                "type"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "unofficial",
                                                        "monkey",
                                                        "backport",
                                                        "cherry-pick"
                                                    ],
                                                    "title": "Type",
                                                    "description": "Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality"
                                                },
                                                "diff": {
                                                    "title": "Diff",
                                                    "description": "The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/diff"
                                                },
                                                "resolves": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/issue"
                                                    },
                                                    "title": "Resolves",
                                                    "description": "A collection of issues the patch resolves"
                                                }
                                            }
                                        },
                                        "diff": {
                                            "type": "object",
                                            "title": "Diff",
                                            "description": "The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff",
                                            "properties": {
                                                "text": {
                                                    "title": "Diff text",
                                                    "description": "Specifies the optional text of the diff",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/attachment"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "description": "Specifies the URL to the diff",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "issue": {
                                            "type": "object",
                                            "title": "Diff",
                                            "description": "The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff",
                                            "required": [
                                                "type"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "defect",
                                                        "enhancement",
                                                        "security"
                                                    ],
                                                    "title": "Type",
                                                    "description": "Specifies the type of issue"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "ID",
                                                    "description": "The identifier of the issue assigned by the source of the issue"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of the issue"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "title": "Description",
                                                    "description": "A description of the issue"
                                                },
                                                "source": {
                                                    "type": "object",
                                                    "title": "Source",
                                                    "description": "The source of the issue where it is documented",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "title": "Name",
                                                            "description": "The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'"
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "title": "URL",
                                                            "description": "The url of the issue documentation as provided by the source",
                                                            "format": "iri-reference"
                                                        }
                                                    }
                                                },
                                                "references": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "format": "iri-reference"
                                                    },
                                                    "title": "References",
                                                    "description": "A collection of URL's for reference. Multiple URLs are allowed.",
                                                    "examples": [
                                                        "https://example.com"
                                                    ]
                                                }
                                            }
                                        },
                                        "identifiableAction": {
                                            "type": "object",
                                            "title": "Identifiable Action",
                                            "description": "Specifies an individual commit",
                                            "properties": {
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "title": "Timestamp",
                                                    "description": "The timestamp in which the action occurred"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of the individual who performed the action"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "idn-email",
                                                    "title": "E-mail",
                                                    "description": "The email address of the individual who performed the action"
                                                }
                                            }
                                        },
                                        "externalReference": {
                                            "type": "object",
                                            "title": "External Reference",
                                            "description": "Specifies an individual external reference",
                                            "required": [
                                                "url",
                                                "type"
                                            ],
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "description": "The URL to the external reference",
                                                    "format": "iri-reference"
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "title": "Comment",
                                                    "description": "An optional comment describing the external reference"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "title": "Type",
                                                    "description": "Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.",
                                                    "enum": [
                                                        "vcs",
                                                        "issue-tracker",
                                                        "website",
                                                        "advisories",
                                                        "bom",
                                                        "mailing-list",
                                                        "social",
                                                        "chat",
                                                        "documentation",
                                                        "support",
                                                        "distribution",
                                                        "license",
                                                        "build-meta",
                                                        "build-system",
                                                        "other"
                                                    ]
                                                },
                                                "hashes": {
                                                    "$id": "#/properties/hashes",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/hash"
                                                    },
                                                    "title": "Hashes",
                                                    "description": "The hashes of the external reference (if applicable)."
                                                }
                                            }
                                        },
                                        "dependency": {
                                            "type": "object",
                                            "title": "Dependency",
                                            "description": "Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.",
                                            "required": [
                                                "ref"
                                            ],
                                            "properties": {
                                                "ref": {
                                                    "type": "string",
                                                    "title": "Reference",
                                                    "description": "References a component by the components bom-ref attribute"
                                                },
                                                "dependsOn": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "title": "Depends On",
                                                    "description": "The bom-ref identifiers of the components that are dependencies of this dependency object."
                                                }
                                            }
                                        },
                                        "service": {
                                            "type": "object",
                                            "title": "Service Object",
                                            "required": [
                                                "name"
                                            ],
                                            "properties": {
                                                "bom-ref": {
                                                    "type": "string",
                                                    "title": "BOM Reference",
                                                    "description": "An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref should be unique."
                                                },
                                                "provider": {
                                                    "title": "Provider",
                                                    "description": "The organization that provides the service.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/organizationalEntity"
                                                },
                                                "group": {
                                                    "type": "string",
                                                    "title": "Service Group",
                                                    "description": "The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.",
                                                    "examples": [
                                                        "com.acme"
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Service Name",
                                                    "description": "The name of the service. This will often be a shortened, single name of the service.",
                                                    "examples": [
                                                        "ticker-service"
                                                    ]
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "title": "Service Version",
                                                    "description": "The service version.",
                                                    "examples": [
                                                        "1.0.0"
                                                    ]
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "title": "Service Description",
                                                    "description": "Specifies a description for the service"
                                                },
                                                "endpoints": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "format": "iri-reference"
                                                    },
                                                    "title": "Endpoints",
                                                    "description": "The endpoint URIs of the service. Multiple endpoints are allowed.",
                                                    "examples": [
                                                        "https://example.com/api/v1/ticker"
                                                    ]
                                                },
                                                "authenticated": {
                                                    "type": "boolean",
                                                    "title": "Authentication Required",
                                                    "description": "A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."
                                                },
                                                "x-trust-boundary": {
                                                    "type": "boolean",
                                                    "title": "Crosses Trust Boundary",
                                                    "description": "A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/dataClassification"
                                                    },
                                                    "title": "Data Classification",
                                                    "description": "Specifies the data classification."
                                                },
                                                "licenses": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/licenseChoice"
                                                    },
                                                    "title": "Component License(s)"
                                                },
                                                "externalReferences": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/externalReference"
                                                    },
                                                    "title": "External References"
                                                },
                                                "services": {
                                                    "$id": "#/properties/services",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/service"
                                                    },
                                                    "uniqueItems": true,
                                                    "title": "Services"
                                                },
                                                "properties": {
                                                    "type": "array",
                                                    "title": "Properties",
                                                    "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/property"
                                                    }
                                                }
                                            }
                                        },
                                        "dataClassification": {
                                            "type": "object",
                                            "title": "Hash Objects",
                                            "required": [
                                                "flow",
                                                "classification"
                                            ],
                                            "properties": {
                                                "flow": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/dataFlow"
                                                },
                                                "classification": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "dataFlow": {
                                            "type": "string",
                                            "enum": [
                                                "inbound",
                                                "outbound",
                                                "bi-directional",
                                                "unknown"
                                            ],
                                            "title": "Data flow direction"
                                        },
                                        "copyright": {
                                            "type": "object",
                                            "title": "Copyright",
                                            "required": [
                                                "text"
                                            ],
                                            "properties": {
                                                "text": {
                                                    "type": "string",
                                                    "title": "Copyright Text"
                                                }
                                            }
                                        },
                                        "componentEvidence": {
                                            "type": "object",
                                            "title": "Evidence",
                                            "description": "Provides the ability to document evidence collected through various forms of extraction or analysis.",
                                            "properties": {
                                                "licenses": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/licenseChoice"
                                                    },
                                                    "title": "Component License(s)"
                                                },
                                                "copyright": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/copyright"
                                                    },
                                                    "title": "Copyright"
                                                }
                                            }
                                        },
                                        "compositions": {
                                            "type": "object",
                                            "title": "Compositions",
                                            "required": [
                                                "aggregate"
                                            ],
                                            "properties": {
                                                "aggregate": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/0/definitions/aggregateType",
                                                    "title": "Aggregate",
                                                    "description": "Specifies an aggregate type that describe how complete a relationship is."
                                                },
                                                "assemblies": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "title": "BOM references",
                                                    "description": "The bom-ref identifiers of the components or services being described. Assemblies refer to nested relationships whereby a constituent part may include other constituent parts. References do not cascade to child parts. References are explicit for the specified constituent part only."
                                                },
                                                "dependencies": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "title": "BOM references",
                                                    "description": "The bom-ref identifiers of the components or services being described. Dependencies refer to a relationship whereby an independent constituent part requires another independent constituent part. References do not cascade to transitive dependencies. References are explicit for the specified dependency only."
                                                }
                                            }
                                        },
                                        "aggregateType": {
                                            "type": "string",
                                            "default": "not_specified",
                                            "enum": [
                                                "complete",
                                                "incomplete",
                                                "incomplete_first_party_only",
                                                "incomplete_third_party_only",
                                                "unknown",
                                                "not_specified"
                                            ]
                                        },
                                        "property": {
                                            "type": "object",
                                            "title": "Lightweight name-value pair",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of the property. Duplicate names are allowed, each potentially having a different value."
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "title": "Value",
                                                    "description": "The value of the property."
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "http://cyclonedx.org/schema/bom-1.2.schema.json",
                                    "type": "object",
                                    "title": "CycloneDX Software Bill-of-Material Specification",
                                    "$comment": "CycloneDX JSON schema is published under the terms of the Apache License 2.0.",
                                    "required": [
                                        "bomFormat",
                                        "specVersion",
                                        "version"
                                    ],
                                    "properties": {
                                        "bomFormat": {
                                            "$id": "#/properties/bomFormat",
                                            "type": "string",
                                            "title": "BOM Format",
                                            "description": "Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention nor does JSON schema support namespaces.",
                                            "enum": [
                                                "CycloneDX"
                                            ]
                                        },
                                        "specVersion": {
                                            "$id": "#/properties/specVersion",
                                            "type": "string",
                                            "title": "CycloneDX Specification Version",
                                            "description": "The version of the CycloneDX specification a BOM is written to (starting at version 1.2)",
                                            "examples": [
                                                "1.2"
                                            ]
                                        },
                                        "serialNumber": {
                                            "$id": "#/properties/serialNumber",
                                            "type": "string",
                                            "title": "BOM Serial Number",
                                            "description": "Every BOM generated should have a unique serial number, even if the contents of the BOM being generated have not changed over time. The process or tool responsible for creating the BOM should create random UUID's for every BOM generated.",
                                            "default": "",
                                            "examples": [
                                                "urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"
                                            ],
                                            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                                        },
                                        "version": {
                                            "$id": "#/properties/version",
                                            "type": "integer",
                                            "title": "BOM Version",
                                            "description": "The version allows component publishers/authors to make changes to existing BOMs to update various aspects of the document such as description or licenses. When a system is presented with multiple BOMs for the same component, the system should use the most recent version of the BOM. The default version is '1' and should be incremented for each version of the BOM that is published. Each version of a component should have a unique BOM and if no changes are made to the BOMs, then each BOM will have a version of '1'.",
                                            "default": 1,
                                            "examples": [
                                                1
                                            ]
                                        },
                                        "metadata": {
                                            "$id": "#/properties/metadata",
                                            "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/metadata",
                                            "title": "BOM Metadata",
                                            "description": "Provides additional information about a BOM."
                                        },
                                        "components": {
                                            "$id": "#/properties/components",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/component"
                                            },
                                            "uniqueItems": true,
                                            "title": "Components"
                                        },
                                        "services": {
                                            "$id": "#/properties/services",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/service"
                                            },
                                            "uniqueItems": true,
                                            "title": "Services"
                                        },
                                        "externalReferences": {
                                            "$id": "#/properties/externalReferences",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/externalReference"
                                            },
                                            "title": "External References",
                                            "description": "External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."
                                        },
                                        "dependencies": {
                                            "$id": "#/properties/dependencies",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/dependency"
                                            },
                                            "uniqueItems": true,
                                            "title": "Dependencies",
                                            "description": "Provides the ability to document dependency relationships."
                                        }
                                    },
                                    "definitions": {
                                        "metadata": {
                                            "type": "object",
                                            "title": "BOM Metadata Object",
                                            "properties": {
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "title": "Timestamp",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "tools": {
                                                    "type": "array",
                                                    "title": "Creation Tools",
                                                    "description": "The tool(s) used in the creation of the BOM.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/tool"
                                                    }
                                                },
                                                "authors": {
                                                    "type": "array",
                                                    "title": "Authors",
                                                    "description": "The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/organizationalContact"
                                                    }
                                                },
                                                "component": {
                                                    "title": "Component",
                                                    "description": "The component that the BOM describes.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/component"
                                                },
                                                "manufacture": {
                                                    "title": "Manufacture",
                                                    "description": "The organization that manufactured the component that the BOM describes.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/organizationalEntity"
                                                },
                                                "supplier": {
                                                    "title": "Supplier",
                                                    "description": " The organization that supplied the component that the BOM describes. The supplier may often be the manufacture, but may also be a distributor or repackager.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/organizationalEntity"
                                                }
                                            }
                                        },
                                        "tool": {
                                            "type": "object",
                                            "title": "Tool",
                                            "description": "The tool used to create the BOM.",
                                            "properties": {
                                                "vendor": {
                                                    "type": "string",
                                                    "format": "string",
                                                    "title": "Tool Vendor",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "format": "string",
                                                    "title": "Tool Name",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "format": "string",
                                                    "title": "Tool Version",
                                                    "description": "The date and time (timestamp) when the document was created."
                                                },
                                                "hashes": {
                                                    "$id": "#/properties/hashes",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/hash"
                                                    },
                                                    "title": "Hashes",
                                                    "description": "The hashes of the tool (if applicable)."
                                                }
                                            }
                                        },
                                        "organizationalEntity": {
                                            "type": "object",
                                            "title": "Organizational Entity Object",
                                            "description": "",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of the organization",
                                                    "default": "",
                                                    "examples": [
                                                        "Example Inc."
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "url": {
                                                    "type": "array",
                                                    "title": "URL",
                                                    "description": "The URL of the organization. Multiple URLs are allowed.",
                                                    "default": "",
                                                    "examples": [
                                                        "https://example.com"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "contact": {
                                                    "type": "array",
                                                    "title": "Contact",
                                                    "description": "A contact at the organization. Multiple contacts are allowed.",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/organizationalContact"
                                                    }
                                                }
                                            }
                                        },
                                        "organizationalContact": {
                                            "type": "object",
                                            "title": "Organizational Contact Object",
                                            "description": "",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of a contact",
                                                    "default": "",
                                                    "examples": [
                                                        "Contact name"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "title": "Email Address",
                                                    "description": "The email address of the contact. Multiple email addresses are allowed.",
                                                    "default": "",
                                                    "examples": [
                                                        "firstname.lastname@example.com"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "title": "Phone",
                                                    "description": "The phone number of the contact. Multiple phone numbers are allowed.",
                                                    "default": "",
                                                    "examples": [
                                                        "800-555-1212"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                }
                                            }
                                        },
                                        "component": {
                                            "type": "object",
                                            "title": "Component Object",
                                            "required": [
                                                "type",
                                                "name",
                                                "version"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "application",
                                                        "framework",
                                                        "library",
                                                        "container",
                                                        "operating-system",
                                                        "device",
                                                        "firmware",
                                                        "file"
                                                    ],
                                                    "title": "Component Type",
                                                    "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component.",
                                                    "default": "",
                                                    "examples": [
                                                        "library"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "mime-type": {
                                                    "type": "string",
                                                    "title": "Mime-Type",
                                                    "description": "The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.",
                                                    "default": "",
                                                    "examples": [
                                                        "image/jpeg"
                                                    ],
                                                    "pattern": "^[-+a-z0-9.]+/[-+a-z0-9.]+$"
                                                },
                                                "bom-ref": {
                                                    "type": "string",
                                                    "title": "BOM Reference",
                                                    "description": "An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref should be unique.",
                                                    "default": "",
                                                    "pattern": "^(.*)$"
                                                },
                                                "supplier": {
                                                    "title": "Component Supplier",
                                                    "description": " The organization that supplied the component. The supplier may often be the manufacture, but may also be a distributor or repackager.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/organizationalEntity"
                                                },
                                                "author": {
                                                    "type": "string",
                                                    "title": "Component Author",
                                                    "description": "The person(s) or organization(s) that authored the component",
                                                    "default": "",
                                                    "examples": [
                                                        "Acme Inc"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "publisher": {
                                                    "type": "string",
                                                    "title": "Component Publisher",
                                                    "description": "The person(s) or organization(s) that published the component",
                                                    "default": "",
                                                    "examples": [
                                                        "Acme Inc"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "group": {
                                                    "type": "string",
                                                    "title": "Component Group",
                                                    "description": "The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.",
                                                    "default": "",
                                                    "examples": [
                                                        "com.acme"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Component Name",
                                                    "description": "The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery",
                                                    "default": "",
                                                    "examples": [
                                                        "tomcat-catalina"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "title": "Component Version",
                                                    "description": "The component version. The version should ideally comply with semantic versioning but is not enforced.",
                                                    "default": "",
                                                    "examples": [
                                                        "9.0.14"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "title": "Component Description",
                                                    "description": "Specifies a description for the component",
                                                    "default": "",
                                                    "pattern": "^(.*)$"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "enum": [
                                                        "required",
                                                        "optional",
                                                        "excluded"
                                                    ],
                                                    "title": "Component Scope",
                                                    "description": "Specifies the scope of the component. If scope is not specified, 'required' scope should be assumed by the consumer of the BOM",
                                                    "default": "required",
                                                    "pattern": "^(.*)$"
                                                },
                                                "hashes": {
                                                    "type": "array",
                                                    "title": "Component Hashes",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/hash"
                                                    }
                                                },
                                                "licenses": {
                                                    "type": "array",
                                                    "title": "Component License(s)",
                                                    "items": {
                                                        "properties": {
                                                            "license": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/license"
                                                            },
                                                            "expression": {
                                                                "type": "string",
                                                                "title": "SPDX License Expression",
                                                                "examples": [
                                                                    "Apache-2.0 AND (MIT OR GPL-2.0-only)",
                                                                    "GPL-3.0-only WITH Classpath-exception-2.0"
                                                                ],
                                                                "pattern": "^(.*)$"
                                                            }
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "required": [
                                                                    "license"
                                                                ]
                                                            },
                                                            {
                                                                "required": [
                                                                    "expression"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "copyright": {
                                                    "type": "string",
                                                    "title": "Component Copyright",
                                                    "description": "An optional copyright notice informing users of the underlying claims to copyright ownership in a published work.",
                                                    "examples": [
                                                        "Acme Inc"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "cpe": {
                                                    "type": "string",
                                                    "title": "Component Common Platform Enumeration (CPE)",
                                                    "description": "DEPRECATED - DO NOT USE. This will be removed in a future version. Specifies a well-formed CPE name. See https://nvd.nist.gov/products/cpe",
                                                    "examples": [
                                                        "cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "purl": {
                                                    "type": "string",
                                                    "title": "Component Package URL (purl)",
                                                    "default": "",
                                                    "examples": [
                                                        "pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "swid": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/swid",
                                                    "title": "SWID Tag",
                                                    "description": "Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags."
                                                },
                                                "modified": {
                                                    "type": "boolean",
                                                    "title": "Component Modified From Original",
                                                    "description": "DEPRECATED - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating is the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."
                                                },
                                                "pedigree": {
                                                    "type": "object",
                                                    "title": "Component Pedigree",
                                                    "description": "Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.",
                                                    "properties": {
                                                        "ancestors": {
                                                            "type": "array",
                                                            "title": "Ancestors",
                                                            "description": "Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/component"
                                                            }
                                                        },
                                                        "descendants": {
                                                            "type": "array",
                                                            "title": "Descendants",
                                                            "description": "Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/component"
                                                            }
                                                        },
                                                        "variants": {
                                                            "type": "array",
                                                            "title": "Variants",
                                                            "description": "Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/component"
                                                            }
                                                        },
                                                        "commits": {
                                                            "type": "array",
                                                            "title": "Commits",
                                                            "description": "A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/commit"
                                                            }
                                                        },
                                                        "patches": {
                                                            "type": "array",
                                                            "title": "Patches",
                                                            "description": ">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.",
                                                            "items": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/patch"
                                                            }
                                                        },
                                                        "notes": {
                                                            "type": "string",
                                                            "title": "Notes",
                                                            "description": "Notes, observations, and other non-structured commentary describing the components pedigree.",
                                                            "pattern": "^(.*)$"
                                                        }
                                                    }
                                                },
                                                "externalReferences": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/externalReference"
                                                    },
                                                    "title": "External References"
                                                }
                                            }
                                        },
                                        "swid": {
                                            "type": "object",
                                            "title": "SWID Tag",
                                            "description": "Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.",
                                            "required": [
                                                "tagId",
                                                "name"
                                            ],
                                            "properties": {
                                                "tagId": {
                                                    "type": "string",
                                                    "title": "Tag ID",
                                                    "description": "Maps to the tagId of a SoftwareIdentity."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "Maps to the name of a SoftwareIdentity."
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "title": "Version",
                                                    "default": "0.0",
                                                    "description": "Maps to the version of a SoftwareIdentity."
                                                },
                                                "tagVersion": {
                                                    "type": "integer",
                                                    "title": "Tag Version",
                                                    "default": 0,
                                                    "description": "Maps to the tagVersion of a SoftwareIdentity."
                                                },
                                                "patch": {
                                                    "type": "boolean",
                                                    "title": "Patch",
                                                    "default": false,
                                                    "description": "Maps to the patch of a SoftwareIdentity."
                                                },
                                                "text": {
                                                    "title": "Attachment text",
                                                    "description": "Specifies the metadata and content of the SWID tag.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/attachment"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "default": "The URL to the SWID file.",
                                                    "pattern": "^(.*)$"
                                                }
                                            }
                                        },
                                        "attachment": {
                                            "type": "object",
                                            "title": "Attachment",
                                            "description": "Specifies the metadata and content for an attachment.",
                                            "required": [
                                                "content"
                                            ],
                                            "properties": {
                                                "contentType": {
                                                    "type": "string",
                                                    "title": "Content-Type",
                                                    "description": "Specifies the content type of the text. Defaults to text/plain if not specified.",
                                                    "default": "text/plain"
                                                },
                                                "encoding": {
                                                    "type": "string",
                                                    "title": "Encoding",
                                                    "description": "Specifies the optional encoding the text is represented in.",
                                                    "enum": [
                                                        "base64"
                                                    ],
                                                    "default": "",
                                                    "pattern": "^(.*)$"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "title": "Attachment Text",
                                                    "description": "The attachment data"
                                                }
                                            }
                                        },
                                        "hash": {
                                            "type": "object",
                                            "title": "Hash Objects",
                                            "required": [
                                                "alg",
                                                "content"
                                            ],
                                            "properties": {
                                                "alg": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/hash-alg"
                                                },
                                                "content": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/hash-content"
                                                }
                                            }
                                        },
                                        "hash-alg": {
                                            "type": "string",
                                            "enum": [
                                                "MD5",
                                                "SHA-1",
                                                "SHA-256",
                                                "SHA-384",
                                                "SHA-512",
                                                "SHA3-256",
                                                "SHA3-384",
                                                "SHA3-512",
                                                "BLAKE2b-256",
                                                "BLAKE2b-384",
                                                "BLAKE2b-512",
                                                "BLAKE3"
                                            ],
                                            "title": "Hash Algorithm",
                                            "default": "",
                                            "pattern": "^(.*)$"
                                        },
                                        "hash-content": {
                                            "type": "string",
                                            "title": "Hash Content (value)",
                                            "default": "",
                                            "examples": [
                                                "3942447fac867ae5cdb3229b658f4d48"
                                            ],
                                            "pattern": "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"
                                        },
                                        "license": {
                                            "type": "object",
                                            "title": "License Object",
                                            "oneOf": [
                                                {
                                                    "required": [
                                                        "id"
                                                    ]
                                                },
                                                {
                                                    "required": [
                                                        "name"
                                                    ]
                                                }
                                            ],
                                            "properties": {
                                                "id": {
                                                    "title": "License ID (SPDX)",
                                                    "description": "A valid SPDX license ID",
                                                    "examples": [
                                                        "Apache-2.0"
                                                    ],
                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                    "$id": "http://cyclonedx.org/schema/spdx.schema.json",
                                                    "$comment": "v1.0-3.9",
                                                    "type": "string",
                                                    "enum": [
                                                        "0BSD",
                                                        "AAL",
                                                        "ADSL",
                                                        "AFL-1.1",
                                                        "AFL-1.2",
                                                        "AFL-2.0",
                                                        "AFL-2.1",
                                                        "AFL-3.0",
                                                        "AGPL-1.0",
                                                        "AGPL-1.0-only",
                                                        "AGPL-1.0-or-later",
                                                        "AGPL-3.0",
                                                        "AGPL-3.0-only",
                                                        "AGPL-3.0-or-later",
                                                        "AMDPLPA",
                                                        "AML",
                                                        "AMPAS",
                                                        "ANTLR-PD",
                                                        "APAFML",
                                                        "APL-1.0",
                                                        "APSL-1.0",
                                                        "APSL-1.1",
                                                        "APSL-1.2",
                                                        "APSL-2.0",
                                                        "Abstyles",
                                                        "Adobe-2006",
                                                        "Adobe-Glyph",
                                                        "Afmparse",
                                                        "Aladdin",
                                                        "Apache-1.0",
                                                        "Apache-1.1",
                                                        "Apache-2.0",
                                                        "Artistic-1.0",
                                                        "Artistic-1.0-Perl",
                                                        "Artistic-1.0-cl8",
                                                        "Artistic-2.0",
                                                        "BSD-1-Clause",
                                                        "BSD-2-Clause",
                                                        "BSD-2-Clause-FreeBSD",
                                                        "BSD-2-Clause-NetBSD",
                                                        "BSD-2-Clause-Patent",
                                                        "BSD-3-Clause",
                                                        "BSD-3-Clause-Attribution",
                                                        "BSD-3-Clause-Clear",
                                                        "BSD-3-Clause-LBNL",
                                                        "BSD-3-Clause-No-Nuclear-License",
                                                        "BSD-3-Clause-No-Nuclear-License-2014",
                                                        "BSD-3-Clause-No-Nuclear-Warranty",
                                                        "BSD-3-Clause-Open-MPI",
                                                        "BSD-4-Clause",
                                                        "BSD-4-Clause-UC",
                                                        "BSD-Protection",
                                                        "BSD-Source-Code",
                                                        "BSL-1.0",
                                                        "Bahyph",
                                                        "Barr",
                                                        "Beerware",
                                                        "BitTorrent-1.0",
                                                        "BitTorrent-1.1",
                                                        "BlueOak-1.0.0",
                                                        "Borceux",
                                                        "CAL-1.0",
                                                        "CAL-1.0-Combined-Work-Exception",
                                                        "CATOSL-1.1",
                                                        "CC-BY-1.0",
                                                        "CC-BY-2.0",
                                                        "CC-BY-2.5",
                                                        "CC-BY-3.0",
                                                        "CC-BY-4.0",
                                                        "CC-BY-NC-1.0",
                                                        "CC-BY-NC-2.0",
                                                        "CC-BY-NC-2.5",
                                                        "CC-BY-NC-3.0",
                                                        "CC-BY-NC-4.0",
                                                        "CC-BY-NC-ND-1.0",
                                                        "CC-BY-NC-ND-2.0",
                                                        "CC-BY-NC-ND-2.5",
                                                        "CC-BY-NC-ND-3.0",
                                                        "CC-BY-NC-ND-4.0",
                                                        "CC-BY-NC-SA-1.0",
                                                        "CC-BY-NC-SA-2.0",
                                                        "CC-BY-NC-SA-2.5",
                                                        "CC-BY-NC-SA-3.0",
                                                        "CC-BY-NC-SA-4.0",
                                                        "CC-BY-ND-1.0",
                                                        "CC-BY-ND-2.0",
                                                        "CC-BY-ND-2.5",
                                                        "CC-BY-ND-3.0",
                                                        "CC-BY-ND-4.0",
                                                        "CC-BY-SA-1.0",
                                                        "CC-BY-SA-2.0",
                                                        "CC-BY-SA-2.5",
                                                        "CC-BY-SA-3.0",
                                                        "CC-BY-SA-4.0",
                                                        "CC-PDDC",
                                                        "CC0-1.0",
                                                        "CDDL-1.0",
                                                        "CDDL-1.1",
                                                        "CDLA-Permissive-1.0",
                                                        "CDLA-Sharing-1.0",
                                                        "CECILL-1.0",
                                                        "CECILL-1.1",
                                                        "CECILL-2.0",
                                                        "CECILL-2.1",
                                                        "CECILL-B",
                                                        "CECILL-C",
                                                        "CERN-OHL-1.1",
                                                        "CERN-OHL-1.2",
                                                        "CERN-OHL-P-2.0",
                                                        "CERN-OHL-S-2.0",
                                                        "CERN-OHL-W-2.0",
                                                        "CNRI-Jython",
                                                        "CNRI-Python",
                                                        "CNRI-Python-GPL-Compatible",
                                                        "CPAL-1.0",
                                                        "CPL-1.0",
                                                        "CPOL-1.02",
                                                        "CUA-OPL-1.0",
                                                        "Caldera",
                                                        "ClArtistic",
                                                        "Condor-1.1",
                                                        "Crossword",
                                                        "CrystalStacker",
                                                        "Cube",
                                                        "D-FSL-1.0",
                                                        "DOC",
                                                        "DSDP",
                                                        "Dotseqn",
                                                        "ECL-1.0",
                                                        "ECL-2.0",
                                                        "EFL-1.0",
                                                        "EFL-2.0",
                                                        "EPL-1.0",
                                                        "EPL-2.0",
                                                        "EUDatagrid",
                                                        "EUPL-1.0",
                                                        "EUPL-1.1",
                                                        "EUPL-1.2",
                                                        "Entessa",
                                                        "ErlPL-1.1",
                                                        "Eurosym",
                                                        "FSFAP",
                                                        "FSFUL",
                                                        "FSFULLR",
                                                        "FTL",
                                                        "Fair",
                                                        "Frameworx-1.0",
                                                        "FreeImage",
                                                        "GFDL-1.1",
                                                        "GFDL-1.1-only",
                                                        "GFDL-1.1-or-later",
                                                        "GFDL-1.2",
                                                        "GFDL-1.2-only",
                                                        "GFDL-1.2-or-later",
                                                        "GFDL-1.3",
                                                        "GFDL-1.3-only",
                                                        "GFDL-1.3-or-later",
                                                        "GL2PS",
                                                        "GPL-1.0",
                                                        "GPL-1.0+",
                                                        "GPL-1.0-only",
                                                        "GPL-1.0-or-later",
                                                        "GPL-2.0",
                                                        "GPL-2.0+",
                                                        "GPL-2.0-only",
                                                        "GPL-2.0-or-later",
                                                        "GPL-2.0-with-GCC-exception",
                                                        "GPL-2.0-with-autoconf-exception",
                                                        "GPL-2.0-with-bison-exception",
                                                        "GPL-2.0-with-classpath-exception",
                                                        "GPL-2.0-with-font-exception",
                                                        "GPL-3.0",
                                                        "GPL-3.0+",
                                                        "GPL-3.0-only",
                                                        "GPL-3.0-or-later",
                                                        "GPL-3.0-with-GCC-exception",
                                                        "GPL-3.0-with-autoconf-exception",
                                                        "Giftware",
                                                        "Glide",
                                                        "Glulxe",
                                                        "HPND",
                                                        "HPND-sell-variant",
                                                        "HaskellReport",
                                                        "Hippocratic-2.1",
                                                        "IBM-pibs",
                                                        "ICU",
                                                        "IJG",
                                                        "IPA",
                                                        "IPL-1.0",
                                                        "ISC",
                                                        "ImageMagick",
                                                        "Imlib2",
                                                        "Info-ZIP",
                                                        "Intel",
                                                        "Intel-ACPI",
                                                        "Interbase-1.0",
                                                        "JPNIC",
                                                        "JSON",
                                                        "JasPer-2.0",
                                                        "LAL-1.2",
                                                        "LAL-1.3",
                                                        "LGPL-2.0",
                                                        "LGPL-2.0+",
                                                        "LGPL-2.0-only",
                                                        "LGPL-2.0-or-later",
                                                        "LGPL-2.1",
                                                        "LGPL-2.1+",
                                                        "LGPL-2.1-only",
                                                        "LGPL-2.1-or-later",
                                                        "LGPL-3.0",
                                                        "LGPL-3.0+",
                                                        "LGPL-3.0-only",
                                                        "LGPL-3.0-or-later",
                                                        "LGPLLR",
                                                        "LPL-1.0",
                                                        "LPL-1.02",
                                                        "LPPL-1.0",
                                                        "LPPL-1.1",
                                                        "LPPL-1.2",
                                                        "LPPL-1.3a",
                                                        "LPPL-1.3c",
                                                        "Latex2e",
                                                        "Leptonica",
                                                        "LiLiQ-P-1.1",
                                                        "LiLiQ-R-1.1",
                                                        "LiLiQ-Rplus-1.1",
                                                        "Libpng",
                                                        "Linux-OpenIB",
                                                        "MIT",
                                                        "MIT-0",
                                                        "MIT-CMU",
                                                        "MIT-advertising",
                                                        "MIT-enna",
                                                        "MIT-feh",
                                                        "MITNFA",
                                                        "MPL-1.0",
                                                        "MPL-1.1",
                                                        "MPL-2.0",
                                                        "MPL-2.0-no-copyleft-exception",
                                                        "MS-PL",
                                                        "MS-RL",
                                                        "MTLL",
                                                        "MakeIndex",
                                                        "MirOS",
                                                        "Motosoto",
                                                        "MulanPSL-1.0",
                                                        "MulanPSL-2.0",
                                                        "Multics",
                                                        "Mup",
                                                        "NASA-1.3",
                                                        "NBPL-1.0",
                                                        "NCGL-UK-2.0",
                                                        "NCSA",
                                                        "NGPL",
                                                        "NLOD-1.0",
                                                        "NLPL",
                                                        "NOSL",
                                                        "NPL-1.0",
                                                        "NPL-1.1",
                                                        "NPOSL-3.0",
                                                        "NRL",
                                                        "NTP",
                                                        "NTP-0",
                                                        "Naumen",
                                                        "Net-SNMP",
                                                        "NetCDF",
                                                        "Newsletr",
                                                        "Nokia",
                                                        "Noweb",
                                                        "Nunit",
                                                        "O-UDA-1.0",
                                                        "OCCT-PL",
                                                        "OCLC-2.0",
                                                        "ODC-By-1.0",
                                                        "ODbL-1.0",
                                                        "OFL-1.0",
                                                        "OFL-1.0-RFN",
                                                        "OFL-1.0-no-RFN",
                                                        "OFL-1.1",
                                                        "OFL-1.1-RFN",
                                                        "OFL-1.1-no-RFN",
                                                        "OGC-1.0",
                                                        "OGL-Canada-2.0",
                                                        "OGL-UK-1.0",
                                                        "OGL-UK-2.0",
                                                        "OGL-UK-3.0",
                                                        "OGTSL",
                                                        "OLDAP-1.1",
                                                        "OLDAP-1.2",
                                                        "OLDAP-1.3",
                                                        "OLDAP-1.4",
                                                        "OLDAP-2.0",
                                                        "OLDAP-2.0.1",
                                                        "OLDAP-2.1",
                                                        "OLDAP-2.2",
                                                        "OLDAP-2.2.1",
                                                        "OLDAP-2.2.2",
                                                        "OLDAP-2.3",
                                                        "OLDAP-2.4",
                                                        "OLDAP-2.5",
                                                        "OLDAP-2.6",
                                                        "OLDAP-2.7",
                                                        "OLDAP-2.8",
                                                        "OML",
                                                        "OPL-1.0",
                                                        "OSET-PL-2.1",
                                                        "OSL-1.0",
                                                        "OSL-1.1",
                                                        "OSL-2.0",
                                                        "OSL-2.1",
                                                        "OSL-3.0",
                                                        "OpenSSL",
                                                        "PDDL-1.0",
                                                        "PHP-3.0",
                                                        "PHP-3.01",
                                                        "PSF-2.0",
                                                        "Parity-6.0.0",
                                                        "Parity-7.0.0",
                                                        "Plexus",
                                                        "PolyForm-Noncommercial-1.0.0",
                                                        "PolyForm-Small-Business-1.0.0",
                                                        "PostgreSQL",
                                                        "Python-2.0",
                                                        "QPL-1.0",
                                                        "Qhull",
                                                        "RHeCos-1.1",
                                                        "RPL-1.1",
                                                        "RPL-1.5",
                                                        "RPSL-1.0",
                                                        "RSA-MD",
                                                        "RSCPL",
                                                        "Rdisc",
                                                        "Ruby",
                                                        "SAX-PD",
                                                        "SCEA",
                                                        "SGI-B-1.0",
                                                        "SGI-B-1.1",
                                                        "SGI-B-2.0",
                                                        "SHL-0.5",
                                                        "SHL-0.51",
                                                        "SISSL",
                                                        "SISSL-1.2",
                                                        "SMLNJ",
                                                        "SMPPL",
                                                        "SNIA",
                                                        "SPL-1.0",
                                                        "SSH-OpenSSH",
                                                        "SSH-short",
                                                        "SSPL-1.0",
                                                        "SWL",
                                                        "Saxpath",
                                                        "Sendmail",
                                                        "Sendmail-8.23",
                                                        "SimPL-2.0",
                                                        "Sleepycat",
                                                        "Spencer-86",
                                                        "Spencer-94",
                                                        "Spencer-99",
                                                        "StandardML-NJ",
                                                        "SugarCRM-1.1.3",
                                                        "TAPR-OHL-1.0",
                                                        "TCL",
                                                        "TCP-wrappers",
                                                        "TMate",
                                                        "TORQUE-1.1",
                                                        "TOSL",
                                                        "TU-Berlin-1.0",
                                                        "TU-Berlin-2.0",
                                                        "UCL-1.0",
                                                        "UPL-1.0",
                                                        "Unicode-DFS-2015",
                                                        "Unicode-DFS-2016",
                                                        "Unicode-TOU",
                                                        "Unlicense",
                                                        "VOSTROM",
                                                        "VSL-1.0",
                                                        "Vim",
                                                        "W3C",
                                                        "W3C-19980720",
                                                        "W3C-20150513",
                                                        "WTFPL",
                                                        "Watcom-1.0",
                                                        "Wsuipa",
                                                        "X11",
                                                        "XFree86-1.1",
                                                        "XSkat",
                                                        "Xerox",
                                                        "Xnet",
                                                        "YPL-1.0",
                                                        "YPL-1.1",
                                                        "ZPL-1.1",
                                                        "ZPL-2.0",
                                                        "ZPL-2.1",
                                                        "Zed",
                                                        "Zend-2.0",
                                                        "Zimbra-1.3",
                                                        "Zimbra-1.4",
                                                        "Zlib",
                                                        "blessing",
                                                        "bzip2-1.0.5",
                                                        "bzip2-1.0.6",
                                                        "copyleft-next-0.3.0",
                                                        "copyleft-next-0.3.1",
                                                        "curl",
                                                        "diffmark",
                                                        "dvipdfm",
                                                        "eCos-2.0",
                                                        "eGenix",
                                                        "etalab-2.0",
                                                        "gSOAP-1.3b",
                                                        "gnuplot",
                                                        "iMatix",
                                                        "libpng-2.0",
                                                        "libselinux-1.0",
                                                        "libtiff",
                                                        "mpich2",
                                                        "psfrag",
                                                        "psutils",
                                                        "wxWindows",
                                                        "xinetd",
                                                        "xpp",
                                                        "zlib-acknowledgement",
                                                        "GCC-exception-2.0",
                                                        "openvpn-openssl-exception",
                                                        "Nokia-Qt-exception-1.1",
                                                        "GPL-3.0-linking-exception",
                                                        "Fawkes-Runtime-exception",
                                                        "u-boot-exception-2.0",
                                                        "PS-or-PDF-font-exception-20170817",
                                                        "gnu-javamail-exception",
                                                        "LGPL-3.0-linking-exception",
                                                        "DigiRule-FOSS-exception",
                                                        "LLVM-exception",
                                                        "Linux-syscall-note",
                                                        "GPL-3.0-linking-source-exception",
                                                        "Qwt-exception-1.0",
                                                        "389-exception",
                                                        "mif-exception",
                                                        "eCos-exception-2.0",
                                                        "CLISP-exception-2.0",
                                                        "Bison-exception-2.2",
                                                        "Libtool-exception",
                                                        "LZMA-exception",
                                                        "OpenJDK-assembly-exception-1.0",
                                                        "Font-exception-2.0",
                                                        "OCaml-LGPL-linking-exception",
                                                        "GCC-exception-3.1",
                                                        "Bootloader-exception",
                                                        "SHL-2.0",
                                                        "Classpath-exception-2.0",
                                                        "Swift-exception",
                                                        "Autoconf-exception-2.0",
                                                        "FLTK-exception",
                                                        "freertos-exception-2.0",
                                                        "Universal-FOSS-exception-1.0",
                                                        "WxWindows-exception-3.1",
                                                        "OCCT-exception-1.0",
                                                        "Autoconf-exception-3.0",
                                                        "i2p-gpl-java-exception",
                                                        "GPL-CC-1.0",
                                                        "Qt-LGPL-exception-1.1",
                                                        "SHL-2.1",
                                                        "Qt-GPL-exception-1.0"
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "License Name",
                                                    "description": "If SPDX does not define the license used, this field may be used to provide the license name",
                                                    "default": "",
                                                    "examples": [
                                                        "Acme Software License"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "text": {
                                                    "title": "License text",
                                                    "description": "An optional way to include the textual content of a license.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/attachment"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "License URL",
                                                    "description": "The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness",
                                                    "examples": [
                                                        "https://www.apache.org/licenses/LICENSE-2.0.txt"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                }
                                            }
                                        },
                                        "commit": {
                                            "type": "object",
                                            "title": "Commit",
                                            "description": "Specifies an individual commit",
                                            "properties": {
                                                "uid": {
                                                    "type": "string",
                                                    "title": "UID",
                                                    "description": "A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.",
                                                    "pattern": "^(.*)$"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "description": "The URL to the commit. This URL will typically point to a commit in a version control system.",
                                                    "format": "iri-reference"
                                                },
                                                "author": {
                                                    "title": "Author",
                                                    "description": "The author who created the changes in the commit",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/identifiableAction"
                                                },
                                                "committer": {
                                                    "title": "Committer",
                                                    "description": "The person who committed or pushed the commit",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/identifiableAction"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "title": "Message",
                                                    "description": "The text description of the contents of the commit",
                                                    "pattern": "^(.*)$"
                                                }
                                            }
                                        },
                                        "patch": {
                                            "type": "object",
                                            "title": "Patch",
                                            "description": "Specifies an individual patch",
                                            "required": [
                                                "type"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "unofficial",
                                                        "monkey",
                                                        "backport",
                                                        "cherry-pick"
                                                    ],
                                                    "title": "Type",
                                                    "description": "Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality"
                                                },
                                                "diff": {
                                                    "title": "Diff",
                                                    "description": "The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/diff"
                                                },
                                                "resolves": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/issue"
                                                    },
                                                    "title": "Resolves",
                                                    "description": "A collection of issues the patch resolves"
                                                }
                                            }
                                        },
                                        "diff": {
                                            "type": "object",
                                            "title": "Diff",
                                            "description": "The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff",
                                            "properties": {
                                                "text": {
                                                    "title": "Diff text",
                                                    "description": "Specifies the optional text of the diff",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/attachment"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "description": "Specifies the URL to the diff",
                                                    "pattern": "^(.*)$"
                                                }
                                            }
                                        },
                                        "issue": {
                                            "type": "object",
                                            "title": "Diff",
                                            "description": "The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff",
                                            "required": [
                                                "type"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "defect",
                                                        "enhancement",
                                                        "security"
                                                    ],
                                                    "title": "Type",
                                                    "description": "Specifies the type of issue"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "title": "ID",
                                                    "description": "The identifier of the issue assigned by the source of the issue",
                                                    "pattern": "^(.*)$"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of the issue",
                                                    "pattern": "^(.*)$"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "title": "Description",
                                                    "description": "A description of the issue",
                                                    "pattern": "^(.*)$"
                                                },
                                                "source": {
                                                    "type": "object",
                                                    "title": "Source",
                                                    "description": "The source of the issue where it is documented",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "title": "Name",
                                                            "description": "The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'",
                                                            "pattern": "^(.*)$"
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "title": "URL",
                                                            "description": "The url of the issue documentation as provided by the source",
                                                            "pattern": "^(.*)$"
                                                        }
                                                    }
                                                },
                                                "references": {
                                                    "type": "array",
                                                    "title": "References",
                                                    "description": "A collection of URL's for reference. Multiple URLs are allowed.",
                                                    "default": "",
                                                    "examples": [
                                                        "https://example.com"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                }
                                            }
                                        },
                                        "identifiableAction": {
                                            "type": "object",
                                            "title": "Identifiable Action",
                                            "description": "Specifies an individual commit",
                                            "properties": {
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "title": "Timestamp",
                                                    "description": "The timestamp in which the action occurred"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Name",
                                                    "description": "The name of the individual who performed the action",
                                                    "pattern": "^(.*)$"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "idn-email",
                                                    "title": "E-mail",
                                                    "description": "The email address of the individual who performed the action"
                                                }
                                            }
                                        },
                                        "externalReference": {
                                            "type": "object",
                                            "title": "External Reference",
                                            "description": "Specifies an individual external reference",
                                            "required": [
                                                "url",
                                                "type"
                                            ],
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "title": "URL",
                                                    "description": "The URL to the external reference",
                                                    "pattern": "^(.*)$"
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "title": "Comment",
                                                    "description": "An optional comment describing the external reference",
                                                    "pattern": "^(.*)$"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "title": "Type",
                                                    "description": "Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.",
                                                    "enum": [
                                                        "vcs",
                                                        "issue-tracker",
                                                        "website",
                                                        "advisories",
                                                        "bom",
                                                        "mailing-list",
                                                        "social",
                                                        "chat",
                                                        "documentation",
                                                        "support",
                                                        "distribution",
                                                        "license",
                                                        "build-meta",
                                                        "build-system",
                                                        "other"
                                                    ]
                                                }
                                            }
                                        },
                                        "dependency": {
                                            "type": "object",
                                            "title": "Dependency",
                                            "description": "Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.",
                                            "required": [
                                                "ref"
                                            ],
                                            "properties": {
                                                "ref": {
                                                    "type": "string",
                                                    "format": "string",
                                                    "title": "Reference",
                                                    "description": "References a component by the components bom-ref attribute"
                                                },
                                                "dependsOn": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "title": "Depends On",
                                                    "description": "The bom-ref identifiers of the components that are dependencies of this dependency object."
                                                }
                                            }
                                        },
                                        "service": {
                                            "type": "object",
                                            "title": "Service Object",
                                            "required": [
                                                "name"
                                            ],
                                            "properties": {
                                                "bom-ref": {
                                                    "type": "string",
                                                    "title": "BOM Reference",
                                                    "description": "An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref should be unique.",
                                                    "default": "",
                                                    "pattern": "^(.*)$"
                                                },
                                                "provider": {
                                                    "title": "Provider",
                                                    "description": "The organization that provides the service.",
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/organizationalEntity"
                                                },
                                                "group": {
                                                    "type": "string",
                                                    "title": "Service Group",
                                                    "description": "The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.",
                                                    "default": "",
                                                    "examples": [
                                                        "com.acme"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "title": "Service Name",
                                                    "description": "The name of the service. This will often be a shortened, single name of the service.",
                                                    "default": "",
                                                    "examples": [
                                                        "ticker-service"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "title": "Service Version",
                                                    "description": "The service version.",
                                                    "default": "",
                                                    "examples": [
                                                        "1.0.0"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "title": "Service Description",
                                                    "description": "Specifies a description for the service",
                                                    "default": "",
                                                    "pattern": "^(.*)$"
                                                },
                                                "endpoints": {
                                                    "type": "array",
                                                    "title": "Endpoints",
                                                    "description": "The endpoint URIs of the service. Multiple endpoints are allowed.",
                                                    "default": "",
                                                    "examples": [
                                                        "https://example.com/api/v1/ticker"
                                                    ],
                                                    "pattern": "^(.*)$"
                                                },
                                                "authenticated": {
                                                    "type": "boolean",
                                                    "title": "Authentication Required",
                                                    "description": "A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."
                                                },
                                                "x-trust-boundary": {
                                                    "type": "boolean",
                                                    "title": "Crosses Trust Boundary",
                                                    "description": "A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/dataClassification"
                                                    },
                                                    "title": "Data Classification",
                                                    "description": "Specifies the data classification."
                                                },
                                                "licenses": {
                                                    "type": "array",
                                                    "title": "Component License(s)",
                                                    "items": {
                                                        "properties": {
                                                            "license": {
                                                                "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/license"
                                                            },
                                                            "expression": {
                                                                "type": "string",
                                                                "title": "SPDX License Expression",
                                                                "examples": [
                                                                    "Apache-2.0 AND (MIT OR GPL-2.0-only)",
                                                                    "GPL-3.0-only WITH Classpath-exception-2.0"
                                                                ],
                                                                "pattern": "^(.*)$"
                                                            }
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "required": [
                                                                    "license"
                                                                ]
                                                            },
                                                            {
                                                                "required": [
                                                                    "expression"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "externalReferences": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/externalReference"
                                                    },
                                                    "title": "External References"
                                                }
                                            }
                                        },
                                        "dataClassification": {
                                            "type": "object",
                                            "title": "Hash Objects",
                                            "required": [
                                                "flow",
                                                "classification"
                                            ],
                                            "properties": {
                                                "flow": {
                                                    "$ref": "#/components/requestBodies/sbom/content/application~1json/schema/oneOf/1/definitions/dataFlow"
                                                },
                                                "classification": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "dataFlow": {
                                            "type": "string",
                                            "enum": [
                                                "inbound",
                                                "outbound",
                                                "bi-directional",
                                                "unknown"
                                            ],
                                            "title": "Data flow direction",
                                            "default": "",
                                            "pattern": "^(.*)$"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "responses": {
            "badRequest": {
                "description": "Bad Request"
            },
            "forbidden": {
                "description": "Authorization Failure"
            },
            "internalServerError": {
                "description": "Internal Server Error"
            },
            "apiKey": {
                "description": "Result of the login operation.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "team": {
                "description": "An organization made up of members, projects, codebases, and tokens.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/team"
                        }
                    }
                }
            },
            "teamList": {
                "description": "A list of teams.",
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/team"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "member": {
                "description": "Members of a team.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/member"
                        }
                    }
                }
            },
            "memberList": {
                "description": "A list of members.",
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/member"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "project": {
                "description": "An initiative within an organization that includes one or more codebases.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/project"
                        }
                    }
                }
            },
            "projectList": {
                "description": "A list of projects.",
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/project"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "codebase": {
                "description": "A collection of assets used to produce one or more software products, tools, or utilities. Usually maps to a source control repository.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/codebase"
                        }
                    }
                }
            },
            "codebaseList": {
                "description": "A list of codebases.",
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/codebase"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "token": {
                "description": "A secret use to authenticate, authorize, and track SBOM upload operations.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/token"
                        }
                    }
                }
            },
            "tokenList": {
                "description": "A list of tokens.",
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/token"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "uploadResult": {
                "description": "The result of an SBOM upload operation.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/uploadResult"
                        }
                    }
                }
            },
            "userList": {
                "description": "The user search matches. Queries members by email address.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/userList"
                        }
                    }
                }
            }
        }
    },
    "x-amazon-apigateway-cors": {
        "allowMethods": [
            "DELETE",
            "GET",
            "HEAD",
            "OPTIONS",
            "POST",
            "PUT"
        ],
        "allowHeaders": [
            "authorization",
            "content-type",
            "x-amz-date",
            "x-api-key"
        ],
        "maxAge": -42,
        "allowCredentials": false,
        "allowOrigins": [
            "*"
        ]
    },
    "x-amazon-apigateway-importexport-version": "1.0"
}
