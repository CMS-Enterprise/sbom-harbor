use serde::{Deserialize, Serialize};
/*
 * Generated by: https://openapi-generator.tech
 */

/// ExternalReference : Specifies an individual external reference
#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ExternalReference {
    /// The URL to the external reference
    #[serde(rename = "url")]
    pub url: String,
    /// An optional comment describing the external reference
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.
    #[serde(rename = "type")]
    pub r#type: ExternalReferenceType,
    /// The hashes of the external reference (if applicable).
    #[serde(rename = "hashes", skip_serializing_if = "Option::is_none")]
    pub hashes: Option<Vec<crate::models::cyclonedx::Hash>>,
}

impl ExternalReference {
    /// Specifies an individual external reference
    pub fn new(url: String, r#type: ExternalReferenceType) -> ExternalReference {
        ExternalReference {
            url,
            comment: None,
            r#type,
            hashes: None,
        }
    }
}

/// Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ExternalReferenceType {
    #[serde(rename = "vcs")]
    Vcs,
    #[serde(rename = "issue-tracker")]
    IssueTracker,
    #[serde(rename = "website")]
    Website,
    #[serde(rename = "advisories")]
    Advisories,
    #[serde(rename = "bom")]
    Bom,
    #[serde(rename = "mailing-list")]
    MailingList,
    #[serde(rename = "social")]
    Social,
    #[serde(rename = "chat")]
    Chat,
    #[serde(rename = "documentation")]
    Documentation,
    #[serde(rename = "support")]
    Support,
    #[serde(rename = "distribution")]
    Distribution,
    #[serde(rename = "license")]
    License,
    #[serde(rename = "build-meta")]
    BuildMeta,
    #[serde(rename = "build-system")]
    BuildSystem,
    #[serde(rename = "release-notes")]
    ReleaseNotes,
    #[serde(rename = "other")]
    Other,
}

impl Default for ExternalReferenceType {
    fn default() -> ExternalReferenceType {
        Self::Vcs
    }
}

