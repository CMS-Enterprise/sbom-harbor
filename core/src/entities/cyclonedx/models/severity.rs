use serde::{Deserialize, Serialize};
/*
 * Generated by: https://openapi-generator.tech
 */

/// Textual representation of the severity of the vulnerability adopted by the analysis method. If the analysis method uses values other than what is provided, the user is expected to translate appropriately.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Severity {
    #[serde(rename = "critical")]
    Critical,
    #[serde(rename = "high")]
    High,
    #[serde(rename = "medium")]
    Medium,
    #[serde(rename = "low")]
    Low,
    #[serde(rename = "info")]
    Info,
    #[serde(rename = "none")]
    None,
    #[serde(rename = "unknown")]
    Unknown,
}

impl ToString for Severity {
    fn to_string(&self) -> String {
        match self {
            Self::Critical => String::from("critical"),
            Self::High => String::from("high"),
            Self::Medium => String::from("medium"),
            Self::Low => String::from("low"),
            Self::Info => String::from("info"),
            Self::None => String::from("none"),
            Self::Unknown => String::from("unknown"),
        }
    }
}

impl Default for Severity {
    fn default() -> Severity {
        Self::Critical
    }
}
