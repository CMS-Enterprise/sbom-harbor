[
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "bcprov-jdk15on",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.62?type=jar",
        "findings.component.uuid": "fe46cfee-109a-4e6c-b81d-ac87e80f68bb",
        "findings.component.version": "1.62",
        "findings.component.group": "org.bouncycastle",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.341",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-0187",
        "findings.vulnerability.epssPercentile": 0.40696,
        "findings.vulnerability.cvssV2BaseScore": 2.1,
        "findings.vulnerability.description": "In engineSetMode of BaseBlockCipher.java, there is a possible incorrect cryptographic algorithm chosen due to an incomplete comparison. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-148517383",
        "findings.vulnerability.epssScore": 0.01036,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c3856f69-069e-4300-8e52-4e2391d2456b",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:fe46cfee-109a-4e6c-b81d-ac87e80f68bb:c3856f69-069e-4300-8e52-4e2391d2456b"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-common",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-common@10.0.2?type=jar",
        "findings.component.uuid": "63639311-0da4-4af2-ae19-91ed883b7a24",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.408",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2020-1714",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",
        "findings.vulnerability.epssScore": 0.01978,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.78181,
        "findings.vulnerability.cvssV2BaseScore": 6.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:63639311-0da4-4af2-ae19-91ed883b7a24:54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jackson-databind",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.1?type=jar",
        "findings.component.uuid": "9fe07ea9-651a-4c0f-9133-a665f0a6c9fa",
        "findings.component.version": "2.10.1",
        "findings.component.group": "com.fasterxml.jackson.core",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.478",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-25649",
        "findings.vulnerability.cweId": 611,
        "findings.vulnerability.description": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
        "findings.vulnerability.epssScore": 0.10214,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "8c3cfe3f-72aa-4fc8-b3fe-0b68418a1c97",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Restriction of XML External Entity Reference",
        "findings.vulnerability.epssPercentile": 0.94318,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9fe07ea9-651a-4c0f-9133-a665f0a6c9fa:8c3cfe3f-72aa-4fc8-b3fe-0b68418a1c97",
        "findings.vulnerability.cwes.cweId": 611,
        "findings.vulnerability.cwes.name": "Improper Restriction of XML External Entity Reference",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jackson-databind",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.1?type=jar",
        "findings.component.uuid": "9fe07ea9-651a-4c0f-9133-a665f0a6c9fa",
        "findings.component.version": "2.10.1",
        "findings.component.group": "com.fasterxml.jackson.core",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.523",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-36518",
        "findings.vulnerability.cweId": 787,
        "findings.vulnerability.description": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
        "findings.vulnerability.epssScore": 0.07176,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "6d09e096-69ce-40b5-8ed9-30caaa545bbd",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Out-of-bounds Write",
        "findings.vulnerability.epssPercentile": 0.91873,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9fe07ea9-651a-4c0f-9133-a665f0a6c9fa:6d09e096-69ce-40b5-8ed9-30caaa545bbd",
        "findings.vulnerability.cwes.cweId": 787,
        "findings.vulnerability.cwes.name": "Out-of-bounds Write",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "resteasy-jaxrs",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.jboss.resteasy/resteasy-jaxrs@3.11.2.Final?type=jar",
        "findings.component.uuid": "1b5c6bd2-d329-4ff6-9b0c-39882e0f1b6c",
        "findings.component.version": "3.11.2.Final",
        "findings.component.group": "org.jboss.resteasy",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.581",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2020-1695",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "A flaw was found in all resteasy 3.x.x versions prior to 3.12.0.Final and all resteasy 4.x.x versions prior to 4.6.0.Final, where an improper input validation results in returning an illegal header that integrates into the server's response. This flaw may result in an injection, which leads to unexpected behavior when the HTTP response is constructed.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0f2e1ed3-257a-44d8-a2ad-7a30a875243c",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:1b5c6bd2-d329-4ff6-9b0c-39882e0f1b6c:0f2e1ed3-257a-44d8-a2ad-7a30a875243c"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "resteasy-jaxrs",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.jboss.resteasy/resteasy-jaxrs@3.11.2.Final?type=jar",
        "findings.component.uuid": "1b5c6bd2-d329-4ff6-9b0c-39882e0f1b6c",
        "findings.component.version": "3.11.2.Final",
        "findings.component.group": "org.jboss.resteasy",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.627",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2021-20289",
        "findings.vulnerability.cweId": 209,
        "findings.vulnerability.description": "A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method's parameter value. The highest threat from this vulnerability is to data confidentiality.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "dedb02bc-b947-4a7e-a753-67a39ce60f85",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:1b5c6bd2-d329-4ff6-9b0c-39882e0f1b6c:dedb02bc-b947-4a7e-a753-67a39ce60f85",
        "findings.vulnerability.cwes.cweId": 209,
        "findings.vulnerability.cwes.name": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/commons-io/commons-io@2.6?type=jar",
        "findings.component.uuid": "f7e7f47c-6ee8-43aa-8eec-9a8b00af8f85",
        "findings.component.version": "2.6",
        "findings.component.group": "commons-io",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.685",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.vulnId": "CVE-2021-29425",
        "findings.vulnerability.cweId": 22,
        "findings.vulnerability.description": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "48131773-8b76-4e9c-a2bd-7b4ef3428592",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:f7e7f47c-6ee8-43aa-8eec-9a8b00af8f85:48131773-8b76-4e9c-a2bd-7b4ef3428592",
        "findings.vulnerability.cwes.cweId": 22,
        "findings.vulnerability.cwes.name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-core@10.0.2?type=jar",
        "findings.component.uuid": "de5202bb-7389-4101-bbe2-ea007c44673f",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.742",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2020-1714",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",
        "findings.vulnerability.epssScore": 0.01978,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.78181,
        "findings.vulnerability.cvssV2BaseScore": 6.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:de5202bb-7389-4101-bbe2-ea007c44673f:54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-core@10.0.2?type=jar",
        "findings.component.uuid": "de5202bb-7389-4101-bbe2-ea007c44673f",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.789",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-10758",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "A vulnerability was found in Keycloak before 11.0.1 where DoS attack is possible by sending twenty requests simultaneously to the specified keycloak server, all with a Content-Length header value that exceeds the actual byte count of the request body.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "305c92ba-1864-45ce-86c0-48593901a10f",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:de5202bb-7389-4101-bbe2-ea007c44673f:305c92ba-1864-45ce-86c0-48593901a10f",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-core@10.0.2?type=jar",
        "findings.component.uuid": "de5202bb-7389-4101-bbe2-ea007c44673f",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.835",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.4,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "URL Redirection to Untrusted Site ('Open Redirect')",
        "findings.vulnerability.vulnId": "CVE-2022-1970",
        "findings.vulnerability.cweId": 601,
        "findings.vulnerability.description": "keycloak-core - URL Redirection to Untrusted Site ('Open Redirect')",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "b241d00d-0fdc-42c9-bfa5-879fb132c4d4",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:de5202bb-7389-4101-bbe2-ea007c44673f:b241d00d-0fdc-42c9-bfa5-879fb132c4d4",
        "findings.vulnerability.cwes.cweId": 601,
        "findings.vulnerability.cwes.name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-core@10.0.2?type=jar",
        "findings.component.uuid": "de5202bb-7389-4101-bbe2-ea007c44673f",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.881",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.3,
        "findings.vulnerability.vulnId": "CVE-2020-14359",
        "findings.vulnerability.cweId": 305,
        "findings.vulnerability.description": "A vulnerability was found in all versions of keycloak, where on using lower case HTTP headers (via cURL) we can bypass our Gatekeeper. Lower case headers are also accepted by some webservers (e.g. Jetty). This means there is no protection when we put a Gatekeeper in front of a Jetty server and use lowercase headers.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "914bf323-ca2a-4a22-9885-777c695d3041",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Authentication Bypass by Primary Weakness",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:de5202bb-7389-4101-bbe2-ea007c44673f:914bf323-ca2a-4a22-9885-777c695d3041",
        "findings.vulnerability.cwes.cweId": 305,
        "findings.vulnerability.cwes.name": "Authentication Bypass by Primary Weakness",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-core@10.0.2?type=jar",
        "findings.component.uuid": "de5202bb-7389-4101-bbe2-ea007c44673f",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.927",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-1466",
        "findings.vulnerability.cweId": 863,
        "findings.vulnerability.description": "Due to improper authorization, Red Hat Single Sign-On is vulnerable to users performing actions that they should not be allowed to perform. It was possible to add users to the master realm even though no respective permission was granted.",
        "findings.vulnerability.epssScore": 0.0089,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a80621c4-a21f-4bd6-b4ef-9feb489a00f7",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Incorrect Authorization",
        "findings.vulnerability.epssPercentile": 0.2808,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:de5202bb-7389-4101-bbe2-ea007c44673f:a80621c4-a21f-4bd6-b4ef-9feb489a00f7",
        "findings.vulnerability.cwes.cweId": 863,
        "findings.vulnerability.cwes.name": "Incorrect Authorization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "httpclient",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.httpcomponents/httpclient@4.5.11?type=jar",
        "findings.component.uuid": "dd63c1c3-e526-4035-9658-19429ddbb7a0",
        "findings.component.version": "4.5.11",
        "findings.component.group": "org.apache.httpcomponents",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:03.983",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-13956",
        "findings.vulnerability.epssPercentile": 0.87605,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
        "findings.vulnerability.epssScore": 0.04468,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "e40494c7-c991-4588-b0ae-e09af781acec",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:dd63c1c3-e526-4035-9658-19429ddbb7a0:e40494c7-c991-4588-b0ae-e09af781acec"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "snakeyaml",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.yaml/snakeyaml@1.20?type=jar",
        "findings.component.uuid": "4c6a9a2c-a40a-4d87-947e-846dd48c3e99",
        "findings.component.version": "1.20",
        "findings.component.group": "org.yaml",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.043",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-18640",
        "findings.vulnerability.cweId": 776,
        "findings.vulnerability.description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4c6a9a2c-a40a-4d87-947e-846dd48c3e99:29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.cwes.cweId": 776,
        "findings.vulnerability.cwes.name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-server-spi-private",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-server-spi-private@10.0.2?type=jar",
        "findings.component.uuid": "876c8922-ee83-4a98-8727-59f90ffd1774",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.101",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.vulnId": "CVE-2020-10776",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "A flaw was found in Keycloak before version 12.0.0, where it is possible to add unsafe schemes for the redirect_uri parameter. This flaw allows an attacker to perform a Cross-site scripting attack.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "36c7d2fa-ebac-47a5-b314-79472038ce3a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 3.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:876c8922-ee83-4a98-8727-59f90ffd1774:36c7d2fa-ebac-47a5-b314-79472038ce3a",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xmlsec",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.santuario/xmlsec@2.1.4?type=jar",
        "findings.component.uuid": "f889dbe3-545b-4cad-9790-ff1f54c01caa",
        "findings.component.version": "2.1.4",
        "findings.component.group": "org.apache.santuario",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.162",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-40690",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "All versions of Apache Santuario - XML Security for Java prior to 2.2.3 and 2.1.7 are vulnerable to an issue where the \"secureValidation\" property is not passed correctly when creating a KeyInfo from a KeyInfoReference element. This allows an attacker to abuse an XPath Transform to extract any local .xml files in a RetrievalMethod element.",
        "findings.vulnerability.epssScore": 0.03032,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "1596dcc2-3bbf-423d-be2f-c5febb04d7cf",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.82635,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:f889dbe3-545b-4cad-9790-ff1f54c01caa:1596dcc2-3bbf-423d-be2f-c5febb04d7cf",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "resteasy-client",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.jboss.resteasy/resteasy-client@3.11.2.Final?type=jar",
        "findings.component.uuid": "0e71f2ff-6500-4fd2-b76c-ad6da264e921",
        "findings.component.version": "3.11.2.Final",
        "findings.component.group": "org.jboss.resteasy",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.226",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-25633",
        "findings.vulnerability.cweId": 209,
        "findings.vulnerability.description": "A flaw was found in RESTEasy client in all versions of RESTEasy up to 4.5.6.Final. It may allow client users to obtain the server's potentially sensitive information when the server got WebApplicationException from the RESTEasy client call. The highest threat from this vulnerability is to data confidentiality.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c797d4ab-19d5-41d6-a418-1b6213234d53",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0e71f2ff-6500-4fd2-b76c-ad6da264e921:c797d4ab-19d5-41d6-a418-1b6213234d53",
        "findings.vulnerability.cwes.cweId": 209,
        "findings.vulnerability.cwes.name": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "owasp-java-html-sanitizer",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer@20191001.1?type=jar",
        "findings.component.uuid": "f621da64-756a-4aa9-bdd3-a8450e92820b",
        "findings.component.version": "20191001.1",
        "findings.component.group": "com.googlecode.owasp-java-html-sanitizer",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.284",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.vulnId": "CVE-2021-42575",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.vulnerability.description": "The OWASP Java HTML Sanitizer before 20211018.1 does not properly enforce policies associated with the SELECT, STYLE, and OPTION elements.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7ec429b3-3786-4900-9cc0-7f134d46e31b",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:f621da64-756a-4aa9-bdd3-a8450e92820b:7ec429b3-3786-4900-9cc0-7f134d46e31b"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "okhttp",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.squareup.okhttp3/okhttp@3.14.2?type=jar",
        "findings.component.uuid": "24eaa78e-05dd-4dc9-a494-4a49f4c4b216",
        "findings.component.version": "3.14.2",
        "findings.component.group": "com.squareup.okhttp3",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.341",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-0341",
        "findings.vulnerability.cweId": 295,
        "findings.vulnerability.description": "In verifyHostName of OkHostnameVerifier.java, there is a possible way to accept a certificate for the wrong domain due to improperly used crypto. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-8.1 Android-9 Android-10 Android-11Android ID: A-171980069",
        "findings.vulnerability.epssScore": 0.01156,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "77e46b38-5021-4586-9505-3dd6a22c25fe",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Certificate Validation",
        "findings.vulnerability.epssPercentile": 0.59602,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:24eaa78e-05dd-4dc9-a494-4a49f4c4b216:77e46b38-5021-4586-9505-3dd6a22c25fe",
        "findings.vulnerability.cwes.cweId": 295,
        "findings.vulnerability.cwes.name": "Improper Certificate Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "snakeyaml",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.yaml/snakeyaml@1.14?type=jar",
        "findings.component.uuid": "ebd82bf8-6640-4592-8d5e-7e1c693bd756",
        "findings.component.version": "1.14",
        "findings.component.group": "org.yaml",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.397",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-18640",
        "findings.vulnerability.cweId": 776,
        "findings.vulnerability.description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ebd82bf8-6640-4592-8d5e-7e1c693bd756:29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.cwes.cweId": 776,
        "findings.vulnerability.cwes.name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.18?type=jar",
        "findings.component.uuid": "e7a7c144-0763-4b0f-96e6-12eac47334ee",
        "findings.component.version": "1.18",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.453",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2019-12402",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "71073d49-18cd-4983-b433-90e71abdcbf1",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e7a7c144-0763-4b0f-96e6-12eac47334ee:71073d49-18cd-4983-b433-90e71abdcbf1",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.18?type=jar",
        "findings.component.uuid": "e7a7c144-0763-4b0f-96e6-12eac47334ee",
        "findings.component.version": "1.18",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.499",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35515",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "47250b55-ae0a-45bb-b2a0-3cfcbc77ad04",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e7a7c144-0763-4b0f-96e6-12eac47334ee:47250b55-ae0a-45bb-b2a0-3cfcbc77ad04",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.18?type=jar",
        "findings.component.uuid": "e7a7c144-0763-4b0f-96e6-12eac47334ee",
        "findings.component.version": "1.18",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.545",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35516",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d700af5e-6afb-4d80-8e43-8ae907567698",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e7a7c144-0763-4b0f-96e6-12eac47334ee:d700af5e-6afb-4d80-8e43-8ae907567698",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.18?type=jar",
        "findings.component.uuid": "e7a7c144-0763-4b0f-96e6-12eac47334ee",
        "findings.component.version": "1.18",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.589",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35517",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0d829154-7261-4554-b5d3-ac4e0d874969",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e7a7c144-0763-4b0f-96e6-12eac47334ee:0d829154-7261-4554-b5d3-ac4e0d874969",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.18?type=jar",
        "findings.component.uuid": "e7a7c144-0763-4b0f-96e6-12eac47334ee",
        "findings.component.version": "1.18",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.633",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2021-36090",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "abf15b3e-3937-471f-bd10-251355327db6",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e7a7c144-0763-4b0f-96e6-12eac47334ee:abf15b3e-3937-471f-bd10-251355327db6"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jackson-dataformat-cbor",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.fasterxml.jackson.dataformat/jackson-dataformat-cbor@2.10.1?type=jar",
        "findings.component.uuid": "c4bd35f1-e9b0-43cc-8ab4-88374fb0ace5",
        "findings.component.version": "2.10.1",
        "findings.component.group": "com.fasterxml.jackson.dataformat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.688",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-28491",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "This affects the package com.fasterxml.jackson.dataformat:jackson-dataformat-cbor from 0 and before 2.11.4, from 2.12.0-rc1 and before 2.12.1. Unchecked allocation of byte buffer can cause a java.lang.OutOfMemoryError exception.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "e1eff8de-fa8b-4803-951c-57eb39ab7bd1",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c4bd35f1-e9b0-43cc-8ab4-88374fb0ace5:e1eff8de-fa8b-4803-951c-57eb39ab7bd1",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.746",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.1,
        "findings.vulnerability.vulnId": "CVE-2020-14389",
        "findings.vulnerability.cweId": 916,
        "findings.vulnerability.description": "It was found that Keycloak before version 12.0.0 would permit a user with only view-profile role to manage the resources in the new account console, allowing access and modification of data the user was not intended to have.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "6522713e-3ac8-46b3-b646-b378131e0d65",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Use of Password Hash With Insufficient Computational Effort",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:6522713e-3ac8-46b3-b646-b378131e0d65",
        "findings.vulnerability.cwes.cweId": 916,
        "findings.vulnerability.cwes.name": "Use of Password Hash With Insufficient Computational Effort",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.791",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-14366",
        "findings.vulnerability.cweId": 22,
        "findings.vulnerability.description": "A vulnerability was found in keycloak, where path traversal using URL-encoded path segments in the request is possible because the resources endpoint applies a transformation of the url path to the file path. Only few specific folder hierarchies can be exposed by this flaw",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a4665ecd-e2a3-4454-9c30-fd7a690d3f65",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:a4665ecd-e2a3-4454-9c30-fd7a690d3f65",
        "findings.vulnerability.cwes.cweId": 22,
        "findings.vulnerability.cwes.name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.835",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Authorization",
        "findings.vulnerability.vulnId": "CVE-2021-3632",
        "findings.vulnerability.cweId": 285,
        "findings.vulnerability.description": "keycloak-services - Improper Authorization",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "edb12fa0-cc3b-4915-ada2-9c9edf3d940d",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:edb12fa0-cc3b-4915-ada2-9c9edf3d940d",
        "findings.vulnerability.cwes.cweId": 285,
        "findings.vulnerability.cwes.name": "Improper Authorization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.878",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.3,
        "findings.vulnerability.vulnId": "CVE-2021-20202",
        "findings.vulnerability.cweId": 377,
        "findings.vulnerability.description": "A flaw was found in keycloak. Directories can be created prior to the Java process creating them in the temporary directory, but with wider user permissions, allowing the attacker to have access to the contents that keycloak stores in this directory. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "28891cf4-37c6-4109-9ff7-3515fd84f48d",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Insecure Temporary File",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:28891cf4-37c6-4109-9ff7-3515fd84f48d",
        "findings.vulnerability.cwes.cweId": 377,
        "findings.vulnerability.cwes.name": "Insecure Temporary File",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.922",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.1,
        "findings.vulnerability.vulnId": "CVE-2021-3461",
        "findings.vulnerability.cweId": 613,
        "findings.vulnerability.description": "A flaw was found in keycloak where keycloak may fail to logout user session if the logout request comes from external SAML identity provider and Principal Type is set to Attribute [Name].",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d2ea4979-5537-4687-bb89-c8150ff372d6",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Insufficient Session Expiration",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 3.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:d2ea4979-5537-4687-bb89-c8150ff372d6",
        "findings.vulnerability.cwes.cweId": 613,
        "findings.vulnerability.cwes.name": "Insufficient Session Expiration",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:04.966",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.8,
        "findings.vulnerability.vulnId": "CVE-2021-20262",
        "findings.vulnerability.cweId": 306,
        "findings.vulnerability.description": "A flaw was found in Keycloak 12.0.0 where re-authentication does not occur while updating the password. This flaw allows an attacker to take over an account if they can obtain temporary, physical access to a user\u2019s browser. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "846a1dbf-56a8-41d0-b23e-9f51c026c23e",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Missing Authentication for Critical Function",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:846a1dbf-56a8-41d0-b23e-9f51c026c23e",
        "findings.vulnerability.cwes.cweId": 306,
        "findings.vulnerability.cwes.name": "Missing Authentication for Critical Function",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.01",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2020-27838",
        "findings.vulnerability.cweId": 287,
        "findings.vulnerability.description": "A flaw was found in keycloak in versions prior to 13.0.0. The client registration endpoint allows fetching information about PUBLIC clients (like client secret) without authentication which could be an issue if the same PUBLIC client changed to CONFIDENTIAL later. The highest threat from this vulnerability is to data confidentiality.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "4c1d7dec-a973-4bb2-9f74-8e6566ddf073",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Authentication",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:4c1d7dec-a973-4bb2-9f74-8e6566ddf073",
        "findings.vulnerability.cwes.cweId": 287,
        "findings.vulnerability.cwes.name": "Improper Authentication",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.054",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.vulnId": "CVE-2021-3856",
        "findings.vulnerability.cweId": 22,
        "findings.vulnerability.description": "keycloak-services - Path Traversal",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "458ea3f6-c532-4a00-b472-333a97050f3e",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:458ea3f6-c532-4a00-b472-333a97050f3e",
        "findings.vulnerability.cwes.cweId": 22,
        "findings.vulnerability.cwes.name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.098",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.4,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Insufficiently Protected Credentials",
        "findings.vulnerability.vulnId": "CVE-2021-3513",
        "findings.vulnerability.cweId": 522,
        "findings.vulnerability.description": "keycloak-services - Insufficiently Protected Credentials",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f03346d1-4ea4-4411-ab1c-782510cc598b",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:f03346d1-4ea4-4411-ab1c-782510cc598b",
        "findings.vulnerability.cwes.cweId": 522,
        "findings.vulnerability.cwes.name": "Insufficiently Protected Credentials",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.143",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2021-20323",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "A POST based reflected Cross Site Scripting vulnerability on has been identified in Keycloak.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cc0401ed-0018-4cc2-91ef-88c68310ad01",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:cc0401ed-0018-4cc2-91ef-88c68310ad01",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.187",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.vulnId": "CVE-2022-0225",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "keycloak-services - Cross-site Scripting (XSS)",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3af5a7ce-818e-4e88-a2ff-6ed7f0cf608b",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:3af5a7ce-818e-4e88-a2ff-6ed7f0cf608b",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.231",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-10770",
        "findings.vulnerability.cweId": 918,
        "findings.vulnerability.description": "A flaw was found in Keycloak before 13.0.0, where it is possible to force the server to call out an unverified URL using the OIDC parameter request_uri. This flaw allows an attacker to use this parameter to execute a Server-side request forgery (SSRF) attack.",
        "findings.vulnerability.epssScore": 0.08592,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "2da38ab8-6619-4e86-9900-a7ea21df574f",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Server-Side Request Forgery (SSRF)",
        "findings.vulnerability.epssPercentile": 0.93583,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:2da38ab8-6619-4e86-9900-a7ea21df574f",
        "findings.vulnerability.cwes.cweId": 918,
        "findings.vulnerability.cwes.name": "Server-Side Request Forgery (SSRF)",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.275",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-3424",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "A flaw was found in keycloak as shipped in Red Hat Single Sign-On 7.4 where IDN homograph attacks are possible. A malicious user can register himself with a name already registered and trick admin to grant him extra privileges.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ebd0fb90-b8c1-4392-bfd4-77f8930aac52",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:ebd0fb90-b8c1-4392-bfd4-77f8930aac52"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.32",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.vulnId": "CVE-2020-10776",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "A flaw was found in Keycloak before version 12.0.0, where it is possible to add unsafe schemes for the redirect_uri parameter. This flaw allows an attacker to perform a Cross-site scripting attack.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "36c7d2fa-ebac-47a5-b314-79472038ce3a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 3.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:36c7d2fa-ebac-47a5-b314-79472038ce3a",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.364",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.3,
        "findings.vulnerability.vulnId": "CVE-2020-1723",
        "findings.vulnerability.cweId": 601,
        "findings.vulnerability.description": "The logout endpoint /oauth/logout?redirect=url can be abused to redirect logged in users to arbitrary web pages. This vulnerability could be used in phishing attacks. Versions shipped with Red Hat Mobile Aplication Platform 4 are believed to be vulnerable.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "2d2335a1-f618-491b-a2d8-c52d06b6cbd1",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "URL Redirection to Untrusted Site ('Open Redirect')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:2d2335a1-f618-491b-a2d8-c52d06b6cbd1",
        "findings.vulnerability.cwes.cweId": 601,
        "findings.vulnerability.cwes.name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.408",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.2,
        "findings.vulnerability.vulnId": "CVE-2020-27826",
        "findings.vulnerability.cweId": 250,
        "findings.vulnerability.description": "A flaw was found in Keycloak before version 12.0.0 where it is possible to update the user's metadata attributes using Account REST API. This flaw allows an attacker to change its own NameID attribute to impersonate the admin user for any particular application.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "edcc5bec-e600-4029-8eb2-00636d4f9ac1",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Execution with Unnecessary Privileges",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:edcc5bec-e600-4029-8eb2-00636d4f9ac1",
        "findings.vulnerability.cwes.cweId": 250,
        "findings.vulnerability.cwes.name": "Execution with Unnecessary Privileges",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.454",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.2,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Certificate Validation",
        "findings.vulnerability.vulnId": "CVE-2020-35509",
        "findings.vulnerability.cweId": 295,
        "findings.vulnerability.description": "keycloak-services - Improper Certificate Validation",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "552f57f0-c19c-4e28-8a71-93c37f8dcee9",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:552f57f0-c19c-4e28-8a71-93c37f8dcee9",
        "findings.vulnerability.cwes.cweId": 295,
        "findings.vulnerability.cwes.name": "Improper Certificate Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.499",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.2,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Authentication",
        "findings.vulnerability.vulnId": "CVE-2021-3827",
        "findings.vulnerability.cweId": 287,
        "findings.vulnerability.description": "keycloak-services - Improper Authentication",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7678bfac-c7f6-4a69-baaa-733d3aa1eb6f",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:7678bfac-c7f6-4a69-baaa-733d3aa1eb6f",
        "findings.vulnerability.cwes.cweId": 287,
        "findings.vulnerability.cwes.name": "Improper Authentication",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.543",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 3.3,
        "findings.vulnerability.vulnId": "CVE-2020-10734",
        "findings.vulnerability.cweId": 352,
        "findings.vulnerability.description": "A vulnerability was found in keycloak in the way that the OIDC logout endpoint does not have CSRF protection. Versions shipped with Red Hat Fuse 7, Red Hat Single Sign-on 7, and Red Hat Openshift Application Runtimes are believed to be vulnerable.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d64aea0b-b78b-4b6f-9841-f76aec4e7f4d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 2.1,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:d64aea0b-b78b-4b6f-9841-f76aec4e7f4d",
        "findings.vulnerability.cwes.cweId": 352,
        "findings.vulnerability.cwes.name": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-services",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-services@10.0.2?type=jar",
        "findings.component.uuid": "27a91181-22ac-45f7-aa1e-058db5f21fa0",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.589",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2020-1717",
        "findings.vulnerability.cweId": 209,
        "findings.vulnerability.description": "A flaw was found in Keycloak 7.0.1. A logged in user can do an account email enumeration attack.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "4271f892-5076-4532-947d-66e79eb327bd",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:27a91181-22ac-45f7-aa1e-058db5f21fa0:4271f892-5076-4532-947d-66e79eb327bd",
        "findings.vulnerability.cwes.cweId": 209,
        "findings.vulnerability.cwes.name": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-themes",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-themes@10.0.2?type=jar",
        "findings.component.uuid": "964faf9b-3233-453f-910e-1b6ca200df3b",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.644",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-20222",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "A flaw was found in keycloak. The new account console in keycloak can allow malicious code to be executed using the referrer URL. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "22cfc4f3-6865-44c6-a4b7-a6bae4faeb52",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5.1,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:964faf9b-3233-453f-910e-1b6ca200df3b:22cfc4f3-6865-44c6-a4b7-a6bae4faeb52",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "liquibase-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.liquibase/liquibase-core@3.5.5?type=jar",
        "findings.component.uuid": "5cdf64de-9c8b-41e6-a541-6f5f7f21f4d0",
        "findings.component.version": "3.5.5",
        "findings.component.group": "org.liquibase",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.698",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-0839",
        "findings.vulnerability.cweId": 611,
        "findings.vulnerability.description": "Improper Restriction of XML External Entity Reference in GitHub repository liquibase/liquibase prior to 4.8.0.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "6032458a-c195-4d42-a627-b0cf571f2304",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Restriction of XML External Entity Reference",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5cdf64de-9c8b-41e6-a541-6f5f7f21f4d0:6032458a-c195-4d42-a627-b0cf571f2304",
        "findings.vulnerability.cwes.cweId": 611,
        "findings.vulnerability.cwes.name": "Improper Restriction of XML External Entity Reference",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "hibernate-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.hibernate/hibernate-core@5.3.15.Final?type=jar",
        "findings.component.uuid": "cf001cdf-d0eb-4e6f-b107-410f6e5d1070",
        "findings.component.version": "5.3.15.Final",
        "findings.component.group": "org.hibernate",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.753",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.4,
        "findings.vulnerability.vulnId": "CVE-2020-25638",
        "findings.vulnerability.cweId": 89,
        "findings.vulnerability.description": "A flaw was found in hibernate-core in versions prior to and including 5.4.23.Final. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SQL comments of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "findings.vulnerability.epssScore": 0.01108,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "683f6fc8-4f04-488d-826b-72eaf0905eb4",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "findings.vulnerability.epssPercentile": 0.52961,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:cf001cdf-d0eb-4e6f-b107-410f6e5d1070:683f6fc8-4f04-488d-826b-72eaf0905eb4",
        "findings.vulnerability.cwes.cweId": 89,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "hibernate-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.hibernate/hibernate-core@5.3.15.Final?type=jar",
        "findings.component.uuid": "cf001cdf-d0eb-4e6f-b107-410f6e5d1070",
        "findings.component.version": "5.3.15.Final",
        "findings.component.group": "org.hibernate",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.795",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2019-14900",
        "findings.vulnerability.cweId": 89,
        "findings.vulnerability.description": "A flaw was found in Hibernate ORM in versions before 5.3.18, 5.4.18 and 5.5.0.Beta1. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SELECT or GROUP BY parts of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks.",
        "findings.vulnerability.epssScore": 0.0089,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "1d1ed76d-69fb-494b-a77a-b839b47fd83d",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "findings.vulnerability.epssPercentile": 0.2808,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:cf001cdf-d0eb-4e6f-b107-410f6e5d1070:1d1ed76d-69fb-494b-a77a-b839b47fd83d",
        "findings.vulnerability.cwes.cweId": 89,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "infinispan-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.infinispan/infinispan-core@9.4.18.Final?type=jar",
        "findings.component.uuid": "8b957834-c00a-469f-b333-fdabfe493fc3",
        "findings.component.version": "9.4.18.Final",
        "findings.component.group": "org.infinispan",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.853",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2020-25711",
        "findings.vulnerability.cweId": 862,
        "findings.vulnerability.description": "A flaw was found in infinispan 10 REST API, where authorization permissions are not checked while performing some server management operations. When authz is enabled, any user with authentication can perform operations like shutting down the server without the ADMIN role.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "beb79821-e76f-45ef-b0d0-90ce8009f591",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Missing Authorization",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8b957834-c00a-469f-b333-fdabfe493fc3:beb79821-e76f-45ef-b0d0-90ce8009f591",
        "findings.vulnerability.cwes.cweId": 862,
        "findings.vulnerability.cwes.name": "Missing Authorization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty-handler",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty-handler@4.1.45.Final?type=jar",
        "findings.component.uuid": "68e151d7-f776-43d5-adc6-a716a246e978",
        "findings.component.version": "4.1.45.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.909",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2021-21290",
        "findings.vulnerability.cweId": 378,
        "findings.vulnerability.description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Creation of Temporary File With Insecure Permissions",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 1.9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:68e151d7-f776-43d5-adc6-a716a246e978:006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.cwes.cweId": 378,
        "findings.vulnerability.cwes.name": "Creation of Temporary File With Insecure Permissions",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty-handler",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty-handler@4.1.45.Final?type=jar",
        "findings.component.uuid": "68e151d7-f776-43d5-adc6-a716a246e978",
        "findings.component.version": "4.1.45.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.909",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2021-21290",
        "findings.vulnerability.cweId": 378,
        "findings.vulnerability.description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Creation of Temporary File With Insecure Permissions",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 1.9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:68e151d7-f776-43d5-adc6-a716a246e978:006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.cwes.cweId": 379,
        "findings.vulnerability.cwes.name": "Creation of Temporary File in Directory with Insecure Permissions",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty-common",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty-common@4.1.45.Final?type=jar",
        "findings.component.uuid": "7f0ce2f6-087a-46d3-9299-57b5950e5257",
        "findings.component.version": "4.1.45.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.964",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2021-21290",
        "findings.vulnerability.cweId": 378,
        "findings.vulnerability.description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Creation of Temporary File With Insecure Permissions",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 1.9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7f0ce2f6-087a-46d3-9299-57b5950e5257:006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.cwes.cweId": 378,
        "findings.vulnerability.cwes.name": "Creation of Temporary File With Insecure Permissions",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty-common",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty-common@4.1.45.Final?type=jar",
        "findings.component.uuid": "7f0ce2f6-087a-46d3-9299-57b5950e5257",
        "findings.component.version": "4.1.45.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:05.964",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2021-21290",
        "findings.vulnerability.cweId": 378,
        "findings.vulnerability.description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Creation of Temporary File With Insecure Permissions",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 1.9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7f0ce2f6-087a-46d3-9299-57b5950e5257:006b9f12-f0bf-46d2-8a1f-1342d56337bf",
        "findings.vulnerability.cwes.cweId": 379,
        "findings.vulnerability.cwes.name": "Creation of Temporary File in Directory with Insecure Permissions",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty-codec",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty-codec@4.1.45.Final?type=jar",
        "findings.component.uuid": "8a99917c-7f9f-4ee0-b5b3-6c817c269c8f",
        "findings.component.version": "4.1.45.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.02",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-37136",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cfbaf503-d708-40d7-9530-ecac57aec772",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8a99917c-7f9f-4ee0-b5b3-6c817c269c8f:cfbaf503-d708-40d7-9530-ecac57aec772",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty-codec",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty-codec@4.1.45.Final?type=jar",
        "findings.component.uuid": "8a99917c-7f9f-4ee0-b5b3-6c817c269c8f",
        "findings.component.version": "4.1.45.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.064",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-37137",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c8c61d64-5c6d-459a-94fb-1d3ce73f2f8b",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8a99917c-7f9f-4ee0-b5b3-6c817c269c8f:c8c61d64-5c6d-459a-94fb-1d3ce73f2f8b",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "gson",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.google.code.gson/gson@2.8.2?type=jar",
        "findings.component.uuid": "c2080f18-5a69-4692-bffe-b44e4d5461e5",
        "findings.component.version": "2.8.2",
        "findings.component.group": "com.google.code.gson",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.119",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2022-25647",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "194bacbe-57ee-4780-9f4e-07a671a3f440",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c2080f18-5a69-4692-bffe-b44e4d5461e5:194bacbe-57ee-4780-9f4e-07a671a3f440",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-model-infinispan",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-model-infinispan@10.0.2?type=jar",
        "findings.component.uuid": "b337aa93-7758-4923-8abe-f6985e5ca1ac",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.177",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-3637",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "A flaw was found in keycloak-model-infinispan in keycloak versions before 14.0.0 where authenticationSessions map in RootAuthenticationSessionEntity grows boundlessly which could lead to a DoS attack.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "15aedc85-fd68-4b72-9ad5-6d14a30e1dc4",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b337aa93-7758-4923-8abe-f6985e5ca1ac:15aedc85-fd68-4b72-9ad5-6d14a30e1dc4",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "log4j",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/log4j/log4j@1.2.17?type=jar",
        "findings.component.uuid": "a24ca2ad-8807-433c-a689-aff665b80a43",
        "findings.component.version": "1.2.17",
        "findings.component.group": "log4j",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.232",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2019-17571",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.",
        "findings.vulnerability.epssScore": 0.54004,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "759ac2a0-9cc7-459c-92b2-bbd845886ed7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.98692,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a24ca2ad-8807-433c-a689-aff665b80a43:759ac2a0-9cc7-459c-92b2-bbd845886ed7",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "log4j",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/log4j/log4j@1.2.17?type=jar",
        "findings.component.uuid": "a24ca2ad-8807-433c-a689-aff665b80a43",
        "findings.component.version": "1.2.17",
        "findings.component.group": "log4j",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.275",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-23305",
        "findings.vulnerability.cweId": 89,
        "findings.vulnerability.description": "By design, the JDBCAppender in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from PatternLayout. The message converter, %m, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed. Note this issue only affects Log4j 1.x when specifically configured to use the JDBCAppender, which is not the default. Beginning in version 2.0-beta8, the JDBCAppender was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",
        "findings.vulnerability.epssScore": 0.182,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c889a40e-48e9-44f1-bde2-cb2cc81a176c",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "findings.vulnerability.epssPercentile": 0.96086,
        "findings.vulnerability.cvssV2BaseScore": 6.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a24ca2ad-8807-433c-a689-aff665b80a43:c889a40e-48e9-44f1-bde2-cb2cc81a176c",
        "findings.vulnerability.cwes.cweId": 89,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "log4j",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/log4j/log4j@1.2.17?type=jar",
        "findings.component.uuid": "a24ca2ad-8807-433c-a689-aff665b80a43",
        "findings.component.version": "1.2.17",
        "findings.component.group": "log4j",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.317",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2022-23302",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "JMSSink in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a TopicConnectionFactoryBindingName configuration causing JMSSink to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-4104. Note this issue only affects Log4j 1.x when specifically configured to use JMSSink, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",
        "findings.vulnerability.epssScore": 0.52138,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "e6640aa5-9903-4fc9-bf79-70df52c97311",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.9866,
        "findings.vulnerability.cvssV2BaseScore": 6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a24ca2ad-8807-433c-a689-aff665b80a43:e6640aa5-9903-4fc9-bf79-70df52c97311",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "log4j",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/log4j/log4j@1.2.17?type=jar",
        "findings.component.uuid": "a24ca2ad-8807-433c-a689-aff665b80a43",
        "findings.component.version": "1.2.17",
        "findings.component.group": "log4j",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.361",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2022-23307",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.",
        "findings.vulnerability.epssScore": 0.17493,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0fe6de12-adc6-4a42-a3ad-75d37ff5f6eb",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.9603,
        "findings.vulnerability.cvssV2BaseScore": 9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a24ca2ad-8807-433c-a689-aff665b80a43:0fe6de12-adc6-4a42-a3ad-75d37ff5f6eb",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "log4j",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/log4j/log4j@1.2.17?type=jar",
        "findings.component.uuid": "a24ca2ad-8807-433c-a689-aff665b80a43",
        "findings.component.version": "1.2.17",
        "findings.component.group": "log4j",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.405",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-4104",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "JMSAppender in Log4j 1.2 is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration. The attacker can provide TopicBindingName and TopicConnectionFactoryBindingName configurations causing JMSAppender to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-44228. Note this issue only affects Log4j 1.2 when specifically configured to use JMSAppender, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",
        "findings.vulnerability.epssScore": 0.68637,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "300fa330-4b2f-4de4-97c4-f3fed54e154c",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.99075,
        "findings.vulnerability.cvssV2BaseScore": 6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a24ca2ad-8807-433c-a689-aff665b80a43:300fa330-4b2f-4de4-97c4-f3fed54e154c",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "api-ldap-client-api",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.directory.api/api-ldap-client-api@1.0.0?type=jar",
        "findings.component.uuid": "9d89ac57-4034-4e48-8f64-523667bb4ec0",
        "findings.component.version": "1.0.0",
        "findings.component.group": "org.apache.directory.api",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.47",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2018-1337",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Apache Directory LDAP API before 1.0.2, a bug in the way the SSL Filter was setup made it possible for another thread to use the connection before the TLS layer has been established, if the connection has already been used and put back in a pool of connections, leading to leaking any information contained in this request (including the credentials when sending a BIND request).",
        "findings.vulnerability.epssScore": 0.01859,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "560aaea2-9bfd-4653-9397-b95d0ffbc01a",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.75949,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9d89ac57-4034-4e48-8f64-523667bb4ec0:560aaea2-9bfd-4653-9397-b95d0ffbc01a",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "mina-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.mina/mina-core@2.0.16?type=jar",
        "findings.component.uuid": "4e3b3c90-85f6-4b13-8e5c-3f3549310c9c",
        "findings.component.version": "2.0.16",
        "findings.component.group": "org.apache.mina",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.53",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2019-0231",
        "findings.vulnerability.cweId": 319,
        "findings.vulnerability.description": "Handling of the close_notify SSL/TLS message does not lead to a connection closure, leading the server to retain the socket opened and to have the client potentially receive clear text messages afterward. Mitigation: 2.0.20 users should migrate to 2.0.21, 2.1.0 users should migrate to 2.1.1. This issue affects: Apache MINA.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "6dd8f8b4-be0d-4e36-a1cf-e0f8a4c82149",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Cleartext Transmission of Sensitive Information",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4e3b3c90-85f6-4b13-8e5c-3f3549310c9c:6dd8f8b4-be0d-4e36-a1cf-e0f8a4c82149",
        "findings.vulnerability.cwes.cweId": 319,
        "findings.vulnerability.cwes.name": "Cleartext Transmission of Sensitive Information",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "wildfly-controller",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.wildfly.core/wildfly-controller@11.1.1.Final?type=jar",
        "findings.component.uuid": "0ccf02b0-7255-4bc6-84ef-4abc676b0410",
        "findings.component.version": "11.1.1.Final",
        "findings.component.group": "org.wildfly.core",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.587",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 3.3,
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Access Control",
        "findings.vulnerability.vulnId": "CVE-2021-3644",
        "findings.vulnerability.cweId": 284,
        "findings.vulnerability.description": "wildfly-controller - Improper Access Control",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "efd3f9cd-f2a7-4942-9d40-08cc1b4e500e",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0ccf02b0-7255-4bc6-84ef-4abc676b0410:efd3f9cd-f2a7-4942-9d40-08cc1b4e500e",
        "findings.vulnerability.cwes.cweId": 284,
        "findings.vulnerability.cwes.name": "Improper Access Control",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "wildfly-protocol",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.wildfly.core/wildfly-protocol@11.1.1.Final?type=jar",
        "findings.component.uuid": "17769758-94df-4785-a9f9-e1f36dbc5de4",
        "findings.component.version": "11.1.1.Final",
        "findings.component.group": "org.wildfly.core",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.642",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2020-25689",
        "findings.vulnerability.cweId": 401,
        "findings.vulnerability.description": "A memory leak flaw was found in WildFly in all versions up to 21.0.0.Final, where host-controller tries to reconnect in a loop, generating new connections which are not properly closed while not able to connect to domain-controller. This flaw allows an attacker to cause an Out of memory (OOM) issue, leading to a denial of service. The highest threat from this vulnerability is to system availability.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "4054afa1-5838-483c-8cb4-a42a044990ee",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Missing Release of Memory after Effective Lifetime",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 6.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:17769758-94df-4785-a9f9-e1f36dbc5de4:4054afa1-5838-483c-8cb4-a42a044990ee",
        "findings.vulnerability.cwes.cweId": 401,
        "findings.vulnerability.cwes.name": "Missing Release of Memory after Effective Lifetime",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jboss-remoting",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.jboss.remoting/jboss-remoting@5.0.17.Final?type=jar",
        "findings.component.uuid": "ca3138d3-319d-409c-9759-24debc4b11ef",
        "findings.component.version": "5.0.17.Final",
        "findings.component.group": "org.jboss.remoting",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.698",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.9,
        "findings.vulnerability.vulnId": "CVE-2020-35510",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "A flaw was found in jboss-remoting in versions before 5.0.20.SP1-redhat-00001. A malicious attacker could cause threads to hold up forever in the EJB server by writing a sequence of bytes corresponding to the expected messages of a successful EJB client request, but omitting the ACK messages, or just tamper with jboss-remoting code, deleting the lines that send the ACK message from the EJB client code resulting in a denial of service. The highest threat from this vulnerability is to system availability.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "e6bef257-55af-44d5-bffd-698b08806b38",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.1,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ca3138d3-319d-409c-9759-24debc4b11ef:e6bef257-55af-44d5-bffd-698b08806b38",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "wildfly-elytron",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.wildfly.security/wildfly-elytron@1.11.4.Final?type=jar",
        "findings.component.uuid": "ce9e8745-6ee5-491e-b63c-492c4f56f8b5",
        "findings.component.version": "1.11.4.Final",
        "findings.component.group": "org.wildfly.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.755",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2021-3642",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "A flaw was found in Wildfly Elytron in versions prior to 1.10.14.Final, prior to 1.15.5.Final and prior to 1.16.1.Final where ScramServer may be susceptible to Timing Attack if enabled. The highest threat of this vulnerability is confidentiality.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "73158e7c-992a-4c5b-bec9-b17b052ea218",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 3.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ce9e8745-6ee5-491e-b63c-492c4f56f8b5:73158e7c-992a-4c5b-bec9-b17b052ea218",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.818",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-10705",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "A flaw was discovered in Undertow in versions before Undertow 2.1.1.Final where certain requests to the \"Expect: 100-continue\" header may cause an out of memory error. This flaw may potentially lead to a denial of service.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "512e34b8-a7c5-4b32-95dc-0456029b59a3",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:512e34b8-a7c5-4b32-95dc-0456029b59a3",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.862",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.vulnId": "CVE-2021-3859",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "undertow-core - Denial of Service (DoS)",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "fb585eef-6eb0-4f3d-9945-635ad068ae6f",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:fb585eef-6eb0-4f3d-9945-635ad068ae6f",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.906",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2020-10719",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "A flaw was found in Undertow in versions before 2.1.1.Final, regarding the processing of invalid HTTP requests with large chunk sizes. This flaw allows an attacker to take advantage of HTTP request smuggling.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7ea9a38e-f6c6-4694-b417-c2458b12fdda",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 6.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:7ea9a38e-f6c6-4694-b417-c2458b12fdda",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.95",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Unchecked Return Value",
        "findings.vulnerability.vulnId": "CVE-2022-1319",
        "findings.vulnerability.cweId": 252,
        "findings.vulnerability.description": "undertow-core - Unchecked Return Value",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "726cca2b-4320-4686-929d-d24ec5c05116",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:726cca2b-4320-4686-929d-d24ec5c05116",
        "findings.vulnerability.cwes.cweId": 252,
        "findings.vulnerability.cwes.name": "Unchecked Return Value",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:06.994",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.9,
        "findings.vulnerability.vulnId": "CVE-2021-3597",
        "findings.vulnerability.cweId": 362,
        "findings.vulnerability.description": "A flaw was found in undertow. The HTTP2SourceChannel fails to write the final frame under some circumstances, resulting in a denial of service. The highest threat from this vulnerability is availability. This flaw affects Undertow versions prior to 2.0.35.SP1, prior to 2.2.6.SP1, prior to 2.2.7.SP1, prior to 2.0.36.SP1, prior to 2.2.9.Final and prior to 2.0.39.Final.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f82fdf30-83e6-4648-8544-1dd229028114",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 2.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:f82fdf30-83e6-4648-8544-1dd229028114",
        "findings.vulnerability.cwes.cweId": 362,
        "findings.vulnerability.cwes.name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.037",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2016-6311",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "Get requests in JBoss Enterprise Application Platform (EAP) 7 disclose internal IP addresses to remote attackers.",
        "findings.vulnerability.epssScore": 0.01213,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "4f6ffb88-3e74-46a5-bf4f-0596525a3436",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.65216,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:4f6ffb88-3e74-46a5-bf4f-0596525a3436",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.08",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.vulnId": "CVE-2022-2053",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "undertow-core - Denial of Service (DoS)",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "582a7187-999a-4cf1-886f-91160c2eef29",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:582a7187-999a-4cf1-886f-91160c2eef29",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.124",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.vulnId": "CVE-2020-10687",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "A flaw was discovered in all versions of Undertow before Undertow 2.2.0.Final, where HTTP request smuggling related to CVE-2017-2666 is possible against HTTP/1.x and HTTP/2 due to permitting invalid characters in an HTTP request. This flaw allows an attacker to poison a web-cache, perform an XSS attack, or obtain sensitive information from request other than their own.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3e75fdb6-66da-4cfa-bbd8-b724baf26fac",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:3e75fdb6-66da-4cfa-bbd8-b724baf26fac",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-core@2.1.0.Final?type=jar",
        "findings.component.uuid": "a09d3cb4-9737-46b9-861a-6d088c805219",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.168",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.vulnId": "CVE-2021-20220",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "A flaw was found in Undertow. A regression in the fix for CVE-2020-10687 was found. HTTP request smuggling related to CVE-2017-2666 is possible against HTTP/1.x and HTTP/2 due to permitting invalid characters in an HTTP request. This flaw allows an attacker to poison a web-cache, perform an XSS attack, or obtain sensitive information from request other than their own. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "9104b68e-1b11-46f3-9d07-8e4773081090",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a09d3cb4-9737-46b9-861a-6d088c805219:9104b68e-1b11-46f3-9d07-8e4773081090",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "wildfly-naming",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.wildfly/wildfly-naming@19.1.0.Final?type=jar",
        "findings.component.uuid": "be034804-7861-4e75-86d6-d70a0bfa0825",
        "findings.component.version": "19.1.0.Final",
        "findings.component.group": "org.wildfly",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.226",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-10740",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "A vulnerability was found in Wildfly in versions before 20.0.0.Final, where a remote deserialization attack is possible in the Enterprise Application Beans(EJB) due to lack of validation/filtering capabilities in wildfly.",
        "findings.vulnerability.epssScore": 0.01055,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "62e5b930-2a7b-4cde-8266-7dc34948f5b6",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.49853,
        "findings.vulnerability.cvssV2BaseScore": 6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:be034804-7861-4e75-86d6-d70a0bfa0825:62e5b930-2a7b-4cde-8266-7dc34948f5b6",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "resteasy-client",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.jboss.resteasy/resteasy-client@3.9.1.Final?type=jar",
        "findings.component.uuid": "4d0c39c2-37a3-4a78-b905-172246265a3d",
        "findings.component.version": "3.9.1.Final",
        "findings.component.group": "org.jboss.resteasy",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.286",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-25633",
        "findings.vulnerability.cweId": 209,
        "findings.vulnerability.description": "A flaw was found in RESTEasy client in all versions of RESTEasy up to 4.5.6.Final. It may allow client users to obtain the server's potentially sensitive information when the server got WebApplicationException from the RESTEasy client call. The highest threat from this vulnerability is to data confidentiality.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c797d4ab-19d5-41d6-a418-1b6213234d53",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4d0c39c2-37a3-4a78-b905-172246265a3d:c797d4ab-19d5-41d6-a418-1b6213234d53",
        "findings.vulnerability.cwes.cweId": 209,
        "findings.vulnerability.cwes.name": "Generation of Error Message Containing Sensitive Information",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@7.0.92?type=jar",
        "findings.component.uuid": "35bcd1b1-0e7d-474e-b135-3da7c73291eb",
        "findings.component.version": "7.0.92",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.345",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.1,
        "findings.vulnerability.vulnId": "CVE-2019-0232",
        "findings.vulnerability.cweId": 78,
        "findings.vulnerability.description": "When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",
        "findings.vulnerability.epssScore": 0.94954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.epssPercentile": 0.9996,
        "findings.vulnerability.cvssV2BaseScore": 9.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:35bcd1b1-0e7d-474e-b135-3da7c73291eb:d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.cwes.cweId": 78,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@7.0.92?type=jar",
        "findings.component.uuid": "35bcd1b1-0e7d-474e-b135-3da7c73291eb",
        "findings.component.version": "7.0.92",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.389",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2019-17563",
        "findings.vulnerability.cweId": 384,
        "findings.vulnerability.description": "When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c535be99-a142-46a8-b17e-caaecfa88dad",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Session Fixation",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 5.1,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:35bcd1b1-0e7d-474e-b135-3da7c73291eb:c535be99-a142-46a8-b17e-caaecfa88dad",
        "findings.vulnerability.cwes.cweId": 384,
        "findings.vulnerability.cwes.name": "Session Fixation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@7.0.92?type=jar",
        "findings.component.uuid": "35bcd1b1-0e7d-474e-b135-3da7c73291eb",
        "findings.component.version": "7.0.92",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.432",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-13935",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "The payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service.",
        "findings.vulnerability.epssScore": 0.49348,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "183cf938-e3ab-4160-9918-cfd0943ed24b",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.9853,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:35bcd1b1-0e7d-474e-b135-3da7c73291eb:183cf938-e3ab-4160-9918-cfd0943ed24b",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@7.0.92?type=jar",
        "findings.component.uuid": "35bcd1b1-0e7d-474e-b135-3da7c73291eb",
        "findings.component.version": "7.0.92",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.477",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7,
        "findings.vulnerability.vulnId": "CVE-2020-9484",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\"null\" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.",
        "findings.vulnerability.epssScore": 0.89957,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bd283f81-449a-4768-bdff-0d43ba68b12a",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.99833,
        "findings.vulnerability.cvssV2BaseScore": 4.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:35bcd1b1-0e7d-474e-b135-3da7c73291eb:bd283f81-449a-4768-bdff-0d43ba68b12a",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@7.0.92?type=jar",
        "findings.component.uuid": "35bcd1b1-0e7d-474e-b135-3da7c73291eb",
        "findings.component.version": "7.0.92",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.52",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2021-30640",
        "findings.vulnerability.cweId": 116,
        "findings.vulnerability.description": "A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.",
        "findings.vulnerability.epssScore": 0.01859,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "355c833e-24fe-47c2-a76d-99ec752ca9e2",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Encoding or Escaping of Output",
        "findings.vulnerability.epssPercentile": 0.75949,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:35bcd1b1-0e7d-474e-b135-3da7c73291eb:355c833e-24fe-47c2-a76d-99ec752ca9e2",
        "findings.vulnerability.cwes.cweId": 116,
        "findings.vulnerability.cwes.name": "Improper Encoding or Escaping of Output",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@7.0.92?type=jar",
        "findings.component.uuid": "35bcd1b1-0e7d-474e-b135-3da7c73291eb",
        "findings.component.version": "7.0.92",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.562",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-0221",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5e2c5121-450d-4533-b4db-a8896e6c0cb7",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:35bcd1b1-0e7d-474e-b135-3da7c73291eb:5e2c5121-450d-4533-b4db-a8896e6c0cb7",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@7.0.92?type=jar",
        "findings.component.uuid": "35bcd1b1-0e7d-474e-b135-3da7c73291eb",
        "findings.component.version": "7.0.92",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.603",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.9,
        "findings.vulnerability.vulnId": "CVE-2021-24122",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.",
        "findings.vulnerability.epssScore": 0.03032,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bf3b5d3e-9047-4e7e-b33b-61713a12215b",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.82635,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:35bcd1b1-0e7d-474e-b135-3da7c73291eb:bf3b5d3e-9047-4e7e-b33b-61713a12215b",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "14c0011e-82ae-4dd5-be3b-afdfb8a1d862",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.66",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:14c0011e-82ae-4dd5-be3b-afdfb8a1d862:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "14c0011e-82ae-4dd5-be3b-afdfb8a1d862",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.703",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:14c0011e-82ae-4dd5-be3b-afdfb8a1d862:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "14c0011e-82ae-4dd5-be3b-afdfb8a1d862",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.745",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10247",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:14c0011e-82ae-4dd5-be3b-afdfb8a1d862:11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "14c0011e-82ae-4dd5-be3b-afdfb8a1d862",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.786",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:14c0011e-82ae-4dd5-be3b-afdfb8a1d862:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "503db113-73ea-41fc-a0c3-f5e7b690280a",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.839",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:503db113-73ea-41fc-a0c3-f5e7b690280a:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 190,
        "findings.vulnerability.cwes.name": "Integer Overflow or Wraparound",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "503db113-73ea-41fc-a0c3-f5e7b690280a",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.839",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:503db113-73ea-41fc-a0c3-f5e7b690280a:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "503db113-73ea-41fc-a0c3-f5e7b690280a",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.881",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7658",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:503db113-73ea-41fc-a0c3-f5e7b690280a:5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "503db113-73ea-41fc-a0c3-f5e7b690280a",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.922",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:503db113-73ea-41fc-a0c3-f5e7b690280a:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "9caeda99-8b96-4933-8b96-68f3b31c0c6a",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:07.975",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9caeda99-8b96-4933-8b96-68f3b31c0c6a:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "155f58cf-712c-4899-b906-8af0d084179f",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.068",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-9735",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
        "findings.vulnerability.epssScore": 0.03779,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.84606,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:155f58cf-712c-4899-b906-8af0d084179f:785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "155f58cf-712c-4899-b906-8af0d084179f",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.187",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:155f58cf-712c-4899-b906-8af0d084179f:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@8.1.17.v20150415?type=jar",
        "findings.component.uuid": "155f58cf-712c-4899-b906-8af0d084179f",
        "findings.component.version": "8.1.17.v20150415",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.225",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10246",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:155f58cf-712c-4899-b906-8af0d084179f:02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@8.5.38?type=jar",
        "findings.component.uuid": "958c43db-7005-4472-9395-33b554ccff19",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.275",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.1,
        "findings.vulnerability.vulnId": "CVE-2019-0232",
        "findings.vulnerability.cweId": 78,
        "findings.vulnerability.description": "When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",
        "findings.vulnerability.epssScore": 0.94954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.epssPercentile": 0.9996,
        "findings.vulnerability.cvssV2BaseScore": 9.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:958c43db-7005-4472-9395-33b554ccff19:d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.cwes.cweId": 78,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@8.5.38?type=jar",
        "findings.component.uuid": "958c43db-7005-4472-9395-33b554ccff19",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.312",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2019-17563",
        "findings.vulnerability.cweId": 384,
        "findings.vulnerability.description": "When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c535be99-a142-46a8-b17e-caaecfa88dad",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Session Fixation",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 5.1,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:958c43db-7005-4472-9395-33b554ccff19:c535be99-a142-46a8-b17e-caaecfa88dad",
        "findings.vulnerability.cwes.cweId": 384,
        "findings.vulnerability.cwes.name": "Session Fixation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@8.5.38?type=jar",
        "findings.component.uuid": "958c43db-7005-4472-9395-33b554ccff19",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.351",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7,
        "findings.vulnerability.vulnId": "CVE-2020-9484",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\"null\" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.",
        "findings.vulnerability.epssScore": 0.89957,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bd283f81-449a-4768-bdff-0d43ba68b12a",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.99833,
        "findings.vulnerability.cvssV2BaseScore": 4.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:958c43db-7005-4472-9395-33b554ccff19:bd283f81-449a-4768-bdff-0d43ba68b12a",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@8.5.38?type=jar",
        "findings.component.uuid": "958c43db-7005-4472-9395-33b554ccff19",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.388",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2021-30640",
        "findings.vulnerability.cweId": 116,
        "findings.vulnerability.description": "A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.",
        "findings.vulnerability.epssScore": 0.01859,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "355c833e-24fe-47c2-a76d-99ec752ca9e2",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Encoding or Escaping of Output",
        "findings.vulnerability.epssPercentile": 0.75949,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:958c43db-7005-4472-9395-33b554ccff19:355c833e-24fe-47c2-a76d-99ec752ca9e2",
        "findings.vulnerability.cwes.cweId": 116,
        "findings.vulnerability.cwes.name": "Improper Encoding or Escaping of Output",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@8.5.38?type=jar",
        "findings.component.uuid": "958c43db-7005-4472-9395-33b554ccff19",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.426",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-0221",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5e2c5121-450d-4533-b4db-a8896e6c0cb7",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:958c43db-7005-4472-9395-33b554ccff19:5e2c5121-450d-4533-b4db-a8896e6c0cb7",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-catalina",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-catalina@8.5.38?type=jar",
        "findings.component.uuid": "958c43db-7005-4472-9395-33b554ccff19",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.463",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.9,
        "findings.vulnerability.vulnId": "CVE-2021-24122",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.",
        "findings.vulnerability.epssScore": 0.03032,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bf3b5d3e-9047-4e7e-b33b-61713a12215b",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.82635,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:958c43db-7005-4472-9395-33b554ccff19:bf3b5d3e-9047-4e7e-b33b-61713a12215b",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.513",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.vulnId": "CVE-2020-1938",
        "findings.vulnerability.epssPercentile": 0.99998,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.vulnerability.description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
        "findings.vulnerability.epssScore": 0.96554,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3b794a96-b0f9-44dd-ac83-759dbe389e44",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:3b794a96-b0f9-44dd-ac83-759dbe389e44"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.55",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.6,
        "findings.vulnerability.vulnId": "CVE-2022-25762",
        "findings.vulnerability.cweId": 404,
        "findings.vulnerability.description": "If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "9ca8a3fe-076a-474e-a27d-8e1ce3628456",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Resource Shutdown or Release",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:9ca8a3fe-076a-474e-a27d-8e1ce3628456",
        "findings.vulnerability.cwes.cweId": 404,
        "findings.vulnerability.cwes.name": "Improper Resource Shutdown or Release",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.587",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2019-10072",
        "findings.vulnerability.cweId": 667,
        "findings.vulnerability.description": "The fix for CVE-2019-0199 was incomplete and did not address HTTP/2 connection window exhaustion on write in Apache Tomcat versions 9.0.0.M1 to 9.0.19 and 8.5.0 to 8.5.40 . By not sending WINDOW_UPDATE messages for the connection window (stream 0) clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "43f2445c-ca8f-4da3-97dd-0ba68c3cc119",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Locking",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:43f2445c-ca8f-4da3-97dd-0ba68c3cc119",
        "findings.vulnerability.cwes.cweId": 667,
        "findings.vulnerability.cwes.name": "Improper Locking",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.623",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2020-11996",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "A specially crafted sequence of HTTP/2 requests sent to Apache Tomcat 10.0.0-M1 to 10.0.0-M5, 9.0.0.M1 to 9.0.35 and 8.5.0 to 8.5.55 could trigger high CPU usage for several seconds. If a sufficient number of such requests were made on concurrent HTTP/2 connections, the server could become unresponsive.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bb7ae70c-badd-40fa-a5b3-49360a53e2e3",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:bb7ae70c-badd-40fa-a5b3-49360a53e2e3"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.664",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-13934",
        "findings.vulnerability.cweId": 476,
        "findings.vulnerability.description": "An h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "199e8988-d9f0-462d-8dd2-7841ee4ce2ed",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "NULL Pointer Dereference",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:199e8988-d9f0-462d-8dd2-7841ee4ce2ed",
        "findings.vulnerability.cwes.cweId": 476,
        "findings.vulnerability.cwes.name": "NULL Pointer Dereference",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.664",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-13934",
        "findings.vulnerability.cweId": 476,
        "findings.vulnerability.description": "An h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "199e8988-d9f0-462d-8dd2-7841ee4ce2ed",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "NULL Pointer Dereference",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:199e8988-d9f0-462d-8dd2-7841ee4ce2ed",
        "findings.vulnerability.cwes.cweId": 401,
        "findings.vulnerability.cwes.name": "Missing Release of Memory after Effective Lifetime",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.701",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-17527",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "While investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "8336ba0d-2c25-468d-b0f4-864f28a4d1c0",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:8336ba0d-2c25-468d-b0f4-864f28a4d1c0",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.737",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2021-25122",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A's request.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "b80ceb2c-8225-41c3-a104-7a01aace7b47",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:b80ceb2c-8225-41c3-a104-7a01aace7b47"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.772",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-41079",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "Apache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially crafted packet could be used to trigger an infinite loop resulting in a denial of service.",
        "findings.vulnerability.epssScore": 0.01742,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "2c2daf2f-3e57-49e4-8aea-13ff85f16d78",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.74914,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:2c2daf2f-3e57-49e4-8aea-13ff85f16d78",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.808",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2021-33037",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "19e054e6-bbf1-4c8a-b9c6-d0ad02dce7b8",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:19e054e6-bbf1-4c8a-b9c6-d0ad02dce7b8",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.844",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.vulnId": "CVE-2020-1935",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "1c34f15b-01e1-463e-a3b3-dd4b132bb643",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:1c34f15b-01e1-463e-a3b3-dd4b132bb643",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-coyote",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat/tomcat-coyote@8.5.38?type=jar",
        "findings.component.uuid": "5b167fcb-1bd0-48b1-ad55-6a724efe91fd",
        "findings.component.version": "8.5.38",
        "findings.component.group": "org.apache.tomcat",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.879",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-13943",
        "findings.vulnerability.epssPercentile": 0.74592,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.vulnerability.description": "If an HTTP/2 client connecting to Apache Tomcat 10.0.0-M1 to 10.0.0-M7, 9.0.0.M1 to 9.0.37 or 8.5.0 to 8.5.57 exceeded the agreed maximum number of concurrent streams for a connection (in violation of the HTTP/2 protocol), it was possible that a subsequent request made on that connection could contain HTTP headers - including HTTP/2 pseudo headers - from a previous request rather than the intended headers. This could lead to users seeing responses for unexpected resources.",
        "findings.vulnerability.epssScore": 0.01627,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0f844b1c-e9e2-4a39-8f86-bd3d8aa7b525",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5b167fcb-1bd0-48b1-ad55-6a724efe91fd:0f844b1c-e9e2-4a39-8f86-bd3d8aa7b525"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "wildfly-elytron-mechanism-scram",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.wildfly.security/wildfly-elytron-mechanism-scram@1.11.4.Final?type=jar",
        "findings.component.uuid": "9eb2f695-6e76-40f9-917f-b545a3f0c95d",
        "findings.component.version": "1.11.4.Final",
        "findings.component.group": "org.wildfly.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.936",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2021-3642",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "A flaw was found in Wildfly Elytron in versions prior to 1.10.14.Final, prior to 1.15.5.Final and prior to 1.16.1.Final where ScramServer may be susceptible to Timing Attack if enabled. The highest threat of this vulnerability is confidentiality.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "73158e7c-992a-4c5b-bec9-b17b052ea218",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 3.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9eb2f695-6e76-40f9-917f-b545a3f0c95d:73158e7c-992a-4c5b-bec9-b17b052ea218",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "0857dc36-1bb9-4ce4-91cc-4c24507de58d",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:08.994",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0857dc36-1bb9-4ce4-91cc-4c24507de58d:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "0857dc36-1bb9-4ce4-91cc-4c24507de58d",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.032",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0857dc36-1bb9-4ce4-91cc-4c24507de58d:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "0857dc36-1bb9-4ce4-91cc-4c24507de58d",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.069",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10247",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0857dc36-1bb9-4ce4-91cc-4c24507de58d:11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "97a5e1a9-2ba2-4d89-b465-953beb7a5be2",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.115",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:97a5e1a9-2ba2-4d89-b465-953beb7a5be2:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 190,
        "findings.vulnerability.cwes.name": "Integer Overflow or Wraparound",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "97a5e1a9-2ba2-4d89-b465-953beb7a5be2",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.115",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:97a5e1a9-2ba2-4d89-b465-953beb7a5be2:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "97a5e1a9-2ba2-4d89-b465-953beb7a5be2",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.152",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7658",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:97a5e1a9-2ba2-4d89-b465-953beb7a5be2:5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "97a5e1a9-2ba2-4d89-b465-953beb7a5be2",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.19",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2015-2080",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "The exception handling code in Eclipse Jetty before 9.2.9.v20150224 allows remote attackers to obtain sensitive information from process memory via illegal characters in an HTTP header, aka JetLeak.",
        "findings.vulnerability.epssScore": 0.49183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "9d8664a3-6b51-4064-af1c-bea8e5df6095",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.98529,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:97a5e1a9-2ba2-4d89-b465-953beb7a5be2:9d8664a3-6b51-4064-af1c-bea8e5df6095",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "97a5e1a9-2ba2-4d89-b465-953beb7a5be2",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.227",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:97a5e1a9-2ba2-4d89-b465-953beb7a5be2:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "654ba785-051c-4eb7-9685-0bd43df2f530",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.275",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:654ba785-051c-4eb7-9685-0bd43df2f530:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "ee30115a-5518-4a9b-a098-eb20933b0152",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.323",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-9735",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
        "findings.vulnerability.epssScore": 0.03779,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.84606,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ee30115a-5518-4a9b-a098-eb20933b0152:785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "ee30115a-5518-4a9b-a098-eb20933b0152",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.361",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ee30115a-5518-4a9b-a098-eb20933b0152:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "ee30115a-5518-4a9b-a098-eb20933b0152",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.399",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ee30115a-5518-4a9b-a098-eb20933b0152:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "ee30115a-5518-4a9b-a098-eb20933b0152",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.436",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10246",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ee30115a-5518-4a9b-a098-eb20933b0152:02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "7a60f5d8-e015-4f36-9be0-8e2830adf9cc",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.486",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7a60f5d8-e015-4f36-9be0-8e2830adf9cc:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "7a60f5d8-e015-4f36-9be0-8e2830adf9cc",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.524",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7a60f5d8-e015-4f36-9be0-8e2830adf9cc:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "7a60f5d8-e015-4f36-9be0-8e2830adf9cc",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.563",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10247",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7a60f5d8-e015-4f36-9be0-8e2830adf9cc:11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "d730177d-4ab7-4671-ac0c-e3b3eaa145f0",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.611",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:d730177d-4ab7-4671-ac0c-e3b3eaa145f0:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 190,
        "findings.vulnerability.cwes.name": "Integer Overflow or Wraparound",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "d730177d-4ab7-4671-ac0c-e3b3eaa145f0",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.611",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:d730177d-4ab7-4671-ac0c-e3b3eaa145f0:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "d730177d-4ab7-4671-ac0c-e3b3eaa145f0",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.649",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7658",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:d730177d-4ab7-4671-ac0c-e3b3eaa145f0:5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "d730177d-4ab7-4671-ac0c-e3b3eaa145f0",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.686",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:d730177d-4ab7-4671-ac0c-e3b3eaa145f0:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "c959e114-4a87-4cf4-ac82-63555d2ac636",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.734",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c959e114-4a87-4cf4-ac82-63555d2ac636:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "68cb61e2-8563-47c9-a8ec-9da0d87a408d",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.782",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-9735",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
        "findings.vulnerability.epssScore": 0.03779,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.84606,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:68cb61e2-8563-47c9-a8ec-9da0d87a408d:785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "68cb61e2-8563-47c9-a8ec-9da0d87a408d",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.819",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:68cb61e2-8563-47c9-a8ec-9da0d87a408d:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "68cb61e2-8563-47c9-a8ec-9da0d87a408d",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.855",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:68cb61e2-8563-47c9-a8ec-9da0d87a408d:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.3.9.v20160517?type=jar",
        "findings.component.uuid": "68cb61e2-8563-47c9-a8ec-9da0d87a408d",
        "findings.component.version": "9.3.9.v20160517",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.891",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10246",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:68cb61e2-8563-47c9-a8ec-9da0d87a408d:02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "bd60593f-5970-481f-87c0-9684f18e5a1c",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.939",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2018-12538",
        "findings.vulnerability.cweId": 384,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 through 9.4.8, when using the optional Jetty provided FileSessionDataStore for persistent storage of HttpSession details, it is possible for a malicious user to access/hijack other HttpSessions and even delete unmatched HttpSessions present in the FileSystem's storage for the FileSessionDataStore.",
        "findings.vulnerability.epssScore": 0.01034,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "eaf9de0d-0e6b-4cee-94bf-19c2d1b389f8",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Session Fixation",
        "findings.vulnerability.epssPercentile": 0.39334,
        "findings.vulnerability.cvssV2BaseScore": 6.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:bd60593f-5970-481f-87c0-9684f18e5a1c:eaf9de0d-0e6b-4cee-94bf-19c2d1b389f8",
        "findings.vulnerability.cwes.cweId": 384,
        "findings.vulnerability.cwes.name": "Session Fixation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "bd60593f-5970-481f-87c0-9684f18e5a1c",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:09.976",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:bd60593f-5970-481f-87c0-9684f18e5a1c:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "bd60593f-5970-481f-87c0-9684f18e5a1c",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.013",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:bd60593f-5970-481f-87c0-9684f18e5a1c:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "bd60593f-5970-481f-87c0-9684f18e5a1c",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.05",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10247",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:bd60593f-5970-481f-87c0-9684f18e5a1c:11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "bd60593f-5970-481f-87c0-9684f18e5a1c",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.087",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-27218",
        "findings.vulnerability.epssPercentile": 0.96749,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",
        "findings.vulnerability.epssScore": 0.24963,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bd7767ab-b02d-479c-82f4-32a872c8e415",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:bd60593f-5970-481f-87c0-9684f18e5a1c:bd7767ab-b02d-479c-82f4-32a872c8e415"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "bd60593f-5970-481f-87c0-9684f18e5a1c",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.124",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:bd60593f-5970-481f-87c0-9684f18e5a1c:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "8f4b2c36-961d-49ae-976b-a205788b3f7d",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.172",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8f4b2c36-961d-49ae-976b-a205788b3f7d:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 190,
        "findings.vulnerability.cwes.name": "Integer Overflow or Wraparound",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "8f4b2c36-961d-49ae-976b-a205788b3f7d",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.172",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8f4b2c36-961d-49ae-976b-a205788b3f7d:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "8f4b2c36-961d-49ae-976b-a205788b3f7d",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.209",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7658",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8f4b2c36-961d-49ae-976b-a205788b3f7d:5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "8f4b2c36-961d-49ae-976b-a205788b3f7d",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.247",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2017-7656",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f2a8d5de-d8a8-4704-8807-10a711733d27",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8f4b2c36-961d-49ae-976b-a205788b3f7d:f2a8d5de-d8a8-4704-8807-10a711733d27"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "8f4b2c36-961d-49ae-976b-a205788b3f7d",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.285",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8f4b2c36-961d-49ae-976b-a205788b3f7d:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "dafaddd9-410b-4375-a6e4-972036bc8f00",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.333",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:dafaddd9-410b-4375-a6e4-972036bc8f00:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "4333053d-8c0c-4a36-b8de-c922703d9bc4",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.381",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-9735",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
        "findings.vulnerability.epssScore": 0.03779,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.84606,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4333053d-8c0c-4a36-b8de-c922703d9bc4:785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "4333053d-8c0c-4a36-b8de-c922703d9bc4",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.42",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4333053d-8c0c-4a36-b8de-c922703d9bc4:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "4333053d-8c0c-4a36-b8de-c922703d9bc4",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.465",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4333053d-8c0c-4a36-b8de-c922703d9bc4:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.2.v20170220?type=jar",
        "findings.component.uuid": "4333053d-8c0c-4a36-b8de-c922703d9bc4",
        "findings.component.version": "9.4.2.v20170220",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.514",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10246",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4333053d-8c0c-4a36-b8de-c922703d9bc4:02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "camel-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.camel/camel-core@2.21.2?type=jar",
        "findings.component.uuid": "b161419f-58d1-48d7-9a7c-041b980ec1b7",
        "findings.component.version": "2.21.2",
        "findings.component.group": "org.apache.camel",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.575",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2019-0194",
        "findings.vulnerability.cweId": 22,
        "findings.vulnerability.description": "Apache Camel's File is vulnerable to directory traversal. Camel 2.21.0 to 2.21.3, 2.22.0 to 2.22.2, 2.23.0 and the unsupported Camel 2.x (2.19 and earlier) versions may be also affected.",
        "findings.vulnerability.epssScore": 0.03032,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "67fd8237-c4f4-42c0-9380-2a868d7df84c",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.epssPercentile": 0.82635,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b161419f-58d1-48d7-9a7c-041b980ec1b7:67fd8237-c4f4-42c0-9380-2a868d7df84c",
        "findings.vulnerability.cwes.cweId": 22,
        "findings.vulnerability.cwes.name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "camel-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.camel/camel-core@2.21.2?type=jar",
        "findings.component.uuid": "b161419f-58d1-48d7-9a7c-041b980ec1b7",
        "findings.component.version": "2.21.2",
        "findings.component.group": "org.apache.camel",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.615",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-11994",
        "findings.vulnerability.cweId": 74,
        "findings.vulnerability.description": "Server-Side Template Injection and arbitrary file disclosure on Camel templating components",
        "findings.vulnerability.epssScore": 0.01246,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "97611191-4f5e-4d3b-9a9c-81e98bdb10e3",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
        "findings.vulnerability.epssPercentile": 0.66064,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b161419f-58d1-48d7-9a7c-041b980ec1b7:97611191-4f5e-4d3b-9a9c-81e98bdb10e3",
        "findings.vulnerability.cwes.cweId": 74,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "cxf-rt-transports-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.cxf/cxf-rt-transports-http@3.3.6?type=jar",
        "findings.component.uuid": "a2c754f8-eb29-4d3c-8b72-30198e7171c1",
        "findings.component.version": "3.3.6",
        "findings.component.group": "org.apache.cxf",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.671",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2020-13954",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f85a74fe-b97b-407f-93f7-1809291b7929",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a2c754f8-eb29-4d3c-8b72-30198e7171c1:f85a74fe-b97b-407f-93f7-1809291b7929",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-tomcat-core-adapter",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-tomcat-core-adapter@10.0.2?type=jar",
        "findings.component.uuid": "6b7358c2-f016-4533-bca6-69b271f7a3e8",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.729",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2020-1714",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",
        "findings.vulnerability.epssScore": 0.01978,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.78181,
        "findings.vulnerability.cvssV2BaseScore": 6.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:6b7358c2-f016-4533-bca6-69b271f7a3e8:54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-config",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-config@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "d07789b8-8bd0-4396-be48-32f26204b8f7",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.785",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2016-5007",
        "findings.vulnerability.cweId": 264,
        "findings.vulnerability.description": "Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "df817d83-c843-43ea-abd2-6b1758dfd52e",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Permissions, Privileges, and Access Controls",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:d07789b8-8bd0-4396-be48-32f26204b8f7:df817d83-c843-43ea-abd2-6b1758dfd52e",
        "findings.vulnerability.cwes.cweId": 264,
        "findings.vulnerability.cwes.name": "Permissions, Privileges, and Access Controls",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-config",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-config@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "d07789b8-8bd0-4396-be48-32f26204b8f7",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.826",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2018-1199",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.",
        "findings.vulnerability.epssScore": 0.01108,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "983eb17f-923f-4fda-b3cb-e6837ae37bd4",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.52961,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:d07789b8-8bd0-4396-be48-32f26204b8f7:983eb17f-923f-4fda-b3cb-e6837ae37bd4",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-core@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "aee1aa8f-69bc-46d7-a794-123aa8f8b905",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.879",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.3,
        "findings.vulnerability.vulnId": "CVE-2019-11272",
        "findings.vulnerability.cweId": 522,
        "findings.vulnerability.description": "Spring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of \"null\".",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c68954fb-ccaa-4725-8842-2bbdf299f7f4",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Insufficiently Protected Credentials",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:aee1aa8f-69bc-46d7-a794-123aa8f8b905:c68954fb-ccaa-4725-8842-2bbdf299f7f4",
        "findings.vulnerability.cwes.cweId": 522,
        "findings.vulnerability.cwes.name": "Insufficiently Protected Credentials",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-core@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "aee1aa8f-69bc-46d7-a794-123aa8f8b905",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.919",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-3795",
        "findings.vulnerability.cweId": 330,
        "findings.vulnerability.description": "Spring Security versions 4.2.x prior to 4.2.12, 5.0.x prior to 5.0.12, and 5.1.x prior to 5.1.5 contain an insecure randomness vulnerability when using SecureRandomFactoryBean#setSeed to configure a SecureRandom instance. In order to be impacted, an honest application must provide a seed and make the resulting random material available to an attacker for inspection.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "79fd2e9b-3256-485d-a3c8-f821db7276d7",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Use of Insufficiently Random Values",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:aee1aa8f-69bc-46d7-a794-123aa8f8b905:79fd2e9b-3256-485d-a3c8-f821db7276d7",
        "findings.vulnerability.cwes.cweId": 330,
        "findings.vulnerability.cwes.name": "Use of Insufficiently Random Values",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-beans",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-beans@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "3f135a8d-b4bc-4e5a-bf3e-88e7e9187e6e",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:10.971",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-22965",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
        "findings.vulnerability.epssScore": 0.95668,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.99981,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:3f135a8d-b4bc-4e5a-bf3e-88e7e9187e6e:019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-context",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-context@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "104bc882-32f4-43b8-bf2c-0f26b29ab445",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.025",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2022-22968",
        "findings.vulnerability.cweId": 178,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:104bc882-32f4-43b8-bf2c-0f26b29ab445:a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.cwes.cweId": 178,
        "findings.vulnerability.cwes.name": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-web@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "13a01771-fee8-4839-a574-8bbab54d2a8a",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.078",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-22978",
        "findings.vulnerability.cweId": 863,
        "findings.vulnerability.description": "In Spring Security versions 5.5.6 and 5.6.3 and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with `.` in the regular expression are possibly vulnerable to an authorization bypass",
        "findings.vulnerability.epssScore": 0.09029,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7edbd6ae-a1c0-424a-8958-a10d2a522d09",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Incorrect Authorization",
        "findings.vulnerability.epssPercentile": 0.93796,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:13a01771-fee8-4839-a574-8bbab54d2a8a:7edbd6ae-a1c0-424a-8958-a10d2a522d09",
        "findings.vulnerability.cwes.cweId": 863,
        "findings.vulnerability.cwes.name": "Incorrect Authorization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-web@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "13a01771-fee8-4839-a574-8bbab54d2a8a",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.119",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2021-22112",
        "findings.vulnerability.epssPercentile": 0.72585,
        "findings.vulnerability.cvssV2BaseScore": 9,
        "findings.vulnerability.description": "Spring Security 5.4.x prior to 5.4.4, 5.3.x prior to 5.3.8.RELEASE, 5.2.x prior to 5.2.9.RELEASE, and older unsupported versions can fail to save the SecurityContext if it is changed more than once in a single request.A malicious user cannot cause the bug to happen (it must be programmed in). However, if the application's intent is to only allow the user to run with elevated privileges in a small portion of the application, the bug can be leveraged to extend those privileges to the rest of the application.",
        "findings.vulnerability.epssScore": 0.01532,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "6bd28aa3-2f8f-44b8-b102-89769d403ea7",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:13a01771-fee8-4839-a574-8bbab54d2a8a:6bd28aa3-2f8f-44b8-b102-89769d403ea7"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-web@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "13a01771-fee8-4839-a574-8bbab54d2a8a",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.161",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2016-9879",
        "findings.vulnerability.cweId": 417,
        "findings.vulnerability.description": "An issue was discovered in Pivotal Spring Security before 3.2.10, 4.1.x before 4.1.4, and 4.2.x before 4.2.1. Spring Security does not consider URL path parameters when processing security constraints. By adding a URL path parameter with an encoded \"/\" to a request, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. The unexpected presence of path parameters can cause a constraint to be bypassed. Users of Apache Tomcat (all current versions) are not affected by this vulnerability since Tomcat follows the guidance previously provided by the Servlet Expert group and strips path parameters from the value returned by getContextPath(), getServletPath(), and getPathInfo(). Users of other Servlet containers based on Apache Tomcat may or may not be affected depending on whether or not the handling of path parameters has been modified. Users of IBM WebSphere Application Server 8.5.x are known to be affected. Users of other containers that implement the Servlet specification may be affected.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "51b90915-1659-4c68-9849-1a7fb4fd27b5",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Communication Channel Errors",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:13a01771-fee8-4839-a574-8bbab54d2a8a:51b90915-1659-4c68-9849-1a7fb4fd27b5",
        "findings.vulnerability.cwes.cweId": 417,
        "findings.vulnerability.cwes.name": "Communication Channel Errors",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-security-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.security/spring-security-web@3.2.7.RELEASE?type=jar",
        "findings.component.uuid": "13a01771-fee8-4839-a574-8bbab54d2a8a",
        "findings.component.version": "3.2.7.RELEASE",
        "findings.component.group": "org.springframework.security",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.2",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2018-1199",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.",
        "findings.vulnerability.epssScore": 0.01108,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "983eb17f-923f-4fda-b3cb-e6837ae37bd4",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.52961,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:13a01771-fee8-4839-a574-8bbab54d2a8a:983eb17f-923f-4fda-b3cb-e6837ae37bd4",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "e5a4e1ec-4952-454a-943e-6f0718dc8ed7",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.25",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2018-1270",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",
        "findings.vulnerability.epssScore": 0.70009,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "8390cacf-e5c3-4ea1-851d-22f0fa17288a",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.99108,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e5a4e1ec-4952-454a-943e-6f0718dc8ed7:8390cacf-e5c3-4ea1-851d-22f0fa17288a",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "e5a4e1ec-4952-454a-943e-6f0718dc8ed7",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.438",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-1257",
        "findings.vulnerability.epssPercentile": 0.6694,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.vulnerability.description": "Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",
        "findings.vulnerability.epssScore": 0.01282,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "90991243-a05e-4a06-b0a5-6988b68fd669",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e5a4e1ec-4952-454a-943e-6f0718dc8ed7:90991243-a05e-4a06-b0a5-6988b68fd669"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "e5a4e1ec-4952-454a-943e-6f0718dc8ed7",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.483",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-22950",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e5a4e1ec-4952-454a-943e-6f0718dc8ed7:0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "25d7a3fd-bcec-483b-81f8-a7a926631957",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.537",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2016-1000027",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
        "findings.vulnerability.epssScore": 0.69181,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.99085,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:25d7a3fd-bcec-483b-81f8-a7a926631957:a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "25d7a3fd-bcec-483b-81f8-a7a926631957",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.58",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2018-1272",
        "findings.vulnerability.epssPercentile": 0.6694,
        "findings.vulnerability.cvssV2BaseScore": 6,
        "findings.vulnerability.description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",
        "findings.vulnerability.epssScore": 0.01282,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0ec46f49-694d-445c-a55b-8fe8bf86cd92",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:25d7a3fd-bcec-483b-81f8-a7a926631957:0ec46f49-694d-445c-a55b-8fe8bf86cd92"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "25d7a3fd-bcec-483b-81f8-a7a926631957",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.623",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-5421",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 3.6,
        "findings.vulnerability.description": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "475ef218-38a4-4460-9aa2-c5e2638bcad6",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:25d7a3fd-bcec-483b-81f8-a7a926631957:475ef218-38a4-4460-9aa2-c5e2638bcad6"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "25d7a3fd-bcec-483b-81f8-a7a926631957",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.674",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.9,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-11039",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.vulnerability.description": "Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "8e9630a7-394d-4496-b8b5-8624b48eda40",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:25d7a3fd-bcec-483b-81f8-a7a926631957:8e9630a7-394d-4496-b8b5-8624b48eda40"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@3.2.13.RELEASE?type=jar",
        "findings.component.uuid": "25d7a3fd-bcec-483b-81f8-a7a926631957",
        "findings.component.version": "3.2.13.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.716",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2015-3192",
        "findings.vulnerability.cweId": 119,
        "findings.vulnerability.description": "Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.",
        "findings.vulnerability.epssScore": 0.03407,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "1b7655ed-3601-4d13-9208-8c4997aa453d",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "findings.vulnerability.epssPercentile": 0.83715,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:25d7a3fd-bcec-483b-81f8-a7a926631957:1b7655ed-3601-4d13-9208-8c4997aa453d",
        "findings.vulnerability.cwes.cweId": 119,
        "findings.vulnerability.cwes.name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-boot",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.boot/spring-boot@1.5.16.RELEASE?type=jar",
        "findings.component.uuid": "750ab58c-7c22-4337-817d-cd756ace5e18",
        "findings.component.version": "1.5.16.RELEASE",
        "findings.component.group": "org.springframework.boot",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.77",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.8,
        "findings.vulnerability.vulnId": "CVE-2022-27772",
        "findings.vulnerability.cweId": 668,
        "findings.vulnerability.description": "** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:750ab58c-7c22-4337-817d-cd756ace5e18:5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.cwes.cweId": 668,
        "findings.vulnerability.cwes.name": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "logback-classic",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/ch.qos.logback/logback-classic@1.1.11?type=jar",
        "findings.component.uuid": "e0ecc0d6-8b8d-4529-9d96-6d2d35050673",
        "findings.component.version": "1.1.11",
        "findings.component.group": "ch.qos.logback",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.824",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-5929",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "71fe7bc4-8776-4536-be13-ee62c8d13848",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e0ecc0d6-8b8d-4529-9d96-6d2d35050673:71fe7bc4-8776-4536-be13-ee62c8d13848",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "logback-classic",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/ch.qos.logback/logback-classic@1.1.11?type=jar",
        "findings.component.uuid": "e0ecc0d6-8b8d-4529-9d96-6d2d35050673",
        "findings.component.version": "1.1.11",
        "findings.component.group": "ch.qos.logback",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.866",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.6,
        "findings.vulnerability.vulnId": "CVE-2021-42550",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
        "findings.vulnerability.epssScore": 0.14469,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.9561,
        "findings.vulnerability.cvssV2BaseScore": 8.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e0ecc0d6-8b8d-4529-9d96-6d2d35050673:30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "logback-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/ch.qos.logback/logback-core@1.1.11?type=jar",
        "findings.component.uuid": "6b585ba6-53ff-4e48-a357-3a049e4e4f07",
        "findings.component.version": "1.1.11",
        "findings.component.group": "ch.qos.logback",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.917",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.6,
        "findings.vulnerability.vulnId": "CVE-2021-42550",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
        "findings.vulnerability.epssScore": 0.14469,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.9561,
        "findings.vulnerability.cvssV2BaseScore": 8.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:6b585ba6-53ff-4e48-a357-3a049e4e4f07:30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "snakeyaml",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.yaml/snakeyaml@1.17?type=jar",
        "findings.component.uuid": "ab6bad5c-09c8-4721-bc8c-02a0b257fcc3",
        "findings.component.version": "1.17",
        "findings.component.group": "org.yaml",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:11.97",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-18640",
        "findings.vulnerability.cweId": 776,
        "findings.vulnerability.description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ab6bad5c-09c8-4721-bc8c-02a0b257fcc3:29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.cwes.cweId": 776,
        "findings.vulnerability.cwes.name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-embed-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.34?type=jar",
        "findings.component.uuid": "7fcd3d11-a9f6-4814-a4bd-a78045d539f8",
        "findings.component.version": "8.5.34",
        "findings.component.group": "org.apache.tomcat.embed",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.022",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.6,
        "findings.vulnerability.vulnId": "CVE-2022-25762",
        "findings.vulnerability.cweId": 404,
        "findings.vulnerability.description": "If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "9ca8a3fe-076a-474e-a27d-8e1ce3628456",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Resource Shutdown or Release",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7fcd3d11-a9f6-4814-a4bd-a78045d539f8:9ca8a3fe-076a-474e-a27d-8e1ce3628456",
        "findings.vulnerability.cwes.cweId": 404,
        "findings.vulnerability.cwes.name": "Improper Resource Shutdown or Release",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-embed-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.34?type=jar",
        "findings.component.uuid": "7fcd3d11-a9f6-4814-a4bd-a78045d539f8",
        "findings.component.version": "8.5.34",
        "findings.component.group": "org.apache.tomcat.embed",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.068",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.1,
        "findings.vulnerability.vulnId": "CVE-2019-0232",
        "findings.vulnerability.cweId": 78,
        "findings.vulnerability.description": "When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",
        "findings.vulnerability.epssScore": 0.94954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.epssPercentile": 0.9996,
        "findings.vulnerability.cvssV2BaseScore": 9.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7fcd3d11-a9f6-4814-a4bd-a78045d539f8:d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.cwes.cweId": 78,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "hibernate-validator",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.hibernate/hibernate-validator@5.3.6.Final?type=jar",
        "findings.component.uuid": "4aa28f70-89d5-430c-8b7a-e8b6be5717d2",
        "findings.component.version": "5.3.6.Final",
        "findings.component.group": "org.hibernate",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.122",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10219",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5be228ce-7a49-4195-b61c-3f19266b2280",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4aa28f70-89d5-430c-8b7a-e8b6be5717d2:5be228ce-7a49-4195-b61c-3f19266b2280",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "hibernate-validator",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.hibernate/hibernate-validator@5.3.6.Final?type=jar",
        "findings.component.uuid": "4aa28f70-89d5-430c-8b7a-e8b6be5717d2",
        "findings.component.version": "5.3.6.Final",
        "findings.component.group": "org.hibernate",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.164",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-10693",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "627754e6-ab9e-4301-b1bd-0b5af020c3f4",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4aa28f70-89d5-430c-8b7a-e8b6be5717d2:627754e6-ab9e-4301-b1bd-0b5af020c3f4",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "154ea152-1bb5-4991-a381-93c1fc658e42",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.217",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2016-1000027",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
        "findings.vulnerability.epssScore": 0.69181,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.99085,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:154ea152-1bb5-4991-a381-93c1fc658e42:a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "154ea152-1bb5-4991-a381-93c1fc658e42",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.259",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2018-15756",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "66edc13a-2619-45d7-a747-20592f1388c8",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:154ea152-1bb5-4991-a381-93c1fc658e42:66edc13a-2619-45d7-a747-20592f1388c8"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "154ea152-1bb5-4991-a381-93c1fc658e42",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.3",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-5421",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 3.6,
        "findings.vulnerability.description": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "475ef218-38a4-4460-9aa2-c5e2638bcad6",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:154ea152-1bb5-4991-a381-93c1fc658e42:475ef218-38a4-4460-9aa2-c5e2638bcad6"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-beans",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-beans@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "9a719d15-303b-470c-970d-f9e92e4cef76",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.351",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-22965",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
        "findings.vulnerability.epssScore": 0.95668,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.99981,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9a719d15-303b-470c-970d-f9e92e4cef76:019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-context",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-context@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "1d334736-fb5b-48d6-8d77-6013b7c86cf2",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.403",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2022-22968",
        "findings.vulnerability.cweId": 178,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:1d334736-fb5b-48d6-8d77-6013b7c86cf2:a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.cwes.cweId": 178,
        "findings.vulnerability.cwes.name": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-webmvc",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-webmvc@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "e1a865c0-f1ec-4cfa-822d-b2be164cf591",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.456",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-5397",
        "findings.vulnerability.cweId": 352,
        "findings.vulnerability.description": "Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.",
        "findings.vulnerability.epssScore": 0.01108,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cdb3ef78-bd4e-44df-93bf-60238cf5cba3",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.epssPercentile": 0.52961,
        "findings.vulnerability.cvssV2BaseScore": 2.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e1a865c0-f1ec-4cfa-822d-b2be164cf591:cdb3ef78-bd4e-44df-93bf-60238cf5cba3",
        "findings.vulnerability.cwes.cweId": 352,
        "findings.vulnerability.cwes.name": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-webmvc",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-webmvc@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "e1a865c0-f1ec-4cfa-822d-b2be164cf591",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.498",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-22060",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "07f3ca8e-ecdc-45c0-b3a4-5fab903dae37",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e1a865c0-f1ec-4cfa-822d-b2be164cf591:07f3ca8e-ecdc-45c0-b3a4-5fab903dae37"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@4.3.19.RELEASE?type=jar",
        "findings.component.uuid": "75b4c9f6-ef87-4d04-ab7b-1b2b3a36aca2",
        "findings.component.version": "4.3.19.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.552",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-22950",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:75b4c9f6-ef87-4d04-ab7b-1b2b3a36aca2:0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-webapp",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-webapp@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "2b8985aa-5474-40d8-908a-d9617be049f0",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.606",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2020-27216",
        "findings.vulnerability.epssPercentile": 0.95873,
        "findings.vulnerability.cvssV2BaseScore": 4.4,
        "findings.vulnerability.description": "In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.",
        "findings.vulnerability.epssScore": 0.1592,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "34b49517-f6c6-403a-b61b-299e3486dfad",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:2b8985aa-5474-40d8-908a-d9617be049f0:34b49517-f6c6-403a-b61b-299e3486dfad"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-servlet",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "1058d63a-90d7-412c-846e-e20cdffc0c78",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.659",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:1058d63a-90d7-412c-846e-e20cdffc0c78:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-servlet",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-servlet@9.2.4.v20141103?type=jar",
        "findings.component.uuid": "1058d63a-90d7-412c-846e-e20cdffc0c78",
        "findings.component.version": "9.2.4.v20141103",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.701",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:1058d63a-90d7-412c-846e-e20cdffc0c78:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-core@5.0.2.RELEASE?type=jar",
        "findings.component.uuid": "2e5cd32c-caac-4403-ab2f-635a4c83c165",
        "findings.component.version": "5.0.2.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.756",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2018-1272",
        "findings.vulnerability.epssPercentile": 0.6694,
        "findings.vulnerability.cvssV2BaseScore": 6,
        "findings.vulnerability.description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",
        "findings.vulnerability.epssScore": 0.01282,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0ec46f49-694d-445c-a55b-8fe8bf86cd92",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:2e5cd32c-caac-4403-ab2f-635a4c83c165:0ec46f49-694d-445c-a55b-8fe8bf86cd92"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-boot",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.boot/spring-boot@2.0.5.RELEASE?type=jar",
        "findings.component.uuid": "0f879163-7fad-419b-ab78-c29842b9499e",
        "findings.component.version": "2.0.5.RELEASE",
        "findings.component.group": "org.springframework.boot",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.809",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.8,
        "findings.vulnerability.vulnId": "CVE-2022-27772",
        "findings.vulnerability.cweId": 668,
        "findings.vulnerability.description": "** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0f879163-7fad-419b-ab78-c29842b9499e:5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.cwes.cweId": 668,
        "findings.vulnerability.cwes.name": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "logback-classic",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/ch.qos.logback/logback-classic@1.2.3?type=jar",
        "findings.component.uuid": "2c54adb7-0bb4-47bb-a357-cecb9c510e8e",
        "findings.component.version": "1.2.3",
        "findings.component.group": "ch.qos.logback",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.863",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.6,
        "findings.vulnerability.vulnId": "CVE-2021-42550",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
        "findings.vulnerability.epssScore": 0.14469,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.9561,
        "findings.vulnerability.cvssV2BaseScore": 8.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:2c54adb7-0bb4-47bb-a357-cecb9c510e8e:30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "logback-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/ch.qos.logback/logback-core@1.2.3?type=jar",
        "findings.component.uuid": "3b48f9f7-a4df-4542-8ea3-eb97460257a3",
        "findings.component.version": "1.2.3",
        "findings.component.group": "ch.qos.logback",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.915",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.6,
        "findings.vulnerability.vulnId": "CVE-2021-42550",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",
        "findings.vulnerability.epssScore": 0.14469,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.9561,
        "findings.vulnerability.cvssV2BaseScore": 8.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:3b48f9f7-a4df-4542-8ea3-eb97460257a3:30a5dc77-b907-48de-983d-86273564d010",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "snakeyaml",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.yaml/snakeyaml@1.19?type=jar",
        "findings.component.uuid": "e7c8c6bf-8b34-4974-91dc-38b1b8ac8cbd",
        "findings.component.version": "1.19",
        "findings.component.group": "org.yaml",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:12.968",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-18640",
        "findings.vulnerability.cweId": 776,
        "findings.vulnerability.description": "The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e7c8c6bf-8b34-4974-91dc-38b1b8ac8cbd:29e4caa6-1e00-4ce7-b06b-285d5c9ab165",
        "findings.vulnerability.cwes.cweId": 776,
        "findings.vulnerability.cwes.name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jackson-datatype-jsr310",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.fasterxml.jackson.datatype/jackson-datatype-jsr310@2.9.6?type=jar",
        "findings.component.uuid": "99ce4562-ebcb-447e-9191-18aeaadb8b91",
        "findings.component.version": "2.9.6",
        "findings.component.group": "com.fasterxml.jackson.datatype",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.021",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2018-1000873",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f17b8841-2dba-4bce-a532-2d71234c351f",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:99ce4562-ebcb-447e-9191-18aeaadb8b91:f17b8841-2dba-4bce-a532-2d71234c351f",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "hibernate-validator",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.hibernate.validator/hibernate-validator@6.0.12.Final?type=jar",
        "findings.component.uuid": "4f7b81f1-106d-4c95-981f-c18af2b30a90",
        "findings.component.version": "6.0.12.Final",
        "findings.component.group": "org.hibernate.validator",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.075",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10219",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5be228ce-7a49-4195-b61c-3f19266b2280",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4f7b81f1-106d-4c95-981f-c18af2b30a90:5be228ce-7a49-4195-b61c-3f19266b2280",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "hibernate-validator",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.hibernate.validator/hibernate-validator@6.0.12.Final?type=jar",
        "findings.component.uuid": "4f7b81f1-106d-4c95-981f-c18af2b30a90",
        "findings.component.version": "6.0.12.Final",
        "findings.component.group": "org.hibernate.validator",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.117",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-10693",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "627754e6-ab9e-4301-b1bd-0b5af020c3f4",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4f7b81f1-106d-4c95-981f-c18af2b30a90:627754e6-ab9e-4301-b1bd-0b5af020c3f4",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "c8807178-91de-4c39-b68d-b5de2378d13b",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.171",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2016-1000027",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
        "findings.vulnerability.epssScore": 0.69181,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.99085,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c8807178-91de-4c39-b68d-b5de2378d13b:a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "c8807178-91de-4c39-b68d-b5de2378d13b",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.213",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.8,
        "findings.vulnerability.vulnId": "CVE-2021-22118",
        "findings.vulnerability.cweId": 269,
        "findings.vulnerability.description": "In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.",
        "findings.vulnerability.epssScore": 0.01034,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "1475091e-be61-420a-b0e0-b887afe9f9d8",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Privilege Management",
        "findings.vulnerability.epssPercentile": 0.39334,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c8807178-91de-4c39-b68d-b5de2378d13b:1475091e-be61-420a-b0e0-b887afe9f9d8",
        "findings.vulnerability.cwes.cweId": 269,
        "findings.vulnerability.cwes.name": "Improper Privilege Management",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "c8807178-91de-4c39-b68d-b5de2378d13b",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.255",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2018-15756",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "66edc13a-2619-45d7-a747-20592f1388c8",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c8807178-91de-4c39-b68d-b5de2378d13b:66edc13a-2619-45d7-a747-20592f1388c8"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "c8807178-91de-4c39-b68d-b5de2378d13b",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.297",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2020-5398",
        "findings.vulnerability.cweId": 494,
        "findings.vulnerability.description": "In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a \"Content-Disposition\" header in the response where the filename attribute is derived from user supplied input.",
        "findings.vulnerability.epssScore": 0.78803,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "083fff09-dda1-478f-8eb4-cd4f23f1f517",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Download of Code Without Integrity Check",
        "findings.vulnerability.epssPercentile": 0.99441,
        "findings.vulnerability.cvssV2BaseScore": 7.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c8807178-91de-4c39-b68d-b5de2378d13b:083fff09-dda1-478f-8eb4-cd4f23f1f517",
        "findings.vulnerability.cwes.cweId": 494,
        "findings.vulnerability.cwes.name": "Download of Code Without Integrity Check",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "c8807178-91de-4c39-b68d-b5de2378d13b",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.34",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-5421",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 3.6,
        "findings.vulnerability.description": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "475ef218-38a4-4460-9aa2-c5e2638bcad6",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c8807178-91de-4c39-b68d-b5de2378d13b:475ef218-38a4-4460-9aa2-c5e2638bcad6"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "c8807178-91de-4c39-b68d-b5de2378d13b",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.382",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-22096",
        "findings.vulnerability.epssPercentile": 0.2808,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.",
        "findings.vulnerability.epssScore": 0.0089,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "de87f870-dc6c-44d4-a9c5-a52b3a11b1f8",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c8807178-91de-4c39-b68d-b5de2378d13b:de87f870-dc6c-44d4-a9c5-a52b3a11b1f8"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-beans",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-beans@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "5947c0a8-1e9c-42a5-858f-14becd28a4b5",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.434",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-22965",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
        "findings.vulnerability.epssScore": 0.95668,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.99981,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:5947c0a8-1e9c-42a5-858f-14becd28a4b5:019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-webmvc",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-webmvc@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "af068179-b4c9-4a1d-ba39-a64fb4ca5b5f",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.488",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-5397",
        "findings.vulnerability.cweId": 352,
        "findings.vulnerability.description": "Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.",
        "findings.vulnerability.epssScore": 0.01108,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cdb3ef78-bd4e-44df-93bf-60238cf5cba3",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.epssPercentile": 0.52961,
        "findings.vulnerability.cvssV2BaseScore": 2.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:af068179-b4c9-4a1d-ba39-a64fb4ca5b5f:cdb3ef78-bd4e-44df-93bf-60238cf5cba3",
        "findings.vulnerability.cwes.cweId": 352,
        "findings.vulnerability.cwes.name": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-webmvc",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-webmvc@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "af068179-b4c9-4a1d-ba39-a64fb4ca5b5f",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.53",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-22060",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "07f3ca8e-ecdc-45c0-b3a4-5fab903dae37",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:af068179-b4c9-4a1d-ba39-a64fb4ca5b5f:07f3ca8e-ecdc-45c0-b3a4-5fab903dae37"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-context",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-context@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "0bc56542-27ad-420a-a2fa-2de35a479a0c",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.583",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2022-22968",
        "findings.vulnerability.cweId": 178,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0bc56542-27ad-420a-a2fa-2de35a479a0c:a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.cwes.cweId": 178,
        "findings.vulnerability.cwes.name": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@5.0.9.RELEASE?type=jar",
        "findings.component.uuid": "38aa0569-3ac3-4e52-a1ea-8dbaa86c9ded",
        "findings.component.version": "5.0.9.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.651",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-22950",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:38aa0569-3ac3-4e52-a1ea-8dbaa86c9ded:0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-boot",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.boot/spring-boot@2.0.3.RELEASE?type=jar",
        "findings.component.uuid": "95435945-2f76-454d-8086-ed800dd653b6",
        "findings.component.version": "2.0.3.RELEASE",
        "findings.component.group": "org.springframework.boot",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.707",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.8,
        "findings.vulnerability.vulnId": "CVE-2022-27772",
        "findings.vulnerability.cweId": 668,
        "findings.vulnerability.description": "** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:95435945-2f76-454d-8086-ed800dd653b6:5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.cwes.cweId": 668,
        "findings.vulnerability.cwes.name": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-context",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-context@5.0.7.RELEASE?type=jar",
        "findings.component.uuid": "330888ef-d536-4bc6-93ea-b8a24bab7fec",
        "findings.component.version": "5.0.7.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.762",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2022-22968",
        "findings.vulnerability.cweId": 178,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:330888ef-d536-4bc6-93ea-b8a24bab7fec:a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.cwes.cweId": 178,
        "findings.vulnerability.cwes.name": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-boot",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.boot/spring-boot@1.5.14.RELEASE?type=jar",
        "findings.component.uuid": "19a04a03-3bde-4af5-8c78-cafa52b72653",
        "findings.component.version": "1.5.14.RELEASE",
        "findings.component.group": "org.springframework.boot",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.822",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.8,
        "findings.vulnerability.vulnId": "CVE-2022-27772",
        "findings.vulnerability.cweId": 668,
        "findings.vulnerability.description": "** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:19a04a03-3bde-4af5-8c78-cafa52b72653:5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.cwes.cweId": 668,
        "findings.vulnerability.cwes.name": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-context",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-context@4.3.18.RELEASE?type=jar",
        "findings.component.uuid": "c147dfa5-344b-4d0e-8d58-ab1764453d21",
        "findings.component.version": "4.3.18.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.881",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2022-22968",
        "findings.vulnerability.cweId": 178,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c147dfa5-344b-4d0e-8d58-ab1764453d21:a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.cwes.cweId": 178,
        "findings.vulnerability.cwes.name": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-beans",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-beans@4.3.18.RELEASE?type=jar",
        "findings.component.uuid": "be7b4e91-0c5e-4ae6-a453-9154199bd3ff",
        "findings.component.version": "4.3.18.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:13.939",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-22965",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
        "findings.vulnerability.epssScore": 0.95668,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.99981,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:be7b4e91-0c5e-4ae6-a453-9154199bd3ff:019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@4.3.18.RELEASE?type=jar",
        "findings.component.uuid": "6ad03770-4329-4b6c-80a7-e169683d470f",
        "findings.component.version": "4.3.18.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.056",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-22950",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:6ad03770-4329-4b6c-80a7-e169683d470f:0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "htmlunit",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/net.sourceforge.htmlunit/htmlunit@2.12?type=jar",
        "findings.component.uuid": "808265db-868f-484f-a658-0eb807f2cafe",
        "findings.component.version": "2.12",
        "findings.component.group": "net.sourceforge.htmlunit",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.107",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.1,
        "findings.vulnerability.vulnId": "CVE-2020-5529",
        "findings.vulnerability.cweId": 665,
        "findings.vulnerability.description": "HtmlUnit prior to 2.37.0 contains code execution vulnerabilities. HtmlUnit initializes Rhino engine improperly, hence a malicious JavScript code can execute arbitrary Java code on the application. Moreover, when embedded in Android application, Android-specific initialization of Rhino engine is done in an improper way, hence a malicious JavaScript code can execute arbitrary Java code on the application.",
        "findings.vulnerability.epssScore": 0.02509,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "26f3969a-f9f2-44d9-b896-6bcaa1827693",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Initialization",
        "findings.vulnerability.epssPercentile": 0.80813,
        "findings.vulnerability.cvssV2BaseScore": 6.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:808265db-868f-484f-a658-0eb807f2cafe:26f3969a-f9f2-44d9-b896-6bcaa1827693",
        "findings.vulnerability.cwes.cweId": 665,
        "findings.vulnerability.cwes.name": "Improper Initialization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xalan",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xalan/xalan@2.7.1?type=jar",
        "findings.component.uuid": "71850312-68f4-4d66-807a-9a17083b1fe7",
        "findings.component.version": "2.7.1",
        "findings.component.group": "xalan",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.155",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Permissions, Privileges, and Access Controls",
        "findings.vulnerability.vulnId": "CVE-2014-0107",
        "findings.vulnerability.epssPercentile": 0.92173,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.vulnerability.cweId": 264,
        "findings.vulnerability.description": "The TransformerFactory in Apache Xalan-Java before 2.7.2 does not properly restrict access to certain properties when FEATURE_SECURE_PROCESSING is enabled, which allows remote attackers to bypass expected restrictions and load arbitrary classes or access external resources via a crafted (1) xalan:content-header, (2) xalan:entities, (3) xslt:content-header, or (4) xslt:entities property, or a Java property that is bound to the XSLT 1.0 system-property function.",
        "findings.vulnerability.epssScore": 0.07344,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "b4f55880-91b3-4af7-b00f-5fd1f1ed08cc",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:71850312-68f4-4d66-807a-9a17083b1fe7:b4f55880-91b3-4af7-b00f-5fd1f1ed08cc",
        "findings.vulnerability.cwes.cweId": 264,
        "findings.vulnerability.cwes.name": "Permissions, Privileges, and Access Controls",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.10.0?type=jar",
        "findings.component.uuid": "7c9dd4dd-61b1-4796-b03d-fc178a7ac43a",
        "findings.component.version": "2.10.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.202",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2012-0881",
        "findings.vulnerability.cweId": 399,
        "findings.vulnerability.description": "Apache Xerces2 Java Parser before 2.12.0 allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.",
        "findings.vulnerability.epssScore": 0.03718,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "b76ee65c-c18e-4f5e-9ca4-25c2356a0bf0",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Resource Management Errors",
        "findings.vulnerability.epssPercentile": 0.84169,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7c9dd4dd-61b1-4796-b03d-fc178a7ac43a:b76ee65c-c18e-4f5e-9ca4-25c2356a0bf0",
        "findings.vulnerability.cwes.cweId": 399,
        "findings.vulnerability.cwes.name": "Resource Management Errors",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.10.0?type=jar",
        "findings.component.uuid": "7c9dd4dd-61b1-4796-b03d-fc178a7ac43a",
        "findings.component.version": "2.10.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.237",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2013-4002",
        "findings.vulnerability.epssPercentile": 0.98272,
        "findings.vulnerability.cvssV2BaseScore": 7.1,
        "findings.vulnerability.description": "XMLscanner.java in Apache Xerces2 Java Parser before 2.12.0, as used in the Java Runtime Environment (JRE) in IBM Java 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 as well as Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, Java SE Embedded 7u40 and earlier, and possibly other products allows remote attackers to cause a denial of service via vectors related to XML attribute names.",
        "findings.vulnerability.epssScore": 0.45114,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da4db67a-1dc3-4a98-a4b2-d9b858bebe96",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7c9dd4dd-61b1-4796-b03d-fc178a7ac43a:da4db67a-1dc3-4a98-a4b2-d9b858bebe96"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.10.0?type=jar",
        "findings.component.uuid": "7c9dd4dd-61b1-4796-b03d-fc178a7ac43a",
        "findings.component.version": "2.10.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.273",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-23437",
        "findings.vulnerability.cweId": 91,
        "findings.vulnerability.description": "There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "13224f9c-4413-43b3-ae80-2b871eac89d4",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "XML Injection (aka Blind XPath Injection)",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 7.1,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7c9dd4dd-61b1-4796-b03d-fc178a7ac43a:13224f9c-4413-43b3-ae80-2b871eac89d4",
        "findings.vulnerability.cwes.cweId": 91,
        "findings.vulnerability.cwes.name": "XML Injection (aka Blind XPath Injection)",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.10.0?type=jar",
        "findings.component.uuid": "7c9dd4dd-61b1-4796-b03d-fc178a7ac43a",
        "findings.component.version": "2.10.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.308",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2017-10355",
        "findings.vulnerability.epssPercentile": 0.96848,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144; JRockit: R28.3.15. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
        "findings.vulnerability.epssScore": 0.25256,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "06c23039-2eff-4760-beb6-161d8d017a39",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7c9dd4dd-61b1-4796-b03d-fc178a7ac43a:06c23039-2eff-4760-beb6-161d8d017a39"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "nekohtml",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/net.sourceforge.nekohtml/nekohtml@1.9.18?type=jar",
        "findings.component.uuid": "d5abf73e-85f7-4c20-a4bc-be5016346231",
        "findings.component.version": "1.9.18",
        "findings.component.group": "net.sourceforge.nekohtml",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.353",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2022-24839",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "org.cyberneko.html is an html parser written in Java. The fork of `org.cyberneko.html` used by Nokogiri (Rubygem) raises a `java.lang.OutOfMemoryError` exception when parsing ill-formed HTML markup. Users are advised to upgrade to `>= 1.9.22.noko2`. Note: The upstream library `org.cyberneko.html` is no longer maintained. Nokogiri uses its own fork of this library located at https://github.com/sparklemotion/nekohtml and this CVE applies only to that fork. Other forks of nekohtml may have a similar vulnerability.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7b4d40f5-3b29-4752-ba68-551a5deee2b7",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:d5abf73e-85f7-4c20-a4bc-be5016346231:7b4d40f5-3b29-4752-ba68-551a5deee2b7",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "3d35b9de-f49d-451a-b753-26887f588274",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.399",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-9735",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
        "findings.vulnerability.epssScore": 0.03779,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.84606,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:3d35b9de-f49d-451a-b753-26887f588274:785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "3d35b9de-f49d-451a-b753-26887f588274",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.434",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:3d35b9de-f49d-451a-b753-26887f588274:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "3d35b9de-f49d-451a-b753-26887f588274",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.468",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10246",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:3d35b9de-f49d-451a-b753-26887f588274:02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "ed05ac3c-8a04-49dc-8fae-79b89b4ebb64",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.514",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ed05ac3c-8a04-49dc-8fae-79b89b4ebb64:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "8396ebfc-399c-49f2-b068-4609c465ab82",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.56",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8396ebfc-399c-49f2-b068-4609c465ab82:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 190,
        "findings.vulnerability.cwes.name": "Integer Overflow or Wraparound",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "8396ebfc-399c-49f2-b068-4609c465ab82",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.56",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8396ebfc-399c-49f2-b068-4609c465ab82:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "8396ebfc-399c-49f2-b068-4609c465ab82",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.594",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7658",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8396ebfc-399c-49f2-b068-4609c465ab82:5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@8.1.9.v20130131?type=jar",
        "findings.component.uuid": "8396ebfc-399c-49f2-b068-4609c465ab82",
        "findings.component.version": "8.1.9.v20130131",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.628",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8396ebfc-399c-49f2-b068-4609c465ab82:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty@3.5.2.Final?type=jar",
        "findings.component.uuid": "06336731-3861-4ddf-8008-37624e3d4b7b",
        "findings.component.version": "3.5.2.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.679",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.1,
        "findings.vulnerability.vulnId": "CVE-2019-20444",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\"",
        "findings.vulnerability.epssScore": 0.03439,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c7d32aa0-5bb5-4416-b89b-d56dfd8e3b27",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.83753,
        "findings.vulnerability.cvssV2BaseScore": 6.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:06336731-3861-4ddf-8008-37624e3d4b7b:c7d32aa0-5bb5-4416-b89b-d56dfd8e3b27",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty@3.5.2.Final?type=jar",
        "findings.component.uuid": "06336731-3861-4ddf-8008-37624e3d4b7b",
        "findings.component.version": "3.5.2.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.714",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.1,
        "findings.vulnerability.vulnId": "CVE-2019-20445",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "8c15e8c3-d844-42eb-bca1-96a8aaf29d5f",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 6.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:06336731-3861-4ddf-8008-37624e3d4b7b:8c15e8c3-d844-42eb-bca1-96a8aaf29d5f",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty@3.5.2.Final?type=jar",
        "findings.component.uuid": "06336731-3861-4ddf-8008-37624e3d4b7b",
        "findings.component.version": "3.5.2.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.748",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2015-2156",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "Netty before 3.9.8.Final, 3.10.x before 3.10.3.Final, 4.0.x before 4.0.28.Final, and 4.1.x before 4.1.0.Beta5 and Play Framework 2.x before 2.3.9 might allow remote attackers to bypass the httpOnly flag on cookies and obtain sensitive information by leveraging improper validation of cookie name and value characters.",
        "findings.vulnerability.epssScore": 0.02172,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7c1d142f-ef90-4d44-96eb-1b29aaf5696d",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.79659,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:06336731-3861-4ddf-8008-37624e3d4b7b:7c1d142f-ef90-4d44-96eb-1b29aaf5696d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty@3.5.2.Final?type=jar",
        "findings.component.uuid": "06336731-3861-4ddf-8008-37624e3d4b7b",
        "findings.component.version": "3.5.2.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.782",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2019-16869",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling.",
        "findings.vulnerability.epssScore": 0.05732,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "57100a7f-65e2-4a9f-83ab-80bf4f9dc109",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.89751,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:06336731-3861-4ddf-8008-37624e3d4b7b:57100a7f-65e2-4a9f-83ab-80bf4f9dc109",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty@3.5.2.Final?type=jar",
        "findings.component.uuid": "06336731-3861-4ddf-8008-37624e3d4b7b",
        "findings.component.version": "3.5.2.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.815",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2021-43797",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to \"sanitize\" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "44a82027-f9fa-4166-88bf-7302ff7acce9",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:06336731-3861-4ddf-8008-37624e3d4b7b:44a82027-f9fa-4166-88bf-7302ff7acce9",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "netty",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.netty/netty@3.5.2.Final?type=jar",
        "findings.component.uuid": "06336731-3861-4ddf-8008-37624e3d4b7b",
        "findings.component.version": "3.5.2.Final",
        "findings.component.group": "io.netty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.846",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Resource Management Errors",
        "findings.vulnerability.vulnId": "CVE-2014-0193",
        "findings.vulnerability.epssPercentile": 0.84606,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.cweId": 399,
        "findings.vulnerability.description": "WebSocket08FrameDecoder in Netty 3.6.x before 3.6.9, 3.7.x before 3.7.1, 3.8.x before 3.8.2, 3.9.x before 3.9.1, and 4.0.x before 4.0.19 allows remote attackers to cause a denial of service (memory consumption) via a TextWebSocketFrame followed by a long stream of ContinuationWebSocketFrames.",
        "findings.vulnerability.epssScore": 0.03779,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a4e428d0-2baf-4309-8eca-f536f86dd7fd",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:06336731-3861-4ddf-8008-37624e3d4b7b:a4e428d0-2baf-4309-8eca-f536f86dd7fd",
        "findings.vulnerability.cwes.cweId": 399,
        "findings.vulnerability.cwes.name": "Resource Management Errors",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "maven-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.maven/maven-core@3.3.9?type=jar",
        "findings.component.uuid": "ad67ecaa-b239-4ab0-a4c2-e7b57c5b766d",
        "findings.component.version": "3.3.9",
        "findings.component.group": "org.apache.maven",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.894",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.1,
        "findings.vulnerability.vulnId": "CVE-2021-26291",
        "findings.vulnerability.cweId": 346,
        "findings.vulnerability.description": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cffeb3fd-cf39-4449-a3f6-2cacb79e84b9",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Origin Validation Error",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 6.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ad67ecaa-b239-4ab0-a4c2-e7b57c5b766d:cffeb3fd-cf39-4449-a3f6-2cacb79e84b9",
        "findings.vulnerability.cwes.cweId": 346,
        "findings.vulnerability.cwes.name": "Origin Validation Error",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "maven-settings",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.maven/maven-settings@3.3.9?type=jar",
        "findings.component.uuid": "99cfe967-f73a-4110-8b2b-e7a71aecb672",
        "findings.component.version": "3.3.9",
        "findings.component.group": "org.apache.maven",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.939",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.1,
        "findings.vulnerability.vulnId": "CVE-2021-26291",
        "findings.vulnerability.cweId": 346,
        "findings.vulnerability.description": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cffeb3fd-cf39-4449-a3f6-2cacb79e84b9",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Origin Validation Error",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 6.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:99cfe967-f73a-4110-8b2b-e7a71aecb672:cffeb3fd-cf39-4449-a3f6-2cacb79e84b9",
        "findings.vulnerability.cwes.cweId": 346,
        "findings.vulnerability.cwes.name": "Origin Validation Error",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "junit",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/junit/junit@4.12?type=jar",
        "findings.component.uuid": "57d887b8-7a44-43da-b8ae-e4a6373a281e",
        "findings.component.version": "4.12",
        "findings.component.group": "junit",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:14.988",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2020-15250",
        "findings.vulnerability.cweId": 732,
        "findings.vulnerability.description": "In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "45d51329-e8e4-4d23-8e01-200df4905a9f",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Incorrect Permission Assignment for Critical Resource",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 1.9,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:57d887b8-7a44-43da-b8ae-e4a6373a281e:45d51329-e8e4-4d23-8e01-200df4905a9f",
        "findings.vulnerability.cwes.cweId": 732,
        "findings.vulnerability.cwes.name": "Incorrect Permission Assignment for Critical Resource",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.27.v20200227?type=jar",
        "findings.component.uuid": "c7203bb5-7f9d-445a-97b8-42213cfdb3d8",
        "findings.component.version": "9.4.27.v20200227",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.035",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.4,
        "findings.vulnerability.vulnId": "CVE-2019-17638",
        "findings.vulnerability.cweId": 672,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.4.27.v20200227 to 9.4.29.v20200521, in case of too large response headers, Jetty throws an exception to produce an HTTP 431 error. When this happens, the ByteBuffer containing the HTTP response headers is released back to the ByteBufferPool twice. Because of this double release, two threads can acquire the same ByteBuffer from the pool and while thread1 is about to use the ByteBuffer to write response1 data, thread2 fills the ByteBuffer with other data. Thread1 then proceeds to write the buffer that now contains different data. This results in client1, which issued request1 seeing data from another request or response which could contain sensitive data belonging to client2 (HTTP session ids, authentication credentials, etc.). If the Jetty version cannot be upgraded, the vulnerability can be significantly reduced by configuring a responseHeaderSize significantly larger than the requestHeaderSize (12KB responseHeaderSize and 8KB requestHeaderSize).",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7cbb4a00-1a09-49d4-9617-593d1c205b29",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Operation on a Resource after Expiration or Release",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c7203bb5-7f9d-445a-97b8-42213cfdb3d8:7cbb4a00-1a09-49d4-9617-593d1c205b29",
        "findings.vulnerability.cwes.cweId": 672,
        "findings.vulnerability.cwes.name": "Operation on a Resource after Expiration or Release",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.27.v20200227?type=jar",
        "findings.component.uuid": "c7203bb5-7f9d-445a-97b8-42213cfdb3d8",
        "findings.component.version": "9.4.27.v20200227",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.071",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-27218",
        "findings.vulnerability.epssPercentile": 0.96749,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",
        "findings.vulnerability.epssScore": 0.24963,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bd7767ab-b02d-479c-82f4-32a872c8e415",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c7203bb5-7f9d-445a-97b8-42213cfdb3d8:bd7767ab-b02d-479c-82f4-32a872c8e415"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.27.v20200227?type=jar",
        "findings.component.uuid": "c7203bb5-7f9d-445a-97b8-42213cfdb3d8",
        "findings.component.version": "9.4.27.v20200227",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.103",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 3.5,
        "findings.vulnerability.vulnId": "CVE-2021-34428",
        "findings.vulnerability.cweId": 613,
        "findings.vulnerability.description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c45b49d1-0bc9-4590-a9c1-efae1716a1f1",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Insufficient Session Expiration",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 3.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c7203bb5-7f9d-445a-97b8-42213cfdb3d8:c45b49d1-0bc9-4590-a9c1-efae1716a1f1",
        "findings.vulnerability.cwes.cweId": 613,
        "findings.vulnerability.cwes.name": "Insufficient Session Expiration",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.27.v20200227?type=jar",
        "findings.component.uuid": "c7203bb5-7f9d-445a-97b8-42213cfdb3d8",
        "findings.component.version": "9.4.27.v20200227",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.134",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c7203bb5-7f9d-445a-97b8-42213cfdb3d8:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@9.4.27.v20200227?type=jar",
        "findings.component.uuid": "98bdf93e-db76-49c9-bf5c-7e2c8fa04197",
        "findings.component.version": "9.4.27.v20200227",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.179",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:98bdf93e-db76-49c9-bf5c-7e2c8fa04197:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.27.v20200227?type=jar",
        "findings.component.uuid": "398a666b-3abc-450a-9642-3a858e34a8c5",
        "findings.component.version": "9.4.27.v20200227",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.225",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-27223",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values.",
        "findings.vulnerability.epssScore": 0.4729,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "e43cd57b-4270-49e1-b531-34f45b57410c",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.98448,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:398a666b-3abc-450a-9642-3a858e34a8c5:e43cd57b-4270-49e1-b531-34f45b57410c",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.27.v20200227?type=jar",
        "findings.component.uuid": "398a666b-3abc-450a-9642-3a858e34a8c5",
        "findings.component.version": "9.4.27.v20200227",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.259",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:398a666b-3abc-450a-9642-3a858e34a8c5:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "b0e5c627-ee81-4ef3-8e75-a0eeb33798c6",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.309",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2018-12538",
        "findings.vulnerability.cweId": 384,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 through 9.4.8, when using the optional Jetty provided FileSessionDataStore for persistent storage of HttpSession details, it is possible for a malicious user to access/hijack other HttpSessions and even delete unmatched HttpSessions present in the FileSystem's storage for the FileSessionDataStore.",
        "findings.vulnerability.epssScore": 0.01034,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "eaf9de0d-0e6b-4cee-94bf-19c2d1b389f8",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Session Fixation",
        "findings.vulnerability.epssPercentile": 0.39334,
        "findings.vulnerability.cvssV2BaseScore": 6.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b0e5c627-ee81-4ef3-8e75-a0eeb33798c6:eaf9de0d-0e6b-4cee-94bf-19c2d1b389f8",
        "findings.vulnerability.cwes.cweId": 384,
        "findings.vulnerability.cwes.name": "Session Fixation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "b0e5c627-ee81-4ef3-8e75-a0eeb33798c6",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.343",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b0e5c627-ee81-4ef3-8e75-a0eeb33798c6:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "b0e5c627-ee81-4ef3-8e75-a0eeb33798c6",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.376",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b0e5c627-ee81-4ef3-8e75-a0eeb33798c6:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "b0e5c627-ee81-4ef3-8e75-a0eeb33798c6",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.408",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10247",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b0e5c627-ee81-4ef3-8e75-a0eeb33798c6:11aba16a-25e9-4cc8-acf2-0f46ef0b640a",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "b0e5c627-ee81-4ef3-8e75-a0eeb33798c6",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.438",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-27218",
        "findings.vulnerability.epssPercentile": 0.96749,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",
        "findings.vulnerability.epssScore": 0.24963,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "bd7767ab-b02d-479c-82f4-32a872c8e415",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b0e5c627-ee81-4ef3-8e75-a0eeb33798c6:bd7767ab-b02d-479c-82f4-32a872c8e415"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-server",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "b0e5c627-ee81-4ef3-8e75-a0eeb33798c6",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.469",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b0e5c627-ee81-4ef3-8e75-a0eeb33798c6:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "24304f7e-d60d-49cc-b3b3-5574e5e2cce4",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.512",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:24304f7e-d60d-49cc-b3b3-5574e5e2cce4:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 190,
        "findings.vulnerability.cwes.name": "Integer Overflow or Wraparound",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "24304f7e-d60d-49cc-b3b3-5574e5e2cce4",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.512",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:24304f7e-d60d-49cc-b3b3-5574e5e2cce4:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "24304f7e-d60d-49cc-b3b3-5574e5e2cce4",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.546",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7658",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:24304f7e-d60d-49cc-b3b3-5574e5e2cce4:5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "24304f7e-d60d-49cc-b3b3-5574e5e2cce4",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.577",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2017-7656",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f2a8d5de-d8a8-4704-8807-10a711733d27",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:24304f7e-d60d-49cc-b3b3-5574e5e2cce4:f2a8d5de-d8a8-4704-8807-10a711733d27"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "24304f7e-d60d-49cc-b3b3-5574e5e2cce4",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.607",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-27223",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of \u201cquality\u201d (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values.",
        "findings.vulnerability.epssScore": 0.4729,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "e43cd57b-4270-49e1-b531-34f45b57410c",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.98448,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:24304f7e-d60d-49cc-b3b3-5574e5e2cce4:e43cd57b-4270-49e1-b531-34f45b57410c",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "24304f7e-d60d-49cc-b3b3-5574e5e2cce4",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.636",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:24304f7e-d60d-49cc-b3b3-5574e5e2cce4:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "10264673-d22e-4fc1-85b7-d33a7f4ae31d",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.679",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:10264673-d22e-4fc1-85b7-d33a7f4ae31d:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-servlets",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-servlets@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "2db61886-a13e-4034-acaa-e11f571ec931",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.725",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2021-28169",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "65467cb0-c885-4e2c-9cb9-a8a4368f7050",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:2db61886-a13e-4034-acaa-e11f571ec931:65467cb0-c885-4e2c-9cb9-a8a4368f7050",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-client",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-client@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "b0f98cd1-a5fa-42f1-8df9-e422fe663e24",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.77",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b0f98cd1-a5fa-42f1-8df9-e422fe663e24:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "023a64c2-46b8-4c31-9de2-8b57961060f7",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.814",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:023a64c2-46b8-4c31-9de2-8b57961060f7:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "023a64c2-46b8-4c31-9de2-8b57961060f7",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.847",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:023a64c2-46b8-4c31-9de2-8b57961060f7:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.6.v20170531?type=jar",
        "findings.component.uuid": "023a64c2-46b8-4c31-9de2-8b57961060f7",
        "findings.component.version": "9.4.6.v20170531",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.88",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10246",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:023a64c2-46b8-4c31-9de2-8b57961060f7:02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-boot",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework.boot/spring-boot@1.5.20.RELEASE?type=jar",
        "findings.component.uuid": "c03c9010-1e24-418e-a3f3-b626be345167",
        "findings.component.version": "1.5.20.RELEASE",
        "findings.component.group": "org.springframework.boot",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.924",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.8,
        "findings.vulnerability.vulnId": "CVE-2022-27772",
        "findings.vulnerability.cweId": 668,
        "findings.vulnerability.description": "** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:c03c9010-1e24-418e-a3f3-b626be345167:5e7d077a-dabb-46b3-a847-fe72459df215",
        "findings.vulnerability.cwes.cweId": 668,
        "findings.vulnerability.cwes.name": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "thymeleaf-spring4",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.thymeleaf/thymeleaf-spring4@2.1.6.RELEASE?type=jar",
        "findings.component.uuid": "fa2d6a9e-95d6-4c38-b362-3afa3f9e03e0",
        "findings.component.version": "2.1.6.RELEASE",
        "findings.component.group": "org.thymeleaf",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:15.971",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2021-43466",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "In the thymeleaf-spring5:3.0.12 component, thymeleaf combined with specific scenarios in template injection may lead to remote code execution.",
        "findings.vulnerability.epssScore": 0.01978,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "dc132e9f-b3b9-4e11-8df6-6fe2b08abab9",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.78181,
        "findings.vulnerability.cvssV2BaseScore": 6.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:fa2d6a9e-95d6-4c38-b362-3afa3f9e03e0:dc132e9f-b3b9-4e11-8df6-6fe2b08abab9",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "ognl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/ognl/ognl@3.0.8?type=jar",
        "findings.component.uuid": "9a42a394-7f1e-4ea6-8f84-03d6e820c732",
        "findings.component.version": "3.0.8",
        "findings.component.group": "ognl",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.015",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2016-3093",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "Apache Struts 2.0.0 through 2.3.24.1 does not properly cache method references when used with OGNL before 3.0.12, which allows remote attackers to cause a denial of service (block access to a web site) via unspecified vectors.",
        "findings.vulnerability.epssScore": 0.0424,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "86a30ab3-4861-43e5-b1a3-355f99256037",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.86713,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9a42a394-7f1e-4ea6-8f84-03d6e820c732:86a30ab3-4861-43e5-b1a3-355f99256037",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "groovy",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.codehaus.groovy/groovy@2.4.16?type=jar",
        "findings.component.uuid": "23786f9e-faa8-49ce-822e-0e655f1c0b2a",
        "findings.component.version": "2.4.16",
        "findings.component.group": "org.codehaus.groovy",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.061",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-17521",
        "findings.vulnerability.epssPercentile": 0.84669,
        "findings.vulnerability.cvssV2BaseScore": 2.1,
        "findings.vulnerability.description": "Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.",
        "findings.vulnerability.epssScore": 0.03812,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "94dfe476-66ce-47a6-b74c-d63cee8a06c1",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:23786f9e-faa8-49ce-822e-0e655f1c0b2a:94dfe476-66ce-47a6-b74c-d63cee8a06c1"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-embed-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.39?type=jar",
        "findings.component.uuid": "0036a2aa-1488-4daf-a40b-29e324625260",
        "findings.component.version": "8.5.39",
        "findings.component.group": "org.apache.tomcat.embed",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.108",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.6,
        "findings.vulnerability.vulnId": "CVE-2022-25762",
        "findings.vulnerability.cweId": 404,
        "findings.vulnerability.description": "If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "9ca8a3fe-076a-474e-a27d-8e1ce3628456",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Resource Shutdown or Release",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0036a2aa-1488-4daf-a40b-29e324625260:9ca8a3fe-076a-474e-a27d-8e1ce3628456",
        "findings.vulnerability.cwes.cweId": 404,
        "findings.vulnerability.cwes.name": "Improper Resource Shutdown or Release",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "tomcat-embed-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@8.5.39?type=jar",
        "findings.component.uuid": "0036a2aa-1488-4daf-a40b-29e324625260",
        "findings.component.version": "8.5.39",
        "findings.component.group": "org.apache.tomcat.embed",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.142",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.1,
        "findings.vulnerability.vulnId": "CVE-2019-0232",
        "findings.vulnerability.cweId": 78,
        "findings.vulnerability.description": "When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",
        "findings.vulnerability.epssScore": 0.94954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.epssPercentile": 0.9996,
        "findings.vulnerability.cvssV2BaseScore": 9.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0036a2aa-1488-4daf-a40b-29e324625260:d4b31647-f6e6-481e-977e-c11550933ab1",
        "findings.vulnerability.cwes.cweId": 78,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@4.3.23.RELEASE?type=jar",
        "findings.component.uuid": "db1be71a-3474-40fb-9794-5ad8bacaddce",
        "findings.component.version": "4.3.23.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.191",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2016-1000027",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",
        "findings.vulnerability.epssScore": 0.69181,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.99085,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:db1be71a-3474-40fb-9794-5ad8bacaddce:a7bd617e-a975-40d9-91ed-b3c0264caee2",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-web",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-web@4.3.23.RELEASE?type=jar",
        "findings.component.uuid": "db1be71a-3474-40fb-9794-5ad8bacaddce",
        "findings.component.version": "4.3.23.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.237",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-5421",
        "findings.vulnerability.epssPercentile": 0.73793,
        "findings.vulnerability.cvssV2BaseScore": 3.6,
        "findings.vulnerability.description": "In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",
        "findings.vulnerability.epssScore": 0.01547,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "475ef218-38a4-4460-9aa2-c5e2638bcad6",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:db1be71a-3474-40fb-9794-5ad8bacaddce:475ef218-38a4-4460-9aa2-c5e2638bcad6"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-beans",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-beans@4.3.23.RELEASE?type=jar",
        "findings.component.uuid": "59e12d93-2bf8-46c9-92b9-ef095e584271",
        "findings.component.version": "4.3.23.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.284",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-22965",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
        "findings.vulnerability.epssScore": 0.95668,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.99981,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:59e12d93-2bf8-46c9-92b9-ef095e584271:019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-context",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-context@4.3.23.RELEASE?type=jar",
        "findings.component.uuid": "4d5c7e37-58df-41a3-adb5-17d7667819c3",
        "findings.component.version": "4.3.23.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.331",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2022-22968",
        "findings.vulnerability.cweId": 178,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4d5c7e37-58df-41a3-adb5-17d7667819c3:a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.cwes.cweId": 178,
        "findings.vulnerability.cwes.name": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-webmvc",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-webmvc@4.3.23.RELEASE?type=jar",
        "findings.component.uuid": "9cc44e99-113e-4345-b92f-b40518a88f12",
        "findings.component.version": "4.3.23.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.377",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2020-5397",
        "findings.vulnerability.cweId": 352,
        "findings.vulnerability.description": "Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.",
        "findings.vulnerability.epssScore": 0.01108,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cdb3ef78-bd4e-44df-93bf-60238cf5cba3",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.epssPercentile": 0.52961,
        "findings.vulnerability.cvssV2BaseScore": 2.6,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9cc44e99-113e-4345-b92f-b40518a88f12:cdb3ef78-bd4e-44df-93bf-60238cf5cba3",
        "findings.vulnerability.cwes.cweId": 352,
        "findings.vulnerability.cwes.name": "Cross-Site Request Forgery (CSRF)",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-webmvc",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-webmvc@4.3.23.RELEASE?type=jar",
        "findings.component.uuid": "9cc44e99-113e-4345-b92f-b40518a88f12",
        "findings.component.version": "4.3.23.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.412",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-22060",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "07f3ca8e-ecdc-45c0-b3a4-5fab903dae37",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9cc44e99-113e-4345-b92f-b40518a88f12:07f3ca8e-ecdc-45c0-b3a4-5fab903dae37"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@4.3.23.RELEASE?type=jar",
        "findings.component.uuid": "f62e01cf-d19c-4b79-b837-9b1abbddb683",
        "findings.component.version": "4.3.23.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.456",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-22950",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:f62e01cf-d19c-4b79-b837-9b1abbddb683:0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "keycloak-servlet-filter-adapter",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.keycloak/keycloak-servlet-filter-adapter@10.0.2?type=jar",
        "findings.component.uuid": "dea77ccb-b960-46a7-8dd0-62addb103c7a",
        "findings.component.version": "10.0.2",
        "findings.component.group": "org.keycloak",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.503",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2020-1714",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",
        "findings.vulnerability.epssScore": 0.01978,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.78181,
        "findings.vulnerability.cvssV2BaseScore": 6.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:dea77ccb-b960-46a7-8dd0-62addb103c7a:54f6ae28-b069-410d-98b3-7e6d336a4ebf",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "h2",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.h2database/h2@1.4.197?type=jar",
        "findings.component.uuid": "9a14abb1-5d37-4451-82d8-1e17d7d17f89",
        "findings.component.version": "1.4.197",
        "findings.component.group": "com.h2database",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.554",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2021-42392",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "The org.h2.util.JdbcUtils.getConnection method of the H2 database takes as parameters the class name of the driver and URL of the database. An attacker may pass a JNDI driver name and a URL leading to a LDAP or RMI servers, causing remote code execution. This can be exploited through various attack vectors, most notably through the H2 Console which leads to unauthenticated remote code execution.",
        "findings.vulnerability.epssScore": 0.48334,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "074ba13a-a078-4b43-bd1f-9e9b75fa40a2",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.98494,
        "findings.vulnerability.cvssV2BaseScore": 10,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9a14abb1-5d37-4451-82d8-1e17d7d17f89:074ba13a-a078-4b43-bd1f-9e9b75fa40a2",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "h2",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.h2database/h2@1.4.197?type=jar",
        "findings.component.uuid": "9a14abb1-5d37-4451-82d8-1e17d7d17f89",
        "findings.component.version": "1.4.197",
        "findings.component.group": "com.h2database",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.591",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-23221",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "H2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392.",
        "findings.vulnerability.epssScore": 0.07154,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "e7745113-19c5-4966-a5ee-0e2e416508ad",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.91856,
        "findings.vulnerability.cvssV2BaseScore": 10,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:9a14abb1-5d37-4451-82d8-1e17d7d17f89:e7745113-19c5-4966-a5ee-0e2e416508ad",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "wildfly-security",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.wildfly/wildfly-security@19.1.0.Final?type=jar",
        "findings.component.uuid": "190e151a-fec7-4c6c-a612-3f83e465eaa1",
        "findings.component.version": "19.1.0.Final",
        "findings.component.group": "org.wildfly",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.643",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.4,
        "findings.vulnerability.vulnId": "CVE-2020-1719",
        "findings.vulnerability.cweId": 270,
        "findings.vulnerability.description": "A flaw was found in wildfly. The EJBContext principle is not popped back after invoking another EJB using a different Security Domain. The highest threat from this vulnerability is to data confidentiality and integrity. Versions before wildfly 20.0.0.Final are affected.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "b454f871-2cc6-4316-a899-37f6e90354a4",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Privilege Context Switching Error",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:190e151a-fec7-4c6c-a612-3f83e465eaa1:b454f871-2cc6-4316-a899-37f6e90354a4",
        "findings.vulnerability.cwes.cweId": 270,
        "findings.vulnerability.cwes.name": "Privilege Context Switching Error",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "wildfly-transaction-client",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.wildfly.transaction/wildfly-transaction-client@1.1.9.Final?type=jar",
        "findings.component.uuid": "0334a0ce-1449-4dae-98a5-f88df6e30696",
        "findings.component.version": "1.1.9.Final",
        "findings.component.group": "org.wildfly.transaction",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.692",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2022-0853",
        "findings.vulnerability.cweId": 401,
        "findings.vulnerability.description": "A flaw was found in JBoss-client. The vulnerability occurs due to a memory leak on the JBoss client-side, when using UserTransaction repeatedly and leads to information leakage vulnerability.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "b4140c2a-298e-47f4-b3d8-9dff23c0b1a6",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Missing Release of Memory after Effective Lifetime",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0334a0ce-1449-4dae-98a5-f88df6e30696:b4140c2a-298e-47f4-b3d8-9dff23c0b1a6",
        "findings.vulnerability.cwes.cweId": 401,
        "findings.vulnerability.cwes.name": "Missing Release of Memory after Effective Lifetime",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "undertow-websockets-jsr",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/io.undertow/undertow-websockets-jsr@2.1.0.Final?type=jar",
        "findings.component.uuid": "500afa1a-c7f1-48db-ac62-4ddf719b3c46",
        "findings.component.version": "2.1.0.Final",
        "findings.component.group": "io.undertow",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.742",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.vulnId": "CVE-2021-3690",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "undertow-websockets-jsr - Denial of Service (DoS)",
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "7e19727f-7a18-4ef2-ac3c-720608486cb7",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:500afa1a-c7f1-48db-ac62-4ddf719b3c46:7e19727f-7a18-4ef2-ac3c-720608486cb7",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "mysql-connector-java",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/mysql/mysql-connector-java@8.0.18?type=jar",
        "findings.component.uuid": "09226c73-3941-47e7-a050-b9bafe81632d",
        "findings.component.version": "8.0.18",
        "findings.component.group": "mysql",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.789",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.6,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2022-21363",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 6,
        "findings.vulnerability.description": "Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.27 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.1 Base Score 6.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H).",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c1ce24c1-11a5-4499-a663-3dc6b1263a03",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:09226c73-3941-47e7-a050-b9bafe81632d:c1ce24c1-11a5-4499-a663-3dc6b1263a03"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "mysql-connector-java",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/mysql/mysql-connector-java@8.0.18?type=jar",
        "findings.component.uuid": "09226c73-3941-47e7-a050-b9bafe81632d",
        "findings.component.version": "8.0.18",
        "findings.component.group": "mysql",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.824",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.9,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-2471",
        "findings.vulnerability.epssPercentile": 0.9554,
        "findings.vulnerability.cvssV2BaseScore": 7.9,
        "findings.vulnerability.description": "Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.26 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all MySQL Connectors accessible data and unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of MySQL Connectors. CVSS 3.1 Base Score 5.9 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:H).",
        "findings.vulnerability.epssScore": 0.13646,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a6e2a472-fd35-4edc-a430-41a7c22491dc",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:09226c73-3941-47e7-a050-b9bafe81632d:a6e2a472-fd35-4edc-a430-41a7c22491dc"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "mysql-connector-java",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/mysql/mysql-connector-java@8.0.18?type=jar",
        "findings.component.uuid": "09226c73-3941-47e7-a050-b9bafe81632d",
        "findings.component.version": "8.0.18",
        "findings.component.group": "mysql",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.858",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-2934",
        "findings.vulnerability.epssPercentile": 0.52961,
        "findings.vulnerability.cvssV2BaseScore": 5.1,
        "findings.vulnerability.description": "Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.19 and prior and 5.1.48 and prior. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data as well as unauthorized read access to a subset of MySQL Connectors accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of MySQL Connectors. CVSS 3.0 Base Score 5.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L).",
        "findings.vulnerability.epssScore": 0.01108,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f28540ca-477b-46f1-a483-ea00732ffefe",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:09226c73-3941-47e7-a050-b9bafe81632d:f28540ca-477b-46f1-a483-ea00732ffefe"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "protobuf-java",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.google.protobuf/protobuf-java@3.6.1?type=jar",
        "findings.component.uuid": "eb1f4401-779a-4cd5-8747-7bba21f13a63",
        "findings.component.version": "3.6.1",
        "findings.component.group": "com.google.protobuf",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.903",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-22569",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.vulnerability.description": "An issue in protobuf-java allowed the interleaving of com.google.protobuf.UnknownFieldSet fields in such a way that would be processed out of order. A small malicious payload can occupy the parser for several minutes by creating large numbers of short-lived objects that cause frequent, repeated pauses. We recommend upgrading libraries beyond the vulnerable versions.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "489c8fe0-c947-42f9-a793-866e4468ad9e",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:eb1f4401-779a-4cd5-8747-7bba21f13a63:489c8fe0-c947-42f9-a793-866e4468ad9e"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "postgresql",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.postgresql/postgresql@42.2.8?type=jar",
        "findings.component.uuid": "129c9eaa-9aa6-42ae-8793-0307739a8bf5",
        "findings.component.version": "42.2.8",
        "findings.component.group": "org.postgresql",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.948",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-21724",
        "findings.vulnerability.cweId": 665,
        "findings.vulnerability.description": "pgjdbc is the offical PostgreSQL JDBC Driver. A security hole was found in the jdbc driver for postgresql database while doing security research. The system using the postgresql library will be attacked when attacker control the jdbc url or properties. pgjdbc instantiates plugin instances based on class names provided via `authenticationPluginClassName`, `sslhostnameverifier`, `socketFactory`, `sslfactory`, `sslpasswordcallback` connection properties. However, the driver did not verify if the class implements the expected interface before instantiating the class. This can lead to code execution loaded via arbitrary classes. Users using plugins are advised to upgrade. There are no known workarounds for this issue.",
        "findings.vulnerability.epssScore": 0.02509,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0301f064-02a6-407c-8d42-714b781a8caa",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Initialization",
        "findings.vulnerability.epssPercentile": 0.80813,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:129c9eaa-9aa6-42ae-8793-0307739a8bf5:0301f064-02a6-407c-8d42-714b781a8caa",
        "findings.vulnerability.cwes.cweId": 665,
        "findings.vulnerability.cwes.name": "Improper Initialization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "postgresql",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.postgresql/postgresql@42.2.8?type=jar",
        "findings.component.uuid": "129c9eaa-9aa6-42ae-8793-0307739a8bf5",
        "findings.component.version": "42.2.8",
        "findings.component.group": "org.postgresql",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:16.982",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.vulnId": "CVE-2022-26520",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.vulnerability.description": "** DISPUTED ** In pgjdbc before 42.3.3, an attacker (who controls the jdbc URL or properties) can call java.util.logging.FileHandler to write to arbitrary files through the loggerFile and loggerLevel connection properties. An example situation is that an attacker could create an executable JSP file under a Tomcat web root. NOTE: the vendor's position is that there is no pgjdbc vulnerability; instead, it is a vulnerability for any application to use the pgjdbc driver with untrusted connection properties.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "2272e3ca-cfb6-44ac-a787-bbecda3aa35a",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:129c9eaa-9aa6-42ae-8793-0307739a8bf5:2272e3ca-cfb6-44ac-a787-bbecda3aa35a"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "postgresql",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.postgresql/postgresql@42.2.8?type=jar",
        "findings.component.uuid": "129c9eaa-9aa6-42ae-8793-0307739a8bf5",
        "findings.component.version": "42.2.8",
        "findings.component.group": "org.postgresql",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.018",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.7,
        "findings.vulnerability.vulnId": "CVE-2020-13692",
        "findings.vulnerability.cweId": 611,
        "findings.vulnerability.description": "PostgreSQL JDBC Driver (aka PgJDBC) before 42.2.13 allows XXE.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "30375ec5-fe15-4143-a984-1fdb8b3d2513",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Restriction of XML External Entity Reference",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 6.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:129c9eaa-9aa6-42ae-8793-0307739a8bf5:30375ec5-fe15-4143-a984-1fdb8b3d2513",
        "findings.vulnerability.cwes.cweId": 611,
        "findings.vulnerability.cwes.name": "Improper Restriction of XML External Entity Reference",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "maven-settings",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.maven/maven-settings@3.6.3?type=jar",
        "findings.component.uuid": "6adf630c-6eab-4511-a213-7cf54bb8c9cd",
        "findings.component.version": "3.6.3",
        "findings.component.group": "org.apache.maven",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.077",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.1,
        "findings.vulnerability.vulnId": "CVE-2021-26291",
        "findings.vulnerability.cweId": 346,
        "findings.vulnerability.description": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "cffeb3fd-cf39-4449-a3f6-2cacb79e84b9",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Origin Validation Error",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 6.4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:6adf630c-6eab-4511-a213-7cf54bb8c9cd:cffeb3fd-cf39-4449-a3f6-2cacb79e84b9",
        "findings.vulnerability.cwes.cweId": 346,
        "findings.vulnerability.cwes.name": "Origin Validation Error",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jsoup",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.jsoup/jsoup@1.12.1?type=jar",
        "findings.component.uuid": "b06c1481-5efe-4d67-a080-3651c976f988",
        "findings.component.version": "1.12.1",
        "findings.component.group": "org.jsoup",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.125",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-37714",
        "findings.vulnerability.cweId": 248,
        "findings.vulnerability.description": "jsoup is a Java library for working with HTML. Those using jsoup versions prior to 1.14.2 to parse untrusted HTML or XML may be vulnerable to DOS attacks. If the parser is run on user supplied input, an attacker may supply content that causes the parser to get stuck (loop indefinitely until cancelled), to complete more slowly than usual, or to throw an unexpected exception. This effect may support a denial of service attack. The issue is patched in version 1.14.2. There are a few available workarounds. Users may rate limit input parsing, limit the size of inputs based on system resources, and/or implement thread watchdogs to cap and timeout parse runtimes.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "28e2e25a-57c5-42ce-adda-e9cdf9dcc459",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncaught Exception",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b06c1481-5efe-4d67-a080-3651c976f988:28e2e25a-57c5-42ce-adda-e9cdf9dcc459",
        "findings.vulnerability.cwes.cweId": 248,
        "findings.vulnerability.cwes.name": "Uncaught Exception",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jsoup",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.jsoup/jsoup@1.12.1?type=jar",
        "findings.component.uuid": "b06c1481-5efe-4d67-a080-3651c976f988",
        "findings.component.version": "1.12.1",
        "findings.component.group": "org.jsoup",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.125",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-37714",
        "findings.vulnerability.cweId": 248,
        "findings.vulnerability.description": "jsoup is a Java library for working with HTML. Those using jsoup versions prior to 1.14.2 to parse untrusted HTML or XML may be vulnerable to DOS attacks. If the parser is run on user supplied input, an attacker may supply content that causes the parser to get stuck (loop indefinitely until cancelled), to complete more slowly than usual, or to throw an unexpected exception. This effect may support a denial of service attack. The issue is patched in version 1.14.2. There are a few available workarounds. Users may rate limit input parsing, limit the size of inputs based on system resources, and/or implement thread watchdogs to cap and timeout parse runtimes.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "28e2e25a-57c5-42ce-adda-e9cdf9dcc459",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncaught Exception",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:b06c1481-5efe-4d67-a080-3651c976f988:28e2e25a-57c5-42ce-adda-e9cdf9dcc459",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.8.1?type=jar",
        "findings.component.uuid": "fb9a10b4-9303-45b5-9aff-a559a6183e79",
        "findings.component.version": "1.8.1",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.177",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35515",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "47250b55-ae0a-45bb-b2a0-3cfcbc77ad04",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:fb9a10b4-9303-45b5-9aff-a559a6183e79:47250b55-ae0a-45bb-b2a0-3cfcbc77ad04",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.8.1?type=jar",
        "findings.component.uuid": "fb9a10b4-9303-45b5-9aff-a559a6183e79",
        "findings.component.version": "1.8.1",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.213",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35516",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d700af5e-6afb-4d80-8e43-8ae907567698",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:fb9a10b4-9303-45b5-9aff-a559a6183e79:d700af5e-6afb-4d80-8e43-8ae907567698",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.8.1?type=jar",
        "findings.component.uuid": "fb9a10b4-9303-45b5-9aff-a559a6183e79",
        "findings.component.version": "1.8.1",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.248",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35517",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0d829154-7261-4554-b5d3-ac4e0d874969",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:fb9a10b4-9303-45b5-9aff-a559a6183e79:0d829154-7261-4554-b5d3-ac4e0d874969",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.8.1?type=jar",
        "findings.component.uuid": "fb9a10b4-9303-45b5-9aff-a559a6183e79",
        "findings.component.version": "1.8.1",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.283",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2021-36090",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "abf15b3e-3937-471f-bd10-251355327db6",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:fb9a10b4-9303-45b5-9aff-a559a6183e79:abf15b3e-3937-471f-bd10-251355327db6"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.8.1?type=jar",
        "findings.component.uuid": "fb9a10b4-9303-45b5-9aff-a559a6183e79",
        "findings.component.version": "1.8.1",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.318",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2018-11771",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "196a6610-e2b3-4d31-8c8c-ea652d398c1d",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:fb9a10b4-9303-45b5-9aff-a559a6183e79:196a6610-e2b3-4d31-8c8c-ea652d398c1d",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "sshd-core",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.sshd/sshd-core@2.2.0?type=jar",
        "findings.component.uuid": "e12668b1-9b7b-4300-8da6-8cda2becf544",
        "findings.component.version": "2.2.0",
        "findings.component.group": "org.apache.sshd",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.366",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2021-30129",
        "findings.vulnerability.cweId": 772,
        "findings.vulnerability.description": "A vulnerability in sshd-core of Apache Mina SSHD allows an attacker to overflow the server causing an OutOfMemory error. This issue affects the SFTP and port forwarding features of Apache Mina SSHD version 2.0.0 and later versions. It was addressed in Apache Mina SSHD 2.7.0",
        "findings.vulnerability.epssScore": 0.01164,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "93f15f6d-674d-4b76-9115-6f52ac2a4f30",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Missing Release of Resource after Effective Lifetime",
        "findings.vulnerability.epssPercentile": 0.59617,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e12668b1-9b7b-4300-8da6-8cda2becf544:93f15f6d-674d-4b76-9115-6f52ac2a4f30",
        "findings.vulnerability.cwes.cweId": 772,
        "findings.vulnerability.cwes.name": "Missing Release of Resource after Effective Lifetime",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/commons-io/commons-io@2.5?type=jar",
        "findings.component.uuid": "97dbd13a-b75a-4aaf-abf7-d34da9b4f128",
        "findings.component.version": "2.5",
        "findings.component.group": "commons-io",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.415",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 4.8,
        "findings.vulnerability.vulnId": "CVE-2021-29425",
        "findings.vulnerability.cweId": 22,
        "findings.vulnerability.description": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "48131773-8b76-4e9c-a2bd-7b4ef3428592",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:97dbd13a-b75a-4aaf-abf7-d34da9b4f128:48131773-8b76-4e9c-a2bd-7b4ef3428592",
        "findings.vulnerability.cwes.cweId": 22,
        "findings.vulnerability.cwes.name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.12?type=jar",
        "findings.component.uuid": "4a8af0ec-e495-4d9d-8910-01986f622a47",
        "findings.component.version": "1.12",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.461",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35515",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "47250b55-ae0a-45bb-b2a0-3cfcbc77ad04",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4a8af0ec-e495-4d9d-8910-01986f622a47:47250b55-ae0a-45bb-b2a0-3cfcbc77ad04",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.12?type=jar",
        "findings.component.uuid": "4a8af0ec-e495-4d9d-8910-01986f622a47",
        "findings.component.version": "1.12",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.495",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35516",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "d700af5e-6afb-4d80-8e43-8ae907567698",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4a8af0ec-e495-4d9d-8910-01986f622a47:d700af5e-6afb-4d80-8e43-8ae907567698",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.12?type=jar",
        "findings.component.uuid": "4a8af0ec-e495-4d9d-8910-01986f622a47",
        "findings.component.version": "1.12",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.53",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-35517",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0d829154-7261-4554-b5d3-ac4e0d874969",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4a8af0ec-e495-4d9d-8910-01986f622a47:0d829154-7261-4554-b5d3-ac4e0d874969",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.12?type=jar",
        "findings.component.uuid": "4a8af0ec-e495-4d9d-8910-01986f622a47",
        "findings.component.version": "1.12",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.565",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2021-36090",
        "findings.vulnerability.epssPercentile": 0.92735,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
        "findings.vulnerability.epssScore": 0.07767,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "abf15b3e-3937-471f-bd10-251355327db6",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4a8af0ec-e495-4d9d-8910-01986f622a47:abf15b3e-3937-471f-bd10-251355327db6"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.12?type=jar",
        "findings.component.uuid": "4a8af0ec-e495-4d9d-8910-01986f622a47",
        "findings.component.version": "1.12",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.599",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2018-11771",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "196a6610-e2b3-4d31-8c8c-ea652d398c1d",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4a8af0ec-e495-4d9d-8910-01986f622a47:196a6610-e2b3-4d31-8c8c-ea652d398c1d",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-compress",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.commons/commons-compress@1.12?type=jar",
        "findings.component.uuid": "4a8af0ec-e495-4d9d-8910-01986f622a47",
        "findings.component.version": "1.12",
        "findings.component.group": "org.apache.commons",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.634",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.vulnId": "CVE-2018-1324",
        "findings.vulnerability.cweId": 835,
        "findings.vulnerability.description": "A specially crafted ZIP archive can be used to cause an infinite loop inside of Apache Commons Compress' extra field parser used by the ZipFile and ZipArchiveInputStream classes in versions 1.11 to 1.15. This can be used to mount a denial of service attack against services that use Compress' zip package.",
        "findings.vulnerability.epssScore": 0.04398,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3efb55d5-8656-4499-8e11-2a9f24118239",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.epssPercentile": 0.87412,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:4a8af0ec-e495-4d9d-8910-01986f622a47:3efb55d5-8656-4499-8e11-2a9f24118239",
        "findings.vulnerability.cwes.cweId": 835,
        "findings.vulnerability.cwes.name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "groovy",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.codehaus.groovy/groovy@2.4.10?type=jar",
        "findings.component.uuid": "92ef3dc4-cff0-427f-9b3a-0eef239de453",
        "findings.component.version": "2.4.10",
        "findings.component.group": "org.codehaus.groovy",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.681",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2020-17521",
        "findings.vulnerability.epssPercentile": 0.84669,
        "findings.vulnerability.cvssV2BaseScore": 2.1,
        "findings.vulnerability.description": "Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.",
        "findings.vulnerability.epssScore": 0.03812,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "94dfe476-66ce-47a6-b74c-d63cee8a06c1",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:92ef3dc4-cff0-427f-9b3a-0eef239de453:94dfe476-66ce-47a6-b74c-d63cee8a06c1"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "htmlunit",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/net.sourceforge.htmlunit/htmlunit@2.27?type=jar",
        "findings.component.uuid": "61859b26-8d61-4cac-ab67-353f718a1953",
        "findings.component.version": "2.27",
        "findings.component.group": "net.sourceforge.htmlunit",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.733",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.1,
        "findings.vulnerability.vulnId": "CVE-2020-5529",
        "findings.vulnerability.cweId": 665,
        "findings.vulnerability.description": "HtmlUnit prior to 2.37.0 contains code execution vulnerabilities. HtmlUnit initializes Rhino engine improperly, hence a malicious JavScript code can execute arbitrary Java code on the application. Moreover, when embedded in Android application, Android-specific initialization of Rhino engine is done in an improper way, hence a malicious JavaScript code can execute arbitrary Java code on the application.",
        "findings.vulnerability.epssScore": 0.02509,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "26f3969a-f9f2-44d9-b896-6bcaa1827693",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Initialization",
        "findings.vulnerability.epssPercentile": 0.80813,
        "findings.vulnerability.cvssV2BaseScore": 6.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:61859b26-8d61-4cac-ab67-353f718a1953:26f3969a-f9f2-44d9-b896-6bcaa1827693",
        "findings.vulnerability.cwes.cweId": 665,
        "findings.vulnerability.cwes.name": "Improper Initialization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "neko-htmlunit",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/net.sourceforge.htmlunit/neko-htmlunit@2.27?type=jar",
        "findings.component.uuid": "8d3ab2ba-279c-4f73-83fe-81efbe6ab088",
        "findings.component.version": "2.27",
        "findings.component.group": "net.sourceforge.htmlunit",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.781",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2022-28366",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "Certain Neko-related HTML parsers allow a denial of service via crafted Processing Instruction (PI) input that causes excessive heap memory consumption. In particular, this issue exists in HtmlUnit-Neko through 2.26, and is fixed in 2.27. This issue also exists in CyberNeko HTML through 1.9.22 (also affecting OWASP AntiSamy before 1.6.6), but 1.9.22 is the last version of CyberNeko HTML. NOTE: this may be related to CVE-2022-24939.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f1492925-576c-48d9-8695-49c236a1ca84",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8d3ab2ba-279c-4f73-83fe-81efbe6ab088:f1492925-576c-48d9-8695-49c236a1ca84"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "neko-htmlunit",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/net.sourceforge.htmlunit/neko-htmlunit@2.27?type=jar",
        "findings.component.uuid": "8d3ab2ba-279c-4f73-83fe-81efbe6ab088",
        "findings.component.version": "2.27",
        "findings.component.group": "net.sourceforge.htmlunit",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.816",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2022-29546",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "HtmlUnit NekoHtml Parser before 2.61.0 suffers from a denial of service vulnerability. Crafted input associated with the parsing of Processing Instruction (PI) data leads to heap memory consumption. This is similar to CVE-2022-28366 but affects a much later version of the product.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "9c479909-8231-4103-9983-508b15c4acb7",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:8d3ab2ba-279c-4f73-83fe-81efbe6ab088:9c479909-8231-4103-9983-508b15c4acb7"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.11.0?type=jar",
        "findings.component.uuid": "a1e197ba-423e-4fe8-beb0-f0645e468ece",
        "findings.component.version": "2.11.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.861",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2012-0881",
        "findings.vulnerability.cweId": 399,
        "findings.vulnerability.description": "Apache Xerces2 Java Parser before 2.12.0 allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.",
        "findings.vulnerability.epssScore": 0.03718,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "b76ee65c-c18e-4f5e-9ca4-25c2356a0bf0",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Resource Management Errors",
        "findings.vulnerability.epssPercentile": 0.84169,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a1e197ba-423e-4fe8-beb0-f0645e468ece:b76ee65c-c18e-4f5e-9ca4-25c2356a0bf0",
        "findings.vulnerability.cwes.cweId": 399,
        "findings.vulnerability.cwes.name": "Resource Management Errors",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.11.0?type=jar",
        "findings.component.uuid": "a1e197ba-423e-4fe8-beb0-f0645e468ece",
        "findings.component.version": "2.11.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.895",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2013-4002",
        "findings.vulnerability.epssPercentile": 0.98272,
        "findings.vulnerability.cvssV2BaseScore": 7.1,
        "findings.vulnerability.description": "XMLscanner.java in Apache Xerces2 Java Parser before 2.12.0, as used in the Java Runtime Environment (JRE) in IBM Java 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 as well as Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, Java SE Embedded 7u40 and earlier, and possibly other products allows remote attackers to cause a denial of service via vectors related to XML attribute names.",
        "findings.vulnerability.epssScore": 0.45114,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da4db67a-1dc3-4a98-a4b2-d9b858bebe96",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a1e197ba-423e-4fe8-beb0-f0645e468ece:da4db67a-1dc3-4a98-a4b2-d9b858bebe96"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.11.0?type=jar",
        "findings.component.uuid": "a1e197ba-423e-4fe8-beb0-f0645e468ece",
        "findings.component.version": "2.11.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.93",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-23437",
        "findings.vulnerability.cweId": 91,
        "findings.vulnerability.description": "There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.",
        "findings.vulnerability.epssScore": 0.00954,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "13224f9c-4413-43b3-ae80-2b871eac89d4",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "XML Injection (aka Blind XPath Injection)",
        "findings.vulnerability.epssPercentile": 0.34009,
        "findings.vulnerability.cvssV2BaseScore": 7.1,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a1e197ba-423e-4fe8-beb0-f0645e468ece:13224f9c-4413-43b3-ae80-2b871eac89d4",
        "findings.vulnerability.cwes.cweId": 91,
        "findings.vulnerability.cwes.name": "XML Injection (aka Blind XPath Injection)",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "xercesImpl",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/xerces/xercesImpl@2.11.0?type=jar",
        "findings.component.uuid": "a1e197ba-423e-4fe8-beb0-f0645e468ece",
        "findings.component.version": "2.11.0",
        "findings.component.group": "xerces",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:17.965",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2017-10355",
        "findings.vulnerability.epssPercentile": 0.96848,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144; JRockit: R28.3.15. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",
        "findings.vulnerability.epssScore": 0.25256,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "06c23039-2eff-4760-beb6-161d8d017a39",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:a1e197ba-423e-4fe8-beb0-f0645e468ece:06c23039-2eff-4760-beb6-161d8d017a39"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "e6f6f642-41d5-49f6-b45d-9705515a1490",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.011",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2017-9735",
        "findings.vulnerability.cweId": 203,
        "findings.vulnerability.description": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
        "findings.vulnerability.epssScore": 0.03779,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Observable Discrepancy",
        "findings.vulnerability.epssPercentile": 0.84606,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e6f6f642-41d5-49f6-b45d-9705515a1490:785fd8ac-4d9d-4098-8ab9-137e9622c0df",
        "findings.vulnerability.cwes.cweId": 203,
        "findings.vulnerability.cwes.name": "Observable Discrepancy",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "e6f6f642-41d5-49f6-b45d-9705515a1490",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.046",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.1,
        "findings.vulnerability.vulnId": "CVE-2019-10241",
        "findings.vulnerability.cweId": 79,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e6f6f642-41d5-49f6-b45d-9705515a1490:210541d6-c09d-4ec0-8f32-bd267504c749",
        "findings.vulnerability.cwes.cweId": 79,
        "findings.vulnerability.cwes.name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "e6f6f642-41d5-49f6-b45d-9705515a1490",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.08",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-12536",
        "findings.vulnerability.epssPercentile": 0.59999,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
        "findings.vulnerability.epssScore": 0.01183,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "3edbb1cb-0a4d-4fd8-a45b-930d6f003106",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e6f6f642-41d5-49f6-b45d-9705515a1490:3edbb1cb-0a4d-4fd8-a45b-930d6f003106"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-util",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-util@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "e6f6f642-41d5-49f6-b45d-9705515a1490",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.115",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2019-10246",
        "findings.vulnerability.cweId": 200,
        "findings.vulnerability.description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e6f6f642-41d5-49f6-b45d-9705515a1490:02a6e126-8835-44c3-b0a8-07ea31b70c23",
        "findings.vulnerability.cwes.cweId": 200,
        "findings.vulnerability.cwes.name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-io",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-io@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "786370ad-404a-45e2-ab33-710e61ccbc16",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.161",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-28165",
        "findings.vulnerability.cweId": 400,
        "findings.vulnerability.description": "In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",
        "findings.vulnerability.epssScore": 0.15096,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Uncontrolled Resource Consumption",
        "findings.vulnerability.epssPercentile": 0.95676,
        "findings.vulnerability.cvssV2BaseScore": 7.8,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:786370ad-404a-45e2-ab33-710e61ccbc16:ae554f93-b5cb-4d9d-b6e9-d15ad551ff36",
        "findings.vulnerability.cwes.cweId": 400,
        "findings.vulnerability.cwes.name": "Uncontrolled Resource Consumption",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-client",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-client@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "e1e6c52a-ead3-42d8-837a-63dd79d14139",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.207",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:e1e6c52a-ead3-42d8-837a-63dd79d14139:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "53fbaeba-45c9-45b9-bbdb-f9dffac69520",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.254",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:53fbaeba-45c9-45b9-bbdb-f9dffac69520:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 190,
        "findings.vulnerability.cwes.name": "Integer Overflow or Wraparound",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "53fbaeba-45c9-45b9-bbdb-f9dffac69520",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.254",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7657",
        "findings.vulnerability.cweId": 190,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Integer Overflow or Wraparound",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:53fbaeba-45c9-45b9-bbdb-f9dffac69520:da91c0da-39cf-49c1-95b6-7d527e1ed3f7",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "53fbaeba-45c9-45b9-bbdb-f9dffac69520",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.288",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2017-7658",
        "findings.vulnerability.cweId": 444,
        "findings.vulnerability.description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:53fbaeba-45c9-45b9-bbdb-f9dffac69520:5588e19d-e7d8-418a-8f9d-8ea477f87bdd",
        "findings.vulnerability.cwes.cweId": 444,
        "findings.vulnerability.cwes.name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "53fbaeba-45c9-45b9-bbdb-f9dffac69520",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.323",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.vulnId": "CVE-2017-7656",
        "findings.vulnerability.epssPercentile": 0.73293,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.vulnerability.description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",
        "findings.vulnerability.epssScore": 0.01537,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "f2a8d5de-d8a8-4704-8807-10a711733d27",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:53fbaeba-45c9-45b9-bbdb-f9dffac69520:f2a8d5de-d8a8-4704-8807-10a711733d27"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "jetty-http",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.5.v20170502?type=jar",
        "findings.component.uuid": "53fbaeba-45c9-45b9-bbdb-f9dffac69520",
        "findings.component.version": "9.4.5.v20170502",
        "findings.component.group": "org.eclipse.jetty",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.357",
        "findings.vulnerability.severity": "LOW",
        "findings.vulnerability.cvssV3BaseScore": 2.7,
        "findings.vulnerability.vulnId": "CVE-2022-2047",
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.severityRank": 3,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:53fbaeba-45c9-45b9-bbdb-f9dffac69520:0b056ae2-1a32-44a8-8e7a-dc2edce9567d",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "okhttp",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.squareup.okhttp3/okhttp@3.10.0?type=jar",
        "findings.component.uuid": "0103a606-425b-4235-814a-0d33c3659e95",
        "findings.component.version": "3.10.0",
        "findings.component.group": "com.squareup.okhttp3",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.404",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2021-0341",
        "findings.vulnerability.cweId": 295,
        "findings.vulnerability.description": "In verifyHostName of OkHostnameVerifier.java, there is a possible way to accept a certificate for the wrong domain due to improperly used crypto. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-8.1 Android-9 Android-10 Android-11Android ID: A-171980069",
        "findings.vulnerability.epssScore": 0.01156,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "77e46b38-5021-4586-9505-3dd6a22c25fe",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Certificate Validation",
        "findings.vulnerability.epssPercentile": 0.59602,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0103a606-425b-4235-814a-0d33c3659e95:77e46b38-5021-4586-9505-3dd6a22c25fe",
        "findings.vulnerability.cwes.cweId": 295,
        "findings.vulnerability.cwes.name": "Improper Certificate Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "okhttp",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.squareup.okhttp3/okhttp@3.10.0?type=jar",
        "findings.component.uuid": "0103a606-425b-4235-814a-0d33c3659e95",
        "findings.component.version": "3.10.0",
        "findings.component.group": "com.squareup.okhttp3",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.438",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.9,
        "findings.vulnerability.vulnId": "CVE-2018-20200",
        "findings.vulnerability.cweId": 295,
        "findings.vulnerability.description": "** DISPUTED ** CertificatePinner.java in OkHttp 3.x through 3.12.0 allows man-in-the-middle attackers to bypass certificate pinning by changing SSLContext and the boolean values while hooking the application. NOTE: This id is disputed because some parties don't consider this is a vulnerability. Their rationale can be found in https://github.com/square/okhttp/issues/4967.",
        "findings.vulnerability.epssScore": 0.02686,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "1136518d-9f86-40b5-8be1-b4063ed08f2f",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Certificate Validation",
        "findings.vulnerability.epssPercentile": 0.81838,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:0103a606-425b-4235-814a-0d33c3659e95:1136518d-9f86-40b5-8be1-b4063ed08f2f",
        "findings.vulnerability.cwes.cweId": 295,
        "findings.vulnerability.cwes.name": "Improper Certificate Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "gson",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/com.google.code.gson/gson@2.8.4?type=jar",
        "findings.component.uuid": "2a63f48a-68e8-4ca1-bce9-94b4a4635cc2",
        "findings.component.version": "2.8.4",
        "findings.component.group": "com.google.code.gson",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.489",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.5,
        "findings.vulnerability.vulnId": "CVE-2022-25647",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",
        "findings.vulnerability.epssScore": 0.01018,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "194bacbe-57ee-4780-9f4e-07a671a3f440",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.38296,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:2a63f48a-68e8-4ca1-bce9-94b4a4635cc2:194bacbe-57ee-4780-9f4e-07a671a3f440",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-beanutils",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/commons-beanutils/commons-beanutils@1.9.2?type=jar",
        "findings.component.uuid": "ee87c51f-410e-4d1d-845a-647bca64c7f7",
        "findings.component.version": "1.9.2",
        "findings.component.group": "commons-beanutils",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.536",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Improper Input Validation",
        "findings.vulnerability.vulnId": "CVE-2014-0114",
        "findings.vulnerability.epssPercentile": 0.99615,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.vulnerability.cweId": 20,
        "findings.vulnerability.description": "Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to \"manipulate\" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.",
        "findings.vulnerability.epssScore": 0.8439,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "19f06084-9f3e-4be8-8210-cfd18858a8b3",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ee87c51f-410e-4d1d-845a-647bca64c7f7:19f06084-9f3e-4be8-8210-cfd18858a8b3",
        "findings.vulnerability.cwes.cweId": 20,
        "findings.vulnerability.cwes.name": "Improper Input Validation",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "commons-beanutils",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/commons-beanutils/commons-beanutils@1.9.2?type=jar",
        "findings.component.uuid": "ee87c51f-410e-4d1d-845a-647bca64c7f7",
        "findings.component.version": "1.9.2",
        "findings.component.group": "commons-beanutils",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.571",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 7.3,
        "findings.vulnerability.vulnId": "CVE-2019-10086",
        "findings.vulnerability.cweId": 502,
        "findings.vulnerability.description": "In Apache Commons Beanutils 1.9.2, a special BeanIntrospector class was added which allows suppressing the ability for an attacker to access the classloader via the class property available on all Java objects. We, however were not using this by default characteristic of the PropertyUtilsBean.",
        "findings.vulnerability.epssScore": 0.05242,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "19dc65e0-cee3-4d95-9ee4-7327da6e8926",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Deserialization of Untrusted Data",
        "findings.vulnerability.epssPercentile": 0.89105,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:ee87c51f-410e-4d1d-845a-647bca64c7f7:19dc65e0-cee3-4d95-9ee4-7327da6e8926",
        "findings.vulnerability.cwes.cweId": 502,
        "findings.vulnerability.cwes.name": "Deserialization of Untrusted Data",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-context",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-context@5.0.5.RELEASE?type=jar",
        "findings.component.uuid": "003fb281-4ab9-4fd1-b741-03fd555f914c",
        "findings.component.version": "5.0.5.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.617",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.3,
        "findings.vulnerability.vulnId": "CVE-2022-22968",
        "findings.vulnerability.cweId": 178,
        "findings.vulnerability.description": "In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",
        "findings.vulnerability.epssScore": 0.04499,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.epssPercentile": 0.88142,
        "findings.vulnerability.cvssV2BaseScore": 5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:003fb281-4ab9-4fd1-b741-03fd555f914c:a2979dd3-7c1f-4238-ac61-2add2ca9f83a",
        "findings.vulnerability.cwes.cweId": 178,
        "findings.vulnerability.cwes.name": "Improper Handling of Case Sensitivity",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-aop",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-aop@5.0.5.RELEASE?type=jar",
        "findings.component.uuid": "85e7a2f6-a685-4061-abd8-9c4d9a48a713",
        "findings.component.version": "5.0.5.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.662",
        "findings.vulnerability.severity": "HIGH",
        "findings.vulnerability.cvssV3BaseScore": 8.8,
        "findings.vulnerability.vulnId": "CVE-2018-1258",
        "findings.vulnerability.cweId": 863,
        "findings.vulnerability.description": "Spring Framework version 5.0.5 when used in combination with any versions of Spring Security contains an authorization bypass when using method security. An unauthorized malicious user can gain unauthorized access to methods that should be restricted.",
        "findings.vulnerability.epssScore": 0.01532,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "c1012e0d-dbe6-4402-9261-bf30b7424f94",
        "findings.vulnerability.severityRank": 1,
        "findings.vulnerability.cweName": "Incorrect Authorization",
        "findings.vulnerability.epssPercentile": 0.72585,
        "findings.vulnerability.cvssV2BaseScore": 6.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:85e7a2f6-a685-4061-abd8-9c4d9a48a713:c1012e0d-dbe6-4402-9261-bf30b7424f94",
        "findings.vulnerability.cwes.cweId": 863,
        "findings.vulnerability.cwes.name": "Incorrect Authorization",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-beans",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-beans@5.0.5.RELEASE?type=jar",
        "findings.component.uuid": "11263c13-47d6-4517-a444-0c83701b2367",
        "findings.component.version": "5.0.5.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.706",
        "findings.vulnerability.severity": "CRITICAL",
        "findings.vulnerability.cvssV3BaseScore": 9.8,
        "findings.vulnerability.vulnId": "CVE-2022-22965",
        "findings.vulnerability.cweId": 94,
        "findings.vulnerability.description": "A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",
        "findings.vulnerability.epssScore": 0.95668,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.severityRank": 0,
        "findings.vulnerability.cweName": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.epssPercentile": 0.99981,
        "findings.vulnerability.cvssV2BaseScore": 7.5,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:11263c13-47d6-4517-a444-0c83701b2367:019a8ed0-d08e-4547-8c80-8344f6238294",
        "findings.vulnerability.cwes.cweId": 94,
        "findings.vulnerability.cwes.name": "Improper Control of Generation of Code ('Code Injection')",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@5.0.5.RELEASE?type=jar",
        "findings.component.uuid": "7992607f-e02c-417d-aca1-601a5484f6e7",
        "findings.component.version": "5.0.5.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.752",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2018-1257",
        "findings.vulnerability.epssPercentile": 0.6694,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.vulnerability.description": "Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",
        "findings.vulnerability.epssScore": 0.01282,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "90991243-a05e-4a06-b0a5-6988b68fd669",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7992607f-e02c-417d-aca1-601a5484f6e7:90991243-a05e-4a06-b0a5-6988b68fd669"
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "spring-expression",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.springframework/spring-expression@5.0.5.RELEASE?type=jar",
        "findings.component.uuid": "7992607f-e02c-417d-aca1-601a5484f6e7",
        "findings.component.version": "5.0.5.RELEASE",
        "findings.component.group": "org.springframework",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.787",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.5,
        "findings.vulnerability.vulnId": "CVE-2022-22950",
        "findings.vulnerability.cweId": 770,
        "findings.vulnerability.description": "n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",
        "findings.vulnerability.epssScore": 0.00885,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.epssPercentile": 0.25693,
        "findings.vulnerability.cvssV2BaseScore": 4,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:7992607f-e02c-417d-aca1-601a5484f6e7:0713003a-4628-42fc-874b-4493ce4320db",
        "findings.vulnerability.cwes.cweId": 770,
        "findings.vulnerability.cwes.name": "Allocation of Resources Without Limits or Throttling",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "ant",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.ant/ant@1.8.4?type=jar",
        "findings.component.uuid": "18b838f7-5c97-44e8-973a-a69ccc100f44",
        "findings.component.version": "1.8.4",
        "findings.component.group": "org.apache.ant",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.835",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 6.3,
        "findings.vulnerability.vulnId": "CVE-2020-1945",
        "findings.vulnerability.cweId": 668,
        "findings.vulnerability.description": "Apache Ant 1.1 to 1.9.14 and 1.10.0 to 1.10.7 uses the default temporary directory identified by the Java system property java.io.tmpdir for several tasks and may thus leak sensitive information. The fixcrlf and replaceregexp tasks also copy files from the temporary directory back into the build tree allowing an attacker to inject modified source files into the build process.",
        "findings.vulnerability.epssScore": 0.03052,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "8921fd0b-b00c-4a63-8986-9fe692fc1d0b",
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.cweName": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.epssPercentile": 0.82718,
        "findings.vulnerability.cvssV2BaseScore": 3.3,
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:18b838f7-5c97-44e8-973a-a69ccc100f44:8921fd0b-b00c-4a63-8986-9fe692fc1d0b",
        "findings.vulnerability.cwes.cweId": 668,
        "findings.vulnerability.cwes.name": "Exposure of Resource to Wrong Sphere",
        "findings.vulnerability.cwes.id": 0
    },
    {
        "meta.application": "Dependency-Track",
        "meta.version": "4.5.0",
        "meta.timestamp": "2022-07-20T16:13:20Z",
        "project.name": "TestProject",
        "project.description": "auto generated project",
        "project.uuid": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "project.version": "1.0.0",
        "project.team": "testTeam",
        "project.codebase": "TestCodebase",
        "version": "1.1",
        "findings.component.name": "ant",
        "findings.component.project": "587fecc0-9459-40ff-bb25-4a015693c85a",
        "findings.component.purl": "pkg:maven/org.apache.ant/ant@1.8.4?type=jar",
        "findings.component.uuid": "18b838f7-5c97-44e8-973a-a69ccc100f44",
        "findings.component.version": "1.8.4",
        "findings.component.group": "org.apache.ant",
        "findings.attribution.analyzerIdentity": "OSSINDEX_ANALYZER",
        "findings.attribution.attributedOn": "2022-07-20 16:13:18.87",
        "findings.vulnerability.severity": "MEDIUM",
        "findings.vulnerability.cvssV3BaseScore": 5.5,
        "findings.vulnerability.severityRank": 2,
        "findings.vulnerability.vulnId": "CVE-2021-36374",
        "findings.vulnerability.epssPercentile": 0.82635,
        "findings.vulnerability.cvssV2BaseScore": 4.3,
        "findings.vulnerability.description": "When reading a specially crafted ZIP archive, or a derived formats, an Apache Ant build can be made to allocate large amounts of memory that leads to an out of memory error, even for small inputs. This can be used to disrupt builds using Apache Ant. Commonly used derived formats from ZIP archives are for instance JAR files and many office files. Apache Ant prior to 1.9.16 and 1.10.11 were affected.",
        "findings.vulnerability.epssScore": 0.03032,
        "findings.vulnerability.source": "NVD",
        "findings.vulnerability.uuid": "1c64b307-5141-4ec8-9873-180cc0488b8b",
        "findings.analysis.isSuppressed": false,
        "findings.matrix": "587fecc0-9459-40ff-bb25-4a015693c85a:18b838f7-5c97-44e8-973a-a69ccc100f44:1c64b307-5141-4ec8-9873-180cc0488b8b"
    }
]
